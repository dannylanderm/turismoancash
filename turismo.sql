--
-- Script was generated by Devart dbForge Studio for MySQL, Version 7.1.31.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 27/11/2019 10:47:27 p.m.
-- Server version: 5.5.5-10.4.8-MariaDB
-- Client version: 4.1
--


/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

SET NAMES 'utf8';

CREATE TABLE categorialugar (
  catlug_id INT(11) NOT NULL AUTO_INCREMENT,
  catlug_nombre VARCHAR(50) NOT NULL,
  catlug_descripcion VARCHAR(400) NOT NULL,
  catlug_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (catlug_id),
  UNIQUE INDEX UK_categorialugar_nombre (catlug_nombre)
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE persona (
  pers_id INT(11) NOT NULL AUTO_INCREMENT,
  pers_ap_paterno VARCHAR(30) NOT NULL,
  pers_ap_materno VARCHAR(30) NOT NULL,
  pers_nombres VARCHAR(30) NOT NULL,
  pers_correo VARCHAR(50) NOT NULL,
  pers_estado TINYINT(4) NOT NULL,
  PRIMARY KEY (pers_id)
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE rol (
  rol_id INT(11) NOT NULL AUTO_INCREMENT,
  rol_nombre VARCHAR(50) NOT NULL,
  rol_estado TINYINT(4) NOT NULL,
  PRIMARY KEY (rol_id)
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE ruta (
  ruta_id INT(11) NOT NULL AUTO_INCREMENT,
  ruta_descripcion VARCHAR(100) NOT NULL,
  ruta_fecha_reg DATETIME NOT NULL,
  ruta_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (ruta_id),
  INDEX IX_ruta_descripcion (ruta_descripcion)
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE tipoactividad (
  tipoactiv_id INT(11) NOT NULL AUTO_INCREMENT,
  tipoactiv_nombre VARCHAR(50) NOT NULL,
  tipoactiv_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (tipoactiv_id),
  INDEX IX_tipoActividad_nombre (tipoactiv_nombre)
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE tipoingreso (
  tipoing_id INT(11) NOT NULL AUTO_INCREMENT,
  tipoing_nombre VARCHAR(50) NOT NULL,
  tipoing_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (tipoing_id),
  UNIQUE INDEX UK_tipoIngreso_nombre (tipoing_nombre)
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE tipoobjetoturistico (
  tipoobj_id INT(11) NOT NULL AUTO_INCREMENT,
  tipoobj_nombre VARCHAR(50) NOT NULL,
  tipoobj_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (tipoobj_id),
  INDEX IX_tipoObjetoTuristico_nombre (tipoobj_nombre)
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE tiporecomendacion (
  tiporec_id INT(11) NOT NULL AUTO_INCREMENT,
  tiporec_nombre VARCHAR(50) NOT NULL,
  tiporec_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (tiporec_id),
  UNIQUE INDEX UK_tipoRecomendacion_nombre (tiporec_nombre)
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE tipositio (
  tipositio_id INT(11) NOT NULL AUTO_INCREMENT,
  tipositio_nombre VARCHAR(50) NOT NULL,
  tipositio_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (tipositio_id),
  UNIQUE INDEX UK_tipoSitio_nombre (tipositio_nombre)
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE ubigeo (
  ubig_id INT(11) NOT NULL AUTO_INCREMENT,
  ubig_codigo CHAR(6) NOT NULL,
  ubig_dpto_cod INT(11) NOT NULL,
  ubig_prov_cod INT(11) NOT NULL,
  ubig_dist_cod INT(11) NOT NULL,
  ubig_nombre VARCHAR(50) NOT NULL,
  ubig_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (ubig_id),
  INDEX IX_ubigeo_nombre (ubig_nombre),
  UNIQUE INDEX UK_ubigeo_codigo (ubig_codigo)
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE sitio (
  sitio_id INT(11) NOT NULL AUTO_INCREMENT,
  sitio_nombre VARCHAR(50) NOT NULL,
  sitio_tipositio_id INT(11) NOT NULL,
  sitio_latitud_geo DECIMAL(16, 12) NOT NULL,
  sitio_longitud_geo DECIMAL(16, 12) NOT NULL,
  sitio_celular VARCHAR(50) NOT NULL,
  sitio_telefono VARCHAR(50) NOT NULL,
  sitio_webpage VARCHAR(100) NOT NULL,
  sitio_ubig_id INT(11) DEFAULT NULL,
  sitio_direccion VARCHAR(100) NOT NULL,
  sitio_calificacion TINYINT(4) UNSIGNED NOT NULL,
  sitio_situacion TINYINT(4) UNSIGNED NOT NULL,
  sitio_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (sitio_id),
  INDEX IX_sitio_latitud_longitud (sitio_latitud_geo, sitio_longitud_geo),
  INDEX IX_sitio_nombre (sitio_nombre),
  INDEX IX_sitio_ubigeo (sitio_ubig_id),
  CONSTRAINT FK_sitio_tipositio FOREIGN KEY (sitio_tipositio_id)
    REFERENCES tipositio(tipositio_id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT FK_sitio_ubigeo FOREIGN KEY (sitio_ubig_id)
    REFERENCES ubigeo(ubig_id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE tipolugar (
  tipolug_id INT(11) NOT NULL AUTO_INCREMENT,
  tipolug_nombre VARCHAR(50) NOT NULL,
  tipolug_catlug_id INT(11) NOT NULL,
  tipolug_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (tipolug_id),
  UNIQUE INDEX UK_tipoLugar_nombre (tipolug_nombre),
  CONSTRAINT FK_tipolugar_categorialugar FOREIGN KEY (tipolug_catlug_id)
    REFERENCES categorialugar(catlug_id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE usuario (
  usu_id INT(11) NOT NULL AUTO_INCREMENT,
  usu_pers_id INT(11) NOT NULL,
  usu_nombre VARCHAR(30) NOT NULL,
  usu_contrasena VARCHAR(32) NOT NULL,
  usu_rol_id INT(11) NOT NULL,
  usu_fecha_acceso DATETIME DEFAULT 'NULL',
  usu_fecha_reg DATETIME NOT NULL,
  usu_estado TINYINT(4) NOT NULL,
  PRIMARY KEY (usu_id),
  CONSTRAINT FK_usuario_persona FOREIGN KEY (usu_pers_id)
    REFERENCES persona(pers_id) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT FK_usuario_rol FOREIGN KEY (usu_rol_id)
    REFERENCES rol(rol_id) ON DELETE NO ACTION ON UPDATE NO ACTION
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE lugarturistico (
  lug_id INT(11) NOT NULL AUTO_INCREMENT,
  lug_nombre VARCHAR(100) NOT NULL,
  lug_tipolug_id INT(11) NOT NULL,
  lug_latitud_geo DECIMAL(16, 12) NOT NULL,
  lug_longitud_geo DECIMAL(16, 12) NOT NULL,
  lug_altitud DECIMAL(9, 2) NOT NULL,
  lug_tamanio_area DECIMAL(9, 2) NOT NULL,
  lug_foto VARCHAR(256) NOT NULL,
  lug_descripcion VARCHAR(400) NOT NULL,
  lug_ubig_id INT(11) DEFAULT NULL,
  lug_direccion_ref VARCHAR(100) NOT NULL,
  lug_tipoing_id INT(11) NOT NULL,
  lug_calificacion TINYINT(4) UNSIGNED NOT NULL,
  lug_situacion TINYINT(4) UNSIGNED NOT NULL,
  lug_resenia VARCHAR(500) NOT NULL,
  lug_fecha_reg DATETIME NOT NULL,
  lug_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (lug_id),
  INDEX IX_lugarTuristico_lat_geo (lug_latitud_geo, lug_longitud_geo, lug_altitud),
  INDEX IX_lugarTuristico_ubigeo (lug_ubig_id),
  UNIQUE INDEX UK_lugarTuristico_nombre (lug_nombre),
  CONSTRAINT FK_lugarturistico_tipoingreso FOREIGN KEY (lug_tipoing_id)
    REFERENCES tipoingreso(tipoing_id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT FK_lugarturistico_tipolugar FOREIGN KEY (lug_tipolug_id)
    REFERENCES tipolugar(tipolug_id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT FK_lugarturistico_ubigeo FOREIGN KEY (lug_ubig_id)
    REFERENCES ubigeo(ubig_id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE actividades (
  activ_lug_id INT(11) NOT NULL,
  activ_tipoactiv_id INT(11) NOT NULL,
  activ_situacion TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (activ_lug_id, activ_tipoactiv_id),
  CONSTRAINT FK_actividades_lugarturistico FOREIGN KEY (activ_lug_id)
    REFERENCES lugarturistico(lug_id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT FK_actividades_tipoactividad FOREIGN KEY (activ_tipoactiv_id)
    REFERENCES tipoactividad(tipoactiv_id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE calendariovisita (
  calend_id INT(11) NOT NULL AUTO_INCREMENT,
  calend_lug_id INT(11) NOT NULL,
  calend_nro INT(11) NOT NULL,
  calend_fecha_ini DATE NOT NULL,
  calend_fecha_fin DATE NOT NULL,
  calend_hora_ini TIME(6) NOT NULL,
  calend_hora_fin TIME(6) NOT NULL,
  calend_situacion TINYINT(4) UNSIGNED NOT NULL,
  calend_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (calend_id),
  INDEX IX_calendariovisita_fecha (calend_fecha_ini, calend_fecha_fin),
  UNIQUE INDEX UK_calendariovisita_nro (calend_lug_id, calend_nro),
  CONSTRAINT FK_calendariovisita_lugarturistico FOREIGN KEY (calend_lug_id)
    REFERENCES lugarturistico(lug_id) ON DELETE NO ACTION ON UPDATE NO ACTION
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE cercania (
  cerca_lug_id INT(11) NOT NULL,
  cerca_sitio_id INT(11) NOT NULL,
  cerca_distancia DECIMAL(11, 4) NOT NULL,
  PRIMARY KEY (cerca_lug_id, cerca_sitio_id),
  CONSTRAINT FK_cercania_lugarturistico FOREIGN KEY (cerca_lug_id)
    REFERENCES lugarturistico(lug_id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT FK_cercania_sitio FOREIGN KEY (cerca_sitio_id)
    REFERENCES sitio(sitio_id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE galeria (
  gal_id INT(11) NOT NULL AUTO_INCREMENT,
  gal_lug_id INT(11) NOT NULL,
  gal_foto VARCHAR(256) NOT NULL,
  gal_foto_descripcion VARCHAR(500) NOT NULL,
  gal_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (gal_id),
  INDEX IX_galeria_foto (gal_foto(191)),
  CONSTRAINT FK_galeria_lugarturistico FOREIGN KEY (gal_lug_id)
    REFERENCES lugarturistico(lug_id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE objetoturistico (
  obj_id INT(11) NOT NULL AUTO_INCREMENT,
  obj_nombre VARCHAR(50) NOT NULL,
  obj_tipoobj_id INT(11) NOT NULL,
  obj_foto VARCHAR(256) NOT NULL,
  obj_comentario VARCHAR(500) NOT NULL,
  obj_fecha_datacion DATETIME NOT NULL,
  obj_lug_id INT(11) NOT NULL,
  obj_situacion TINYINT(4) UNSIGNED NOT NULL,
  obj_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (obj_id),
  INDEX IX_objetoTuristico_fecha_datacion (obj_fecha_datacion),
  INDEX IX_objetoTuristico_foto (obj_foto(191)),
  UNIQUE INDEX UK_objetoTuristico_nombre (obj_nombre),
  CONSTRAINT FK_objetoturistico_lugarturistico FOREIGN KEY (obj_lug_id)
    REFERENCES lugarturistico(lug_id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT FK_objetoturistico_tipoobjetoturistico FOREIGN KEY (obj_tipoobj_id)
    REFERENCES tipoobjetoturistico(tipoobj_id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE recomendacion (
  rec_id INT(11) NOT NULL AUTO_INCREMENT,
  rec_lug_id INT(11) NOT NULL,
  rec_tiporec_id INT(11) NOT NULL,
  rec_descripcion VARCHAR(200) NOT NULL,
  rec_estado TINYINT(4) UNSIGNED NOT NULL,
  PRIMARY KEY (rec_id),
  CONSTRAINT FK_recomendacion_lugarturistico FOREIGN KEY (rec_lug_id)
    REFERENCES lugarturistico(lug_id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT FK_recomendacion_tiporecomendacion FOREIGN KEY (rec_tiporec_id)
    REFERENCES tiporecomendacion(tiporec_id) ON DELETE NO ACTION ON UPDATE NO ACTION
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

CREATE TABLE rutadet (
  rutad_ruta_id INT(11) NOT NULL,
  rutad_lug_id INT(11) NOT NULL,
  rutad_nro_ord INT(11) NOT NULL,
  rutad_distancia DECIMAL(11, 4) NOT NULL,
  PRIMARY KEY (rutad_ruta_id, rutad_lug_id, rutad_nro_ord),
  CONSTRAINT FK_rutadet_lugarturistico FOREIGN KEY (rutad_lug_id)
    REFERENCES lugarturistico(lug_id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT FK_rutadet_ruta FOREIGN KEY (rutad_ruta_id)
    REFERENCES ruta(ruta_id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

DELIMITER $$

CREATE PROCEDURE pa_actividades_activate(
	IN _activ_lug_id int(11),
	IN _activ_tipoactiv_id int(11)
)
BEGIN
	-- actividades no tiene columna estado
END
$$

CREATE PROCEDURE pa_actividades_delete(
	IN _activ_lug_id int(11),
	IN _activ_tipoactiv_id int(11)
)
BEGIN
	-- actividades no tiene columna estado
END
$$

CREATE PROCEDURE pa_actividades_getByID(
	IN _activ_lug_id int(11),
	IN _activ_tipoactiv_id int(11)
)
BEGIN
	SELECT lug_id, lug_nombre, lug_descripcion, tipoactiv_id, tipoactiv_nombre, activ_situacion
	FROM actividades activ
		INNER JOIN lugarturistico lug ON activ.activ_lug_id = lug.lug_id
		INNER JOIN tipoactividad tipoactiv ON activ.activ_tipoactiv_id = tipoactiv.tipoactiv_id
	WHERE activ.activ_lug_id = _activ_lug_id
		AND activ.activ_tipoactiv_id = _activ_tipoactiv_id;
END
$$

CREATE PROCEDURE pa_actividades_insert(
	IN _activ_lug_id int(11),
	IN _activ_tipoactiv_id int(11),
	IN _activ_situacion tinyint(4) unsigned
)
BEGIN
	INSERT INTO actividades (
		activ_lug_id,
		activ_tipoactiv_id,
		activ_situacion
	)
	VALUES (
		_activ_lug_id,
		_activ_tipoactiv_id,
		1
	);
END
$$

CREATE PROCEDURE pa_actividades_list(
	IN _buscar varchar(50)
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT lug_id, lug_nombre, lug_descripcion, tipoactiv_id, tipoactiv_nombre, activ_situacion
	FROM actividades activ
		INNER JOIN lugarturistico lug ON activ.activ_lug_id = lug.lug_id
		INNER JOIN tipoactividad tipoactiv ON activ.activ_tipoactiv_id = tipoactiv.tipoactiv_id;
END
$$

CREATE PROCEDURE pa_actividades_listByLugar(
    IN _lugar  varchar(50),
    IN _buscar varchar(50)
)
BEGIN
    SET @aux = _buscar;
    SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');
    SET _lugar = IF(_lugar <> '', concat('%', replace(_lugar, ' ', '%'), '%'), '%');

    SELECT lug_id, lug_nombre, lug_descripcion, tipoactiv_id, tipoactiv_nombre, activ_situacion
    FROM actividades activ
        INNER JOIN lugarturistico lug ON activ.activ_lug_id = lug.lug_id
        INNER JOIN tipoactividad tipoactiv ON activ.activ_tipoactiv_id = tipoactiv.tipoactiv_id
    WHERE lug.lug_nombre LIKE _lugar
      AND tipoactiv.tipoactiv_nombre LIKE _buscar;
END
$$

CREATE PROCEDURE pa_actividades_listCbo(
	IN _activ_lug_id int(11),
	IN _activ_tipoactiv_id int(11)
)
BEGIN
	SELECT lug_id, lug_nombre, lug_descripcion, tipoactiv_id, tipoactiv_nombre, activ_situacion
	FROM actividades activ
		INNER JOIN lugarturistico lug ON activ.activ_lug_id = lug.lug_id
		INNER JOIN tipoactividad tipoactiv ON activ.activ_tipoactiv_id = tipoactiv.tipoactiv_id;
END
$$

CREATE PROCEDURE pa_actividades_update(
	IN _activ_lug_id int(11),
	IN _activ_tipoactiv_id int(11),
	IN _activ_situacion tinyint(4) unsigned
)
BEGIN
	UPDATE actividades
	SET activ_lug_id = _activ_lug_id,
		activ_tipoactiv_id = _activ_tipoactiv_id,
		activ_situacion = _activ_situacion
	WHERE activ_lug_id = _activ_lug_id
	  AND activ_tipoactiv_id = _activ_tipoactiv_id;
END
$$

CREATE PROCEDURE pa_calendariovisita_activate(
	IN _calend_id int(11)
)
BEGIN
	UPDATE calendariovisita
	SET calend_estado = 1
	WHERE calend_id = _calend_id;
END
$$

CREATE PROCEDURE pa_calendariovisita_delete(
	IN _calend_id int(11)
)
BEGIN
	UPDATE calendariovisita
	SET calend_estado = 0
	WHERE calend_id = _calend_id;
END
$$

CREATE PROCEDURE pa_calendariovisita_getByID(
	IN _calend_id int(11)
)
BEGIN
	SELECT calend_id, lug_id, lug_nombre, lug_descripcion, calend_nro, calend_fecha_ini,
		   calend_fecha_fin, calend_hora_ini, calend_hora_fin, calend_situacion,
		   calend_estado
	FROM calendariovisita calend
		INNER JOIN lugarturistico lug ON calend.calend_lug_id = lug.lug_id
	WHERE calend.calend_id = _calend_id;
END
$$

CREATE PROCEDURE pa_calendariovisita_insert(
	OUT _calend_id int(11),
	IN _calend_lug_id int(11),
	IN _calend_nro int(11),
	IN _calend_fecha_ini date,
	IN _calend_fecha_fin date,
	IN _calend_hora_ini time(6),
	IN _calend_hora_fin time(6),
	IN _calend_situacion tinyint(4) unsigned
)
BEGIN
	INSERT INTO calendariovisita (
		calend_lug_id,
		calend_nro,
		calend_fecha_ini,
		calend_fecha_fin,
		calend_hora_ini,
		calend_hora_fin,
		calend_situacion,
		calend_estado
	)
	VALUES (
		_calend_lug_id,
		_calend_nro,
		_calend_fecha_ini,
		_calend_fecha_fin,
		_calend_hora_ini,
		_calend_hora_fin,
		1,
		1
	);
	SET _calend_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_calendariovisita_list(
	IN _buscar varchar(50),
	IN _calend_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT calend_id, lug_id, lug_nombre, lug_descripcion, calend_nro, calend_fecha_ini,
		   calend_fecha_fin, calend_hora_ini, calend_hora_fin, calend_situacion,
		   calend_estado
	FROM calendariovisita calend
		INNER JOIN lugarturistico lug ON calend.calend_lug_id = lug.lug_id
	WHERE calend.calend_estado = _calend_estado;
END
$$

CREATE PROCEDURE pa_calendariovisita_listCbo(
	IN _calend_id int(11)
)
BEGIN
	SELECT calend_id, lug_id, lug_nombre, lug_descripcion, calend_nro, calend_fecha_ini,
		   calend_fecha_fin, calend_hora_ini, calend_hora_fin, calend_situacion,
		   calend_estado
	FROM calendariovisita calend
		INNER JOIN lugarturistico lug ON calend.calend_lug_id = lug.lug_id
	WHERE calend.calend_estado = 1 OR (calend.calend_id = _calend_id);
END
$$

CREATE PROCEDURE pa_calendariovisita_update(
	IN _calend_id int(11),
	IN _calend_lug_id int(11),
	IN _calend_nro int(11),
	IN _calend_fecha_ini date,
	IN _calend_fecha_fin date,
	IN _calend_hora_ini time(6),
	IN _calend_hora_fin time(6),
	IN _calend_situacion tinyint(4) unsigned
)
BEGIN
	UPDATE calendariovisita
	SET calend_lug_id = _calend_lug_id,
		calend_nro = _calend_nro,
		calend_fecha_ini = _calend_fecha_ini,
		calend_fecha_fin = _calend_fecha_fin,
		calend_hora_ini = _calend_hora_ini,
		calend_hora_fin = _calend_hora_fin,
		calend_situacion = _calend_situacion
	WHERE calend_id = _calend_id;
END
$$

CREATE PROCEDURE pa_categorialugar_activate(
	IN _catlug_id int(11)
)
BEGIN
	UPDATE categorialugar
	SET catlug_estado = 1
	WHERE catlug_id = _catlug_id;
END
$$

CREATE PROCEDURE pa_categorialugar_delete(
	IN _catlug_id int(11)
)
BEGIN
	UPDATE categorialugar
	SET catlug_estado = 0
	WHERE catlug_id = _catlug_id;
END
$$

CREATE PROCEDURE pa_categorialugar_getByID(
	IN _catlug_id int(11)
)
BEGIN
	SELECT catlug_id, catlug_nombre, catlug_descripcion, catlug_estado
	FROM categorialugar catlug
	WHERE catlug.catlug_id = _catlug_id;
END
$$

CREATE PROCEDURE pa_categorialugar_insert(
	OUT _catlug_id int(11),
	IN _catlug_nombre varchar(50),
	IN _catlug_descripcion varchar(400)
)
BEGIN
	INSERT INTO categorialugar (
		catlug_nombre,
		catlug_descripcion,
		catlug_estado
	)
	VALUES (
		_catlug_nombre,
		_catlug_descripcion,
		1
	);
	SET _catlug_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_categorialugar_list(
	IN _buscar varchar(50),
	IN _catlug_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT catlug_id, catlug_nombre, catlug_descripcion, catlug_estado
	FROM categorialugar catlug
	WHERE catlug.catlug_estado = _catlug_estado
	  AND (catlug.catlug_nombre LIKE _buscar
		OR catlug.catlug_descripcion LIKE _buscar);
END
$$

CREATE PROCEDURE pa_categorialugar_listCbo(
	IN _catlug_id int(11)
)
BEGIN
	SELECT catlug_id, catlug_nombre, catlug_descripcion, catlug_estado
	FROM categorialugar catlug
	WHERE catlug.catlug_estado = 1 OR (catlug.catlug_id = _catlug_id);
END
$$

CREATE PROCEDURE pa_categorialugar_update(
	IN _catlug_id int(11),
	IN _catlug_nombre varchar(50),
	IN _catlug_descripcion varchar(400)
)
BEGIN
	UPDATE categorialugar
	SET catlug_nombre = _catlug_nombre,
		catlug_descripcion = _catlug_descripcion
	WHERE catlug_id = _catlug_id;
END
$$

CREATE PROCEDURE pa_cercania_activate(
	IN _cerca_lug_id int(11),
	IN _cerca_sitio_id int(11)
)
BEGIN
	-- cercania no tiene columna estado
END
$$

CREATE PROCEDURE pa_cercania_delete(
	IN _cerca_lug_id int(11),
	IN _cerca_sitio_id int(11)
)
BEGIN
	-- cercania no tiene columna estado
END
$$

CREATE PROCEDURE pa_cercania_getByID(
	IN _cerca_lug_id int(11),
	IN _cerca_sitio_id int(11)
)
BEGIN
	SELECT lug_id, lug_nombre, lug_descripcion, sitio_id, sitio_nombre, cerca_distancia
	FROM cercania cerca
		INNER JOIN lugarturistico lug ON cerca.cerca_lug_id = lug.lug_id
		INNER JOIN sitio sitio ON cerca.cerca_sitio_id = sitio.sitio_id
	WHERE cerca.cerca_lug_id = _cerca_lug_id
		AND cerca.cerca_sitio_id = _cerca_sitio_id;
END
$$

CREATE PROCEDURE pa_cercania_insert(
	IN _cerca_lug_id int(11),
	IN _cerca_sitio_id int(11),
	IN _cerca_distancia decimal(11, 4)
)
BEGIN
	INSERT INTO cercania (
		cerca_lug_id,
		cerca_sitio_id,
		cerca_distancia
	)
	VALUES (
		_cerca_lug_id,
		_cerca_sitio_id,
		_cerca_distancia
	);
END
$$

CREATE PROCEDURE pa_cercania_list(
	IN _buscar varchar(50)
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT lug_id, lug_nombre, lug_descripcion, sitio_id, sitio_nombre, cerca_distancia
	FROM cercania cerca
		INNER JOIN lugarturistico lug ON cerca.cerca_lug_id = lug.lug_id
		INNER JOIN sitio sitio ON cerca.cerca_sitio_id = sitio.sitio_id;
END
$$

CREATE PROCEDURE pa_cercania_listCbo(
	IN _cerca_lug_id int(11),
	IN _cerca_sitio_id int(11)
)
BEGIN
	SELECT lug_id, lug_nombre, lug_descripcion, sitio_id, sitio_nombre, cerca_distancia
	FROM cercania cerca
		INNER JOIN lugarturistico lug ON cerca.cerca_lug_id = lug.lug_id
		INNER JOIN sitio sitio ON cerca.cerca_sitio_id = sitio.sitio_id;
END
$$

CREATE PROCEDURE pa_cercania_update(
	IN _cerca_lug_id int(11),
	IN _cerca_sitio_id int(11),
	IN _cerca_distancia decimal(11, 4)
)
BEGIN
	UPDATE cercania
	SET cerca_lug_id = _cerca_lug_id,
		cerca_sitio_id = _cerca_sitio_id,
		cerca_distancia = _cerca_distancia
	WHERE cerca_lug_id = _cerca_lug_id
	  AND cerca_sitio_id = _cerca_sitio_id;
END
$$

CREATE PROCEDURE pa_galeria_activate(
	IN _gal_id int(11)
)
BEGIN
	UPDATE galeria
	SET gal_estado = 1
	WHERE gal_id = _gal_id;
END
$$

CREATE PROCEDURE pa_galeria_delete(
	IN _gal_id int(11)
)
BEGIN
	UPDATE galeria
	SET gal_estado = 0
	WHERE gal_id = _gal_id;
END
$$

CREATE PROCEDURE pa_galeria_getByID(
	IN _gal_id int(11)
)
BEGIN
	SELECT gal_id, lug_id, lug_nombre, lug_descripcion, gal_foto, gal_foto_descripcion,
		   gal_estado
	FROM galeria gal
		INNER JOIN lugarturistico lug ON gal.gal_lug_id = lug.lug_id
	WHERE gal.gal_id = _gal_id;
END
$$

CREATE PROCEDURE pa_galeria_insert(
	OUT _gal_id int(11),
	IN _gal_lug_id int(11),
	IN _gal_foto varchar(256),
	IN _gal_foto_descripcion varchar(500)
)
BEGIN
	INSERT INTO galeria (
		gal_lug_id,
		gal_foto,
		gal_foto_descripcion,
		gal_estado
	)
	VALUES (
		_gal_lug_id,
		_gal_foto,
		_gal_foto_descripcion,
		1
	);
	SET _gal_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_galeria_list(
	IN _buscar varchar(50),
	IN _gal_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT gal_id, lug_id, lug_nombre, lug_descripcion, gal_foto, gal_foto_descripcion,
		   gal_estado
	FROM galeria gal
		INNER JOIN lugarturistico lug ON gal.gal_lug_id = lug.lug_id
	WHERE gal.gal_estado = _gal_estado
	  AND (gal.gal_foto_descripcion LIKE _buscar);
END
$$

CREATE PROCEDURE pa_galeria_listCbo(
	IN _gal_id int(11)
)
BEGIN
	SELECT gal_id, lug_id, lug_nombre, lug_descripcion, gal_foto, gal_foto_descripcion,
		   gal_estado
	FROM galeria gal
		INNER JOIN lugarturistico lug ON gal.gal_lug_id = lug.lug_id
	WHERE gal.gal_estado = 1 OR (gal.gal_id = _gal_id);
END
$$

CREATE PROCEDURE pa_galeria_update(
	IN _gal_id int(11),
	IN _gal_lug_id int(11),
	IN _gal_foto varchar(256),
	IN _gal_foto_descripcion varchar(500)
)
BEGIN
	UPDATE galeria
	SET gal_lug_id = _gal_lug_id,
		gal_foto = _gal_foto,
		gal_foto_descripcion = _gal_foto_descripcion
	WHERE gal_id = _gal_id;
END
$$

CREATE PROCEDURE pa_lugarturistico_activate(
	IN _lug_id int(11)
)
BEGIN
	UPDATE lugarturistico
	SET lug_estado = 1
	WHERE lug_id = _lug_id;
END
$$

CREATE PROCEDURE pa_lugarturistico_delete(
	IN _lug_id int(11)
)
BEGIN
	UPDATE lugarturistico
	SET lug_estado = 0
	WHERE lug_id = _lug_id;
END
$$

CREATE PROCEDURE pa_lugarturistico_getByID(
	IN _lug_id int(11)
)
BEGIN
	SELECT lug_id, lug_nombre, tipolug_id, tipolug_nombre, lug_latitud_geo, lug_longitud_geo,
		   lug_altitud, lug_tamanio_area, lug_foto, lug_descripcion, ubig_id, ubig_nombre,
		   lug_direccion_ref, tipoing_id, tipoing_nombre, lug_calificacion, lug_situacion,
		   lug_resenia, lug_fecha_reg, lug_estado
	FROM lugarturistico lug
		INNER JOIN tipoingreso tipoing ON lug.lug_tipoing_id = tipoing.tipoing_id
		INNER JOIN tipolugar tipolug ON lug.lug_tipolug_id = tipolug.tipolug_id
		LEFT JOIN ubigeo ubig ON lug.lug_ubig_id = ubig.ubig_id
	WHERE lug.lug_id = _lug_id;
END
$$

CREATE PROCEDURE pa_lugarturistico_insert(
	OUT _lug_id int(11),
	IN _lug_nombre varchar(100),
	IN _lug_tipolug_id int(11),
	IN _lug_latitud_geo decimal(16, 12),
	IN _lug_longitud_geo decimal(16, 12),
	IN _lug_altitud decimal(9, 2),
	IN _lug_tamanio_area decimal(9, 2),
	IN _lug_foto varchar(256),
	IN _lug_descripcion varchar(400),
	IN _lug_ubig_id int(11),
	IN _lug_direccion_ref varchar(100),
	IN _lug_tipoing_id int(11),
	IN _lug_calificacion tinyint(4) unsigned,
	IN _lug_situacion tinyint(4) unsigned,
	IN _lug_resenia varchar(500)
)
BEGIN
	SET _lug_ubig_id = IF(_lug_ubig_id = 0, NULL, _lug_ubig_id);

	INSERT INTO lugarturistico (
		lug_nombre,
		lug_tipolug_id,
		lug_latitud_geo,
		lug_longitud_geo,
		lug_altitud,
		lug_tamanio_area,
		lug_foto,
		lug_descripcion,
		lug_ubig_id,
		lug_direccion_ref,
		lug_tipoing_id,
		lug_calificacion,
		lug_situacion,
		lug_resenia,
		lug_fecha_reg,
		lug_estado
	)
	VALUES (
		_lug_nombre,
		_lug_tipolug_id,
		_lug_latitud_geo,
		_lug_longitud_geo,
		_lug_altitud,
		_lug_tamanio_area,
		_lug_foto,
		_lug_descripcion,
		_lug_ubig_id,
		_lug_direccion_ref,
		_lug_tipoing_id,
		_lug_calificacion,
		1,
		_lug_resenia,
		NOW(),
		1
	);
	SET _lug_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_lugarturistico_list(
	IN _buscar varchar(50),
	IN _lug_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT lug_id, lug_nombre, tipolug_id, tipolug_nombre, lug_latitud_geo, lug_longitud_geo,
		   lug_altitud, lug_tamanio_area, lug_foto, lug_descripcion, ubig_id, ubig_nombre,
		   lug_direccion_ref, tipoing_id, tipoing_nombre, lug_calificacion, lug_situacion,
		   lug_resenia, lug_fecha_reg, lug_estado
	FROM lugarturistico lug
		INNER JOIN tipoingreso tipoing ON lug.lug_tipoing_id = tipoing.tipoing_id
		INNER JOIN tipolugar tipolug ON lug.lug_tipolug_id = tipolug.tipolug_id
		LEFT JOIN ubigeo ubig ON lug.lug_ubig_id = ubig.ubig_id
	WHERE lug.lug_estado = _lug_estado
	  AND (lug.lug_nombre LIKE _buscar
		OR lug.lug_descripcion LIKE _buscar);
END
$$

CREATE PROCEDURE pa_lugarturistico_listCbo(
	IN _lug_id int(11)
)
BEGIN
	SELECT lug_id, lug_nombre, tipolug_id, tipolug_nombre, lug_latitud_geo, lug_longitud_geo,
		   lug_altitud, lug_tamanio_area, lug_foto, lug_descripcion, ubig_id, ubig_nombre,
		   lug_direccion_ref, tipoing_id, tipoing_nombre, lug_calificacion, lug_situacion,
		   lug_resenia, lug_fecha_reg, lug_estado
	FROM lugarturistico lug
		INNER JOIN tipoingreso tipoing ON lug.lug_tipoing_id = tipoing.tipoing_id
		INNER JOIN tipolugar tipolug ON lug.lug_tipolug_id = tipolug.tipolug_id
		LEFT JOIN ubigeo ubig ON lug.lug_ubig_id = ubig.ubig_id
	WHERE lug.lug_estado = 1 OR (lug.lug_id = _lug_id);
END
$$

CREATE PROCEDURE pa_lugarturistico_list_m(
    IN _buscar varchar(50),
    IN _lug_estado tinyint(4) unsigned
)
BEGIN
    SET @aux = _buscar;
    SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

    SELECT lug_id, lug_nombre, tipolug_id, tipolug_nombre, lug_latitud_geo, lug_longitud_geo,
        lug_altitud, lug_foto, ubig_id, ubig_nombre, lug_direccion_ref, lug_calificacion,
        lug_situacion, lug_fecha_reg, lug_estado
    FROM lugarturistico lug
        INNER JOIN tipoingreso tipoing ON lug.lug_tipoing_id = tipoing.tipoing_id
        INNER JOIN tipolugar tipolug ON lug.lug_tipolug_id = tipolug.tipolug_id
        LEFT JOIN ubigeo ubig ON lug.lug_ubig_id = ubig.ubig_id
    WHERE lug.lug_estado = _lug_estado
        AND (lug.lug_nombre LIKE _buscar
        OR lug.lug_descripcion LIKE _buscar);
END
$$

CREATE PROCEDURE pa_lugarturistico_update(
	IN _lug_id int(11),
	IN _lug_nombre varchar(100),
	IN _lug_tipolug_id int(11),
	IN _lug_latitud_geo decimal(16, 12),
	IN _lug_longitud_geo decimal(16, 12),
	IN _lug_altitud decimal(9, 2),
	IN _lug_tamanio_area decimal(9, 2),
	IN _lug_foto varchar(256),
	IN _lug_descripcion varchar(400),
	IN _lug_ubig_id int(11),
	IN _lug_direccion_ref varchar(100),
	IN _lug_tipoing_id int(11),
	IN _lug_calificacion tinyint(4) unsigned,
	IN _lug_situacion tinyint(4) unsigned,
	IN _lug_resenia varchar(500)
)
BEGIN
	SET _lug_ubig_id = IF(_lug_ubig_id = 0, NULL, _lug_ubig_id);

	UPDATE lugarturistico
	SET lug_nombre = _lug_nombre,
		lug_tipolug_id = _lug_tipolug_id,
		lug_latitud_geo = _lug_latitud_geo,
		lug_longitud_geo = _lug_longitud_geo,
		lug_altitud = _lug_altitud,
		lug_tamanio_area = _lug_tamanio_area,
		lug_foto = _lug_foto,
		lug_descripcion = _lug_descripcion,
		lug_ubig_id = _lug_ubig_id,
		lug_direccion_ref = _lug_direccion_ref,
		lug_tipoing_id = _lug_tipoing_id,
		lug_calificacion = _lug_calificacion,
		lug_situacion = _lug_situacion,
		lug_resenia = _lug_resenia
	WHERE lug_id = _lug_id;
END
$$

CREATE PROCEDURE pa_objetoturistico_activate(
	IN _obj_id int(11)
)
BEGIN
	UPDATE objetoturistico
	SET obj_estado = 1
	WHERE obj_id = _obj_id;
END
$$

CREATE PROCEDURE pa_objetoturistico_delete(
	IN _obj_id int(11)
)
BEGIN
	UPDATE objetoturistico
	SET obj_estado = 0
	WHERE obj_id = _obj_id;
END
$$

CREATE PROCEDURE pa_objetoturistico_getByID(
	IN _obj_id int(11)
)
BEGIN
	SELECT obj_id, obj_nombre, tipoobj_id, tipoobj_nombre, obj_foto, obj_comentario,
		   obj_fecha_datacion, lug_id, lug_nombre, lug_descripcion, obj_situacion,
		   obj_estado
	FROM objetoturistico obj
		INNER JOIN lugarturistico lug ON obj.obj_lug_id = lug.lug_id
		INNER JOIN tipoobjetoturistico tipoobj ON obj.obj_tipoobj_id = tipoobj.tipoobj_id
	WHERE obj.obj_id = _obj_id;
END
$$

CREATE PROCEDURE pa_objetoturistico_insert(
	OUT _obj_id int(11),
	IN _obj_nombre varchar(50),
	IN _obj_tipoobj_id int(11),
	IN _obj_foto varchar(256),
	IN _obj_comentario varchar(500),
	IN _obj_fecha_datacion datetime,
	IN _obj_lug_id int(11),
	IN _obj_situacion tinyint(4) unsigned
)
BEGIN
	INSERT INTO objetoturistico (
		obj_nombre,
		obj_tipoobj_id,
		obj_foto,
		obj_comentario,
		obj_fecha_datacion,
		obj_lug_id,
		obj_situacion,
		obj_estado
	)
	VALUES (
		_obj_nombre,
		_obj_tipoobj_id,
		_obj_foto,
		_obj_comentario,
		_obj_fecha_datacion,
		_obj_lug_id,
		1,
		1
	);
	SET _obj_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_objetoturistico_list(
	IN _buscar varchar(50),
	IN _obj_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT obj_id, obj_nombre, tipoobj_id, tipoobj_nombre, obj_foto, obj_comentario,
		   obj_fecha_datacion, lug_id, lug_nombre, lug_descripcion, obj_situacion,
		   obj_estado
	FROM objetoturistico obj
		INNER JOIN lugarturistico lug ON obj.obj_lug_id = lug.lug_id
		INNER JOIN tipoobjetoturistico tipoobj ON obj.obj_tipoobj_id = tipoobj.tipoobj_id
	WHERE obj.obj_estado = _obj_estado
	  AND (obj.obj_nombre LIKE _buscar);
END
$$

CREATE PROCEDURE pa_objetoturistico_listByLugar(
    IN _lugar varchar(50),
    IN _buscar varchar(50),
    IN _obj_estado tinyint(4) unsigned
)
BEGIN
    SET @aux = _buscar;
    SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');
    SET _lugar = IF(_lugar <> '', concat('%', replace(_lugar, ' ', '%'), '%'), '%');

    SELECT obj_id, obj_nombre, tipoobj_id, tipoobj_nombre, obj_foto, obj_comentario,
        obj_fecha_datacion, lug_id, lug_nombre, lug_descripcion, obj_situacion,
        obj_estado
    FROM objetoturistico obj
        INNER JOIN lugarturistico lug ON obj.obj_lug_id = lug.lug_id
        INNER JOIN tipoobjetoturistico tipoobj ON obj.obj_tipoobj_id = tipoobj.tipoobj_id
    WHERE obj.obj_estado = _obj_estado
        AND (obj.obj_nombre LIKE _buscar) AND (lug_nombre LIKE _lugar);
END
$$

CREATE PROCEDURE pa_objetoturistico_listCbo(
	IN _obj_id int(11)
)
BEGIN
	SELECT obj_id, obj_nombre, tipoobj_id, tipoobj_nombre, obj_foto, obj_comentario,
		   obj_fecha_datacion, lug_id, lug_nombre, lug_descripcion, obj_situacion,
		   obj_estado
	FROM objetoturistico obj
		INNER JOIN lugarturistico lug ON obj.obj_lug_id = lug.lug_id
		INNER JOIN tipoobjetoturistico tipoobj ON obj.obj_tipoobj_id = tipoobj.tipoobj_id
	WHERE obj.obj_estado = 1 OR (obj.obj_id = _obj_id);
END
$$

CREATE PROCEDURE pa_objetoturistico_update(
	IN _obj_id int(11),
	IN _obj_nombre varchar(50),
	IN _obj_tipoobj_id int(11),
	IN _obj_foto varchar(256),
	IN _obj_comentario varchar(500),
	IN _obj_fecha_datacion datetime,
	IN _obj_lug_id int(11),
	IN _obj_situacion tinyint(4) unsigned
)
BEGIN
	UPDATE objetoturistico
	SET obj_nombre = _obj_nombre,
		obj_tipoobj_id = _obj_tipoobj_id,
		obj_foto = _obj_foto,
		obj_comentario = _obj_comentario,
		obj_fecha_datacion = _obj_fecha_datacion,
		obj_lug_id = _obj_lug_id,
		obj_situacion = _obj_situacion
	WHERE obj_id = _obj_id;
END
$$

CREATE PROCEDURE pa_persona_activate(
	IN _pers_id int(11)
)
BEGIN
	UPDATE persona
	SET pers_estado = 1
	WHERE pers_id = _pers_id;
END
$$

CREATE PROCEDURE pa_persona_delete(
	IN _pers_id int(11)
)
BEGIN
	UPDATE persona
	SET pers_estado = 0
	WHERE pers_id = _pers_id;
END
$$

CREATE PROCEDURE pa_persona_getByID(
	IN _pers_id int(11)
)
BEGIN
	SELECT pers_id, pers_ap_paterno, pers_ap_materno, pers_nombres, pers_correo, pers_estado
	FROM persona pers
	WHERE pers.pers_id = _pers_id;
END
$$

CREATE PROCEDURE pa_persona_insert(
	OUT _pers_id int(11),
	IN _pers_ap_paterno varchar(30),
	IN _pers_ap_materno varchar(30),
	IN _pers_nombres varchar(30),
	IN _pers_correo varchar(50)
)
BEGIN
	INSERT INTO persona (
		pers_ap_paterno,
		pers_ap_materno,
		pers_nombres,
		pers_correo,
		pers_estado
	)
	VALUES (
		_pers_ap_paterno,
		_pers_ap_materno,
		_pers_nombres,
		_pers_correo,
		1
	);
	SET _pers_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_persona_list(
	IN _buscar varchar(50),
	IN _pers_estado tinyint(4)
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT pers_id, pers_ap_paterno, pers_ap_materno, pers_nombres, pers_correo, pers_estado
	FROM persona pers
	WHERE pers.pers_estado = _pers_estado
	  AND (pers.pers_ap_paterno LIKE _buscar
		OR pers.pers_ap_materno LIKE _buscar
		OR pers.pers_nombres LIKE _buscar);
END
$$

CREATE PROCEDURE pa_persona_listCbo(
	IN _pers_id int(11)
)
BEGIN
	SELECT pers_id, pers_ap_paterno, pers_ap_materno, pers_nombres, pers_correo, pers_estado
	FROM persona pers
	WHERE pers.pers_estado = 1 OR (pers.pers_id = _pers_id);
END
$$

CREATE PROCEDURE pa_persona_update(
	IN _pers_id int(11),
	IN _pers_ap_paterno varchar(30),
	IN _pers_ap_materno varchar(30),
	IN _pers_nombres varchar(30),
	IN _pers_correo varchar(50)
)
BEGIN
	UPDATE persona
	SET pers_ap_paterno = _pers_ap_paterno,
		pers_ap_materno = _pers_ap_materno,
		pers_nombres = _pers_nombres,
		pers_correo = _pers_correo
	WHERE pers_id = _pers_id;
END
$$

CREATE PROCEDURE pa_recomendacion_activate(
	IN _rec_id int(11)
)
BEGIN
	UPDATE recomendacion
	SET rec_estado = 1
	WHERE rec_id = _rec_id;
END
$$

CREATE PROCEDURE pa_recomendacion_delete(
	IN _rec_id int(11)
)
BEGIN
	UPDATE recomendacion
	SET rec_estado = 0
	WHERE rec_id = _rec_id;
END
$$

CREATE PROCEDURE pa_recomendacion_getByID(
	IN _rec_id int(11)
)
BEGIN
	SELECT rec_id, lug_id, lug_nombre, lug_descripcion, tiporec_id, tiporec_nombre,
		   rec_descripcion, rec_estado
	FROM recomendacion rec
		INNER JOIN lugarturistico lug ON rec.rec_lug_id = lug.lug_id
		INNER JOIN tiporecomendacion tiporec ON rec.rec_tiporec_id = tiporec.tiporec_id
	WHERE rec.rec_id = _rec_id;
END
$$

CREATE PROCEDURE pa_recomendacion_insert(
	OUT _rec_id int(11),
	IN _rec_lug_id int(11),
	IN _rec_tiporec_id int(11),
	IN _rec_descripcion varchar(200)
)
BEGIN
	INSERT INTO recomendacion (
		rec_lug_id,
		rec_tiporec_id,
		rec_descripcion,
		rec_estado
	)
	VALUES (
		_rec_lug_id,
		_rec_tiporec_id,
		_rec_descripcion,
		1
	);
	SET _rec_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_recomendacion_list(
	IN _buscar varchar(50),
	IN _rec_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT rec_id, lug_id, lug_nombre, lug_descripcion, tiporec_id, tiporec_nombre,
		   rec_descripcion, rec_estado
	FROM recomendacion rec
		INNER JOIN lugarturistico lug ON rec.rec_lug_id = lug.lug_id
		INNER JOIN tiporecomendacion tiporec ON rec.rec_tiporec_id = tiporec.tiporec_id
	WHERE rec.rec_estado = _rec_estado
	  AND (rec.rec_descripcion LIKE _buscar);
END
$$

CREATE PROCEDURE pa_recomendacion_listCbo(
	IN _rec_id int(11)
)
BEGIN
	SELECT rec_id, lug_id, lug_nombre, lug_descripcion, tiporec_id, tiporec_nombre,
		   rec_descripcion, rec_estado
	FROM recomendacion rec
		INNER JOIN lugarturistico lug ON rec.rec_lug_id = lug.lug_id
		INNER JOIN tiporecomendacion tiporec ON rec.rec_tiporec_id = tiporec.tiporec_id
	WHERE rec.rec_estado = 1 OR (rec.rec_id = _rec_id);
END
$$

CREATE PROCEDURE pa_recomendacion_update(
	IN _rec_id int(11),
	IN _rec_lug_id int(11),
	IN _rec_tiporec_id int(11),
	IN _rec_descripcion varchar(200)
)
BEGIN
	UPDATE recomendacion
	SET rec_lug_id = _rec_lug_id,
		rec_tiporec_id = _rec_tiporec_id,
		rec_descripcion = _rec_descripcion
	WHERE rec_id = _rec_id;
END
$$

CREATE PROCEDURE pa_rol_activate(
	IN _rol_id int(11)
)
BEGIN
	UPDATE rol
	SET rol_estado = 1
	WHERE rol_id = _rol_id;
END
$$

CREATE PROCEDURE pa_rol_delete(
	IN _rol_id int(11)
)
BEGIN
	UPDATE rol
	SET rol_estado = 0
	WHERE rol_id = _rol_id;
END
$$

CREATE PROCEDURE pa_rol_getByID(
	IN _rol_id int(11)
)
BEGIN
	SELECT rol_id, rol_nombre, rol_estado
	FROM rol rol
	WHERE rol.rol_id = _rol_id;
END
$$

CREATE PROCEDURE pa_rol_insert(
	OUT _rol_id int(11),
	IN _rol_nombre varchar(50)
)
BEGIN
	INSERT INTO rol (
		rol_nombre,
		rol_estado
	)
	VALUES (
		_rol_nombre,
		1
	);
	SET _rol_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_rol_list(
	IN _buscar varchar(50),
	IN _rol_estado tinyint(4)
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT rol_id, rol_nombre, rol_estado
	FROM rol rol
	WHERE rol.rol_estado = _rol_estado
	  AND (rol.rol_nombre LIKE _buscar);
END
$$

CREATE PROCEDURE pa_rol_listCbo(
	IN _rol_id int(11)
)
BEGIN
	SELECT rol_id, rol_nombre, rol_estado
	FROM rol rol
	WHERE rol.rol_estado = 1 OR (rol.rol_id = _rol_id);
END
$$

CREATE PROCEDURE pa_rol_update(
	IN _rol_id int(11),
	IN _rol_nombre varchar(50)
)
BEGIN
	UPDATE rol
	SET rol_nombre = _rol_nombre
	WHERE rol_id = _rol_id;
END
$$

CREATE PROCEDURE pa_rutadet_activate(
	IN _rutad_ruta_id int(11),
	IN _rutad_lug_id int(11),
	IN _rutad_nro_ord int(11)
)
BEGIN
	-- rutadet no tiene columna estado
END
$$

CREATE PROCEDURE pa_rutadet_delete(
	IN _rutad_ruta_id int(11),
	IN _rutad_lug_id int(11),
	IN _rutad_nro_ord int(11)
)
BEGIN
	-- rutadet no tiene columna estado
END
$$

CREATE PROCEDURE pa_rutadet_getByID(
	IN _rutad_ruta_id int(11),
	IN _rutad_lug_id int(11),
	IN _rutad_nro_ord int(11)
)
BEGIN
	SELECT ruta_id, ruta_descripcion, lug_id, lug_nombre, lug_descripcion, rutad_nro_ord,
		   rutad_distancia
	FROM rutadet rutad
		INNER JOIN lugarturistico lug ON rutad.rutad_lug_id = lug.lug_id
		INNER JOIN ruta ruta ON rutad.rutad_ruta_id = ruta.ruta_id
	WHERE rutad.rutad_ruta_id = _rutad_ruta_id
		AND rutad.rutad_lug_id = _rutad_lug_id
		AND rutad.rutad_nro_ord = _rutad_nro_ord;
END
$$

CREATE PROCEDURE pa_rutadet_insert(
	IN _rutad_ruta_id int(11),
	IN _rutad_lug_id int(11),
	IN _rutad_nro_ord int(11),
	IN _rutad_distancia decimal(11, 4)
)
BEGIN
	INSERT INTO rutadet (
		rutad_ruta_id,
		rutad_lug_id,
		rutad_nro_ord,
		rutad_distancia
	)
	VALUES (
		_rutad_ruta_id,
		_rutad_lug_id,
		_rutad_nro_ord,
		_rutad_distancia
	);
END
$$

CREATE PROCEDURE pa_rutadet_list(
	IN _buscar varchar(50)
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT ruta_id, ruta_descripcion, lug_id, lug_nombre, lug_descripcion, rutad_nro_ord,
		   rutad_distancia
	FROM rutadet rutad
		INNER JOIN lugarturistico lug ON rutad.rutad_lug_id = lug.lug_id
		INNER JOIN ruta ruta ON rutad.rutad_ruta_id = ruta.ruta_id;
END
$$

CREATE PROCEDURE pa_rutadet_listCbo(
	IN _rutad_ruta_id int(11),
	IN _rutad_lug_id int(11),
	IN _rutad_nro_ord int(11)
)
BEGIN
	SELECT ruta_id, ruta_descripcion, lug_id, lug_nombre, lug_descripcion, rutad_nro_ord,
		   rutad_distancia
	FROM rutadet rutad
		INNER JOIN lugarturistico lug ON rutad.rutad_lug_id = lug.lug_id
		INNER JOIN ruta ruta ON rutad.rutad_ruta_id = ruta.ruta_id;
END
$$

CREATE PROCEDURE pa_rutadet_update(
	IN _rutad_ruta_id int(11),
	IN _rutad_lug_id int(11),
	IN _rutad_nro_ord int(11),
	IN _rutad_distancia decimal(11, 4)
)
BEGIN
	UPDATE rutadet
	SET rutad_ruta_id = _rutad_ruta_id,
		rutad_lug_id = _rutad_lug_id,
		rutad_nro_ord = _rutad_nro_ord,
		rutad_distancia = _rutad_distancia
	WHERE rutad_ruta_id = _rutad_ruta_id
	  AND rutad_lug_id = _rutad_lug_id
	  AND rutad_nro_ord = _rutad_nro_ord;
END
$$

CREATE PROCEDURE pa_ruta_activate(
	IN _ruta_id int(11)
)
BEGIN
	UPDATE ruta
	SET ruta_estado = 1
	WHERE ruta_id = _ruta_id;
END
$$

CREATE PROCEDURE pa_ruta_delete(
	IN _ruta_id int(11)
)
BEGIN
	UPDATE ruta
	SET ruta_estado = 0
	WHERE ruta_id = _ruta_id;
END
$$

CREATE PROCEDURE pa_ruta_getByID(
	IN _ruta_id int(11)
)
BEGIN
	SELECT ruta_id, ruta_descripcion, ruta_fecha_reg, ruta_estado
	FROM ruta ruta
	WHERE ruta.ruta_id = _ruta_id;
END
$$

CREATE PROCEDURE pa_ruta_insert(
	OUT _ruta_id int(11),
	IN _ruta_descripcion varchar(100)
)
BEGIN
	INSERT INTO ruta (
		ruta_descripcion,
		ruta_fecha_reg,
		ruta_estado
	)
	VALUES (
		_ruta_descripcion,
		NOW(),
		1
	);
	SET _ruta_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_ruta_list(
	IN _buscar varchar(50),
	IN _ruta_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT ruta_id, ruta_descripcion, ruta_fecha_reg, ruta_estado
	FROM ruta ruta
	WHERE ruta.ruta_estado = _ruta_estado
	  AND (ruta.ruta_descripcion LIKE _buscar);
END
$$

CREATE PROCEDURE pa_ruta_listCbo(
	IN _ruta_id int(11)
)
BEGIN
	SELECT ruta_id, ruta_descripcion, ruta_fecha_reg, ruta_estado
	FROM ruta ruta
	WHERE ruta.ruta_estado = 1 OR (ruta.ruta_id = _ruta_id);
END
$$

CREATE PROCEDURE pa_ruta_update(
	IN _ruta_id int(11),
	IN _ruta_descripcion varchar(100)
)
BEGIN
	UPDATE ruta
	SET ruta_descripcion = _ruta_descripcion
	WHERE ruta_id = _ruta_id;
END
$$

CREATE PROCEDURE pa_sitio_activate(
	IN _sitio_id int(11)
)
BEGIN
	UPDATE sitio
	SET sitio_estado = 1
	WHERE sitio_id = _sitio_id;
END
$$

CREATE PROCEDURE pa_sitio_delete(
	IN _sitio_id int(11)
)
BEGIN
	UPDATE sitio
	SET sitio_estado = 0
	WHERE sitio_id = _sitio_id;
END
$$

CREATE PROCEDURE pa_sitio_getByID(
	IN _sitio_id int(11)
)
BEGIN
	SELECT sitio_id, sitio_nombre, tipositio_id, tipositio_nombre, sitio_latitud_geo,
		   sitio_longitud_geo, sitio_celular, sitio_telefono, sitio_webpage, ubig_id,
		   ubig_nombre, sitio_direccion, sitio_calificacion, sitio_situacion, sitio_estado
	FROM sitio sitio
		INNER JOIN tipositio tipositio ON sitio.sitio_tipositio_id = tipositio.tipositio_id
		LEFT JOIN ubigeo ubig ON sitio.sitio_ubig_id = ubig.ubig_id
	WHERE sitio.sitio_id = _sitio_id;
END
$$

CREATE PROCEDURE pa_sitio_insert(
	OUT _sitio_id int(11),
	IN _sitio_nombre varchar(50),
	IN _sitio_tipositio_id int(11),
	IN _sitio_latitud_geo decimal(16, 12),
	IN _sitio_longitud_geo decimal(16, 12),
	IN _sitio_celular varchar(50),
	IN _sitio_telefono varchar(50),
	IN _sitio_webpage varchar(100),
	IN _sitio_ubig_id int(11),
	IN _sitio_direccion varchar(100),
	IN _sitio_calificacion tinyint(4) unsigned,
	IN _sitio_situacion tinyint(4) unsigned
)
BEGIN
    set _sitio_ubig_id = if (_sitio_ubig_id = 0, null, _sitio_ubig_id);
	INSERT INTO sitio (
		sitio_nombre,
		sitio_tipositio_id,
		sitio_latitud_geo,
		sitio_longitud_geo,
		sitio_celular,
		sitio_telefono,
		sitio_webpage,
		sitio_ubig_id,
		sitio_direccion,
		sitio_calificacion,
		sitio_situacion,
		sitio_estado
	)
	VALUES (
		_sitio_nombre,
		_sitio_tipositio_id,
		_sitio_latitud_geo,
		_sitio_longitud_geo,
		_sitio_celular,
		_sitio_telefono,
		_sitio_webpage,
		_sitio_ubig_id,
		_sitio_direccion,
		_sitio_calificacion,
		1,
		1
	);
	SET _sitio_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_sitio_list(
	IN _buscar varchar(50),
	IN _sitio_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT sitio_id, sitio_nombre, tipositio_id, tipositio_nombre, sitio_latitud_geo,
		   sitio_longitud_geo, sitio_celular, sitio_telefono, sitio_webpage, ubig_id,
		   ubig_nombre, sitio_direccion, sitio_calificacion, sitio_situacion, sitio_estado
	FROM sitio sitio
		INNER JOIN tipositio tipositio ON sitio.sitio_tipositio_id = tipositio.tipositio_id
		LEFT JOIN ubigeo ubig ON sitio.sitio_ubig_id = ubig.ubig_id
	WHERE sitio.sitio_estado = _sitio_estado
	  AND (sitio.sitio_nombre LIKE _buscar);
END
$$

CREATE PROCEDURE pa_sitio_listCbo(
	IN _sitio_id int(11)
)
BEGIN
	SELECT sitio_id, sitio_nombre, tipositio_id, tipositio_nombre, sitio_latitud_geo,
		   sitio_longitud_geo, sitio_celular, sitio_telefono, sitio_webpage, ubig_id,
		   ubig_nombre, sitio_direccion, sitio_calificacion, sitio_situacion, sitio_estado
	FROM sitio sitio
		INNER JOIN tipositio tipositio ON sitio.sitio_tipositio_id = tipositio.tipositio_id
		LEFT JOIN ubigeo ubig ON sitio.sitio_ubig_id = ubig.ubig_id
	WHERE sitio.sitio_estado = 1 OR (sitio.sitio_id = _sitio_id);
END
$$

CREATE PROCEDURE pa_sitio_update(
	IN _sitio_id int(11),
	IN _sitio_nombre varchar(50),
	IN _sitio_tipositio_id int(11),
	IN _sitio_latitud_geo decimal(16, 12),
	IN _sitio_longitud_geo decimal(16, 12),
	IN _sitio_celular varchar(50),
	IN _sitio_telefono varchar(50),
	IN _sitio_webpage varchar(100),
	IN _sitio_ubig_id int(11),
	IN _sitio_direccion varchar(100),
	IN _sitio_calificacion tinyint(4) unsigned,
	IN _sitio_situacion tinyint(4) unsigned
)
BEGIN
    set _sitio_ubig_id = if (_sitio_ubig_id = 0, null, _sitio_ubig_id);
	UPDATE sitio
	SET sitio_nombre = _sitio_nombre,
		sitio_tipositio_id = _sitio_tipositio_id,
		sitio_latitud_geo = _sitio_latitud_geo,
		sitio_longitud_geo = _sitio_longitud_geo,
		sitio_celular = _sitio_celular,
		sitio_telefono = _sitio_telefono,
		sitio_webpage = _sitio_webpage,
		sitio_ubig_id = _sitio_ubig_id,
		sitio_direccion = _sitio_direccion,
		sitio_calificacion = _sitio_calificacion,
		sitio_situacion = _sitio_situacion
	WHERE sitio_id = _sitio_id;
END
$$

CREATE PROCEDURE pa_tipoactividad_activate(
	IN _tipoactiv_id int(11)
)
BEGIN
	UPDATE tipoactividad
	SET tipoactiv_estado = 1
	WHERE tipoactiv_id = _tipoactiv_id;
END
$$

CREATE PROCEDURE pa_tipoactividad_delete(
	IN _tipoactiv_id int(11)
)
BEGIN
	UPDATE tipoactividad
	SET tipoactiv_estado = 0
	WHERE tipoactiv_id = _tipoactiv_id;
END
$$

CREATE PROCEDURE pa_tipoactividad_getByID(
	IN _tipoactiv_id int(11)
)
BEGIN
	SELECT tipoactiv_id, tipoactiv_nombre, tipoactiv_estado
	FROM tipoactividad tipoactiv
	WHERE tipoactiv.tipoactiv_id = _tipoactiv_id;
END
$$

CREATE PROCEDURE pa_tipoactividad_insert(
	OUT _tipoactiv_id int(11),
	IN _tipoactiv_nombre varchar(50)
)
BEGIN
	INSERT INTO tipoactividad (
		tipoactiv_nombre,
		tipoactiv_estado
	)
	VALUES (
		_tipoactiv_nombre,
		1
	);
	SET _tipoactiv_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_tipoactividad_list(
	IN _buscar varchar(50),
	IN _tipoactiv_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT tipoactiv_id, tipoactiv_nombre, tipoactiv_estado
	FROM tipoactividad tipoactiv
	WHERE tipoactiv.tipoactiv_estado = _tipoactiv_estado
	  AND (tipoactiv.tipoactiv_nombre LIKE _buscar);
END
$$

CREATE PROCEDURE pa_tipoactividad_listCbo(
	IN _tipoactiv_id int(11)
)
BEGIN
	SELECT tipoactiv_id, tipoactiv_nombre, tipoactiv_estado
	FROM tipoactividad tipoactiv
	WHERE tipoactiv.tipoactiv_estado = 1 OR (tipoactiv.tipoactiv_id = _tipoactiv_id);
END
$$

CREATE PROCEDURE pa_tipoactividad_update(
	IN _tipoactiv_id int(11),
	IN _tipoactiv_nombre varchar(50)
)
BEGIN
	UPDATE tipoactividad
	SET tipoactiv_nombre = _tipoactiv_nombre
	WHERE tipoactiv_id = _tipoactiv_id;
END
$$

CREATE PROCEDURE pa_tipoingreso_activate(
	IN _tipoing_id int(11)
)
BEGIN
	UPDATE tipoingreso
	SET tipoing_estado = 1
	WHERE tipoing_id = _tipoing_id;
END
$$

CREATE PROCEDURE pa_tipoingreso_delete(
	IN _tipoing_id int(11)
)
BEGIN
	UPDATE tipoingreso
	SET tipoing_estado = 0
	WHERE tipoing_id = _tipoing_id;
END
$$

CREATE PROCEDURE pa_tipoingreso_getByID(
	IN _tipoing_id int(11)
)
BEGIN
	SELECT tipoing_id, tipoing_nombre, tipoing_estado
	FROM tipoingreso tipoing
	WHERE tipoing.tipoing_id = _tipoing_id;
END
$$

CREATE PROCEDURE pa_tipoingreso_insert(
	OUT _tipoing_id int(11),
	IN _tipoing_nombre varchar(50)
)
BEGIN
	INSERT INTO tipoingreso (
		tipoing_nombre,
		tipoing_estado
	)
	VALUES (
		_tipoing_nombre,
		1
	);
	SET _tipoing_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_tipoingreso_list(
	IN _buscar varchar(50),
	IN _tipoing_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT tipoing_id, tipoing_nombre, tipoing_estado
	FROM tipoingreso tipoing
	WHERE tipoing.tipoing_estado = _tipoing_estado
	  AND (tipoing.tipoing_nombre LIKE _buscar);
END
$$

CREATE PROCEDURE pa_tipoingreso_listCbo(
	IN _tipoing_id int(11)
)
BEGIN
	SELECT tipoing_id, tipoing_nombre, tipoing_estado
	FROM tipoingreso tipoing
	WHERE tipoing.tipoing_estado = 1 OR (tipoing.tipoing_id = _tipoing_id);
END
$$

CREATE PROCEDURE pa_tipoingreso_update(
	IN _tipoing_id int(11),
	IN _tipoing_nombre varchar(50)
)
BEGIN
	UPDATE tipoingreso
	SET tipoing_nombre = _tipoing_nombre
	WHERE tipoing_id = _tipoing_id;
END
$$

CREATE PROCEDURE pa_tipolugar_activate(
	IN _tipolug_id int(11)
)
BEGIN
	UPDATE tipolugar
	SET tipolug_estado = 1
	WHERE tipolug_id = _tipolug_id;
END
$$

CREATE PROCEDURE pa_tipolugar_delete(
	IN _tipolug_id int(11)
)
BEGIN
	UPDATE tipolugar
	SET tipolug_estado = 0
	WHERE tipolug_id = _tipolug_id;
END
$$

CREATE PROCEDURE pa_tipolugar_getByID(
	IN _tipolug_id int(11)
)
BEGIN
	SELECT tipolug_id, tipolug_nombre, catlug_id, catlug_nombre, catlug_descripcion,
		   tipolug_estado
	FROM tipolugar tipolug
		INNER JOIN categorialugar catlug ON tipolug.tipolug_catlug_id = catlug.catlug_id
	WHERE tipolug.tipolug_id = _tipolug_id;
END
$$

CREATE PROCEDURE pa_tipolugar_insert(
	OUT _tipolug_id int(11),
	IN _tipolug_nombre varchar(50),
	IN _tipolug_catlug_id int(11)
)
BEGIN
	INSERT INTO tipolugar (
		tipolug_nombre,
		tipolug_catlug_id,
		tipolug_estado
	)
	VALUES (
		_tipolug_nombre,
		_tipolug_catlug_id,
		1
	);
	SET _tipolug_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_tipolugar_list(
	IN _buscar varchar(50),
	IN _tipolug_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT tipolug_id, tipolug_nombre, catlug_id, catlug_nombre, catlug_descripcion,
		   tipolug_estado
	FROM tipolugar tipolug
		INNER JOIN categorialugar catlug ON tipolug.tipolug_catlug_id = catlug.catlug_id
	WHERE tipolug.tipolug_estado = _tipolug_estado
	  AND (tipolug.tipolug_nombre LIKE _buscar);
END
$$

CREATE PROCEDURE pa_tipolugar_listCbo(
	IN _tipolug_id int(11)
)
BEGIN
	SELECT tipolug_id, tipolug_nombre, catlug_id, catlug_nombre, catlug_descripcion,
		   tipolug_estado
	FROM tipolugar tipolug
		INNER JOIN categorialugar catlug ON tipolug.tipolug_catlug_id = catlug.catlug_id
	WHERE tipolug.tipolug_estado = 1 OR (tipolug.tipolug_id = _tipolug_id);
END
$$

CREATE PROCEDURE pa_tipolugar_update(
	IN _tipolug_id int(11),
	IN _tipolug_nombre varchar(50),
	IN _tipolug_catlug_id int(11)
)
BEGIN
	UPDATE tipolugar
	SET tipolug_nombre = _tipolug_nombre,
		tipolug_catlug_id = _tipolug_catlug_id
	WHERE tipolug_id = _tipolug_id;
END
$$

CREATE PROCEDURE pa_tipoobjetoturistico_activate(
	IN _tipoobj_id int(11)
)
BEGIN
	UPDATE tipoobjetoturistico
	SET tipoobj_estado = 1
	WHERE tipoobj_id = _tipoobj_id;
END
$$

CREATE PROCEDURE pa_tipoobjetoturistico_delete(
	IN _tipoobj_id int(11)
)
BEGIN
	UPDATE tipoobjetoturistico
	SET tipoobj_estado = 0
	WHERE tipoobj_id = _tipoobj_id;
END
$$

CREATE PROCEDURE pa_tipoobjetoturistico_getByID(
	IN _tipoobj_id int(11)
)
BEGIN
	SELECT tipoobj_id, tipoobj_nombre, tipoobj_estado
	FROM tipoobjetoturistico tipoobj
	WHERE tipoobj.tipoobj_id = _tipoobj_id;
END
$$

CREATE PROCEDURE pa_tipoobjetoturistico_insert(
	OUT _tipoobj_id int(11),
	IN _tipoobj_nombre varchar(50)
)
BEGIN
	INSERT INTO tipoobjetoturistico (
		tipoobj_nombre,
		tipoobj_estado
	)
	VALUES (
		_tipoobj_nombre,
		1
	);
	SET _tipoobj_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_tipoobjetoturistico_list(
	IN _buscar varchar(50),
	IN _tipoobj_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT tipoobj_id, tipoobj_nombre, tipoobj_estado
	FROM tipoobjetoturistico tipoobj
	WHERE tipoobj.tipoobj_estado = _tipoobj_estado
	  AND (tipoobj.tipoobj_nombre LIKE _buscar);
END
$$

CREATE PROCEDURE pa_tipoobjetoturistico_listCbo(
	IN _tipoobj_id int(11)
)
BEGIN
	SELECT tipoobj_id, tipoobj_nombre, tipoobj_estado
	FROM tipoobjetoturistico tipoobj
	WHERE tipoobj.tipoobj_estado = 1 OR (tipoobj.tipoobj_id = _tipoobj_id);
END
$$

CREATE PROCEDURE pa_tipoobjetoturistico_update(
	IN _tipoobj_id int(11),
	IN _tipoobj_nombre varchar(50)
)
BEGIN
	UPDATE tipoobjetoturistico
	SET tipoobj_nombre = _tipoobj_nombre
	WHERE tipoobj_id = _tipoobj_id;
END
$$

CREATE PROCEDURE pa_tiporecomendacion_activate(
	IN _tiporec_id int(11)
)
BEGIN
	UPDATE tiporecomendacion
	SET tiporec_estado = 1
	WHERE tiporec_id = _tiporec_id;
END
$$

CREATE PROCEDURE pa_tiporecomendacion_delete(
	IN _tiporec_id int(11)
)
BEGIN
	UPDATE tiporecomendacion
	SET tiporec_estado = 0
	WHERE tiporec_id = _tiporec_id;
END
$$

CREATE PROCEDURE pa_tiporecomendacion_getByID(
	IN _tiporec_id int(11)
)
BEGIN
	SELECT tiporec_id, tiporec_nombre, tiporec_estado
	FROM tiporecomendacion tiporec
	WHERE tiporec.tiporec_id = _tiporec_id;
END
$$

CREATE PROCEDURE pa_tiporecomendacion_insert(
	OUT _tiporec_id int(11),
	IN _tiporec_nombre varchar(50)
)
BEGIN
	INSERT INTO tiporecomendacion (
		tiporec_nombre,
		tiporec_estado
	)
	VALUES (
		_tiporec_nombre,
		1
	);
	SET _tiporec_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_tiporecomendacion_list(
	IN _buscar varchar(50),
	IN _tiporec_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT tiporec_id, tiporec_nombre, tiporec_estado
	FROM tiporecomendacion tiporec
	WHERE tiporec.tiporec_estado = _tiporec_estado
	  AND (tiporec.tiporec_nombre LIKE _buscar);
END
$$

CREATE PROCEDURE pa_tiporecomendacion_listCbo(
	IN _tiporec_id int(11)
)
BEGIN
	SELECT tiporec_id, tiporec_nombre, tiporec_estado
	FROM tiporecomendacion tiporec
	WHERE tiporec.tiporec_estado = 1 OR (tiporec.tiporec_id = _tiporec_id);
END
$$

CREATE PROCEDURE pa_tiporecomendacion_update(
	IN _tiporec_id int(11),
	IN _tiporec_nombre varchar(50)
)
BEGIN
	UPDATE tiporecomendacion
	SET tiporec_nombre = _tiporec_nombre
	WHERE tiporec_id = _tiporec_id;
END
$$

CREATE PROCEDURE pa_tipositio_activate(
	IN _tipositio_id int(11)
)
BEGIN
	UPDATE tipositio
	SET tipositio_estado = 1
	WHERE tipositio_id = _tipositio_id;
END
$$

CREATE PROCEDURE pa_tipositio_delete(
	IN _tipositio_id int(11)
)
BEGIN
	UPDATE tipositio
	SET tipositio_estado = 0
	WHERE tipositio_id = _tipositio_id;
END
$$

CREATE PROCEDURE pa_tipositio_getByID(
	IN _tipositio_id int(11)
)
BEGIN
	SELECT tipositio_id, tipositio_nombre, tipositio_estado
	FROM tipositio tipositio
	WHERE tipositio.tipositio_id = _tipositio_id;
END
$$

CREATE PROCEDURE pa_tipositio_insert(
	OUT _tipositio_id int(11),
	IN _tipositio_nombre varchar(50)
)
BEGIN
	INSERT INTO tipositio (
		tipositio_nombre,
		tipositio_estado
	)
	VALUES (
		_tipositio_nombre,
		1
	);
	SET _tipositio_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_tipositio_list(
	IN _buscar varchar(50),
	IN _tipositio_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT tipositio_id, tipositio_nombre, tipositio_estado
	FROM tipositio tipositio
	WHERE tipositio.tipositio_estado = _tipositio_estado
	  AND (tipositio.tipositio_nombre LIKE _buscar);
END
$$

CREATE PROCEDURE pa_tipositio_listCbo(
	IN _tipositio_id int(11)
)
BEGIN
	SELECT tipositio_id, tipositio_nombre, tipositio_estado
	FROM tipositio tipositio
	WHERE tipositio.tipositio_estado = 1 OR (tipositio.tipositio_id = _tipositio_id);
END
$$

CREATE PROCEDURE pa_tipositio_update(
	IN _tipositio_id int(11),
	IN _tipositio_nombre varchar(50)
)
BEGIN
	UPDATE tipositio
	SET tipositio_nombre = _tipositio_nombre
	WHERE tipositio_id = _tipositio_id;
END
$$

CREATE PROCEDURE pa_ubigeo_activate(
	IN _ubig_id int(11)
)
BEGIN
	UPDATE ubigeo
	SET ubig_estado = 1
	WHERE ubig_id = _ubig_id;
END
$$

CREATE PROCEDURE pa_ubigeo_delete(
	IN _ubig_id int(11)
)
BEGIN
	UPDATE ubigeo
	SET ubig_estado = 0
	WHERE ubig_id = _ubig_id;
END
$$

CREATE PROCEDURE pa_ubigeo_getByID(
	IN _ubig_id int(11)
)
BEGIN
	SELECT ubig_id, ubig_codigo, ubig_dpto_cod, ubig_prov_cod, ubig_dist_cod, ubig_nombre,
		   ubig_estado
	FROM ubigeo ubig
	WHERE ubig.ubig_id = _ubig_id;
END
$$

CREATE PROCEDURE pa_ubigeo_insert(
	OUT _ubig_id int(11),
	IN _ubig_codigo char(6),
	IN _ubig_dpto_cod int(11),
	IN _ubig_prov_cod int(11),
	IN _ubig_dist_cod int(11),
	IN _ubig_nombre varchar(50)
)
BEGIN
	INSERT INTO ubigeo (
		ubig_codigo,
		ubig_dpto_cod,
		ubig_prov_cod,
		ubig_dist_cod,
		ubig_nombre,
		ubig_estado
	)
	VALUES (
		_ubig_codigo,
		_ubig_dpto_cod,
		_ubig_prov_cod,
		_ubig_dist_cod,
		_ubig_nombre,
		1
	);
	SET _ubig_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_ubigeo_list(
	IN _buscar varchar(50),
	IN _ubig_estado tinyint(4) unsigned
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT ubig_id, ubig_codigo, ubig_dpto_cod, ubig_prov_cod, ubig_dist_cod, ubig_nombre,
		   ubig_estado
	FROM ubigeo ubig
	WHERE ubig.ubig_estado = _ubig_estado
	  AND (ubig.ubig_nombre LIKE _buscar);
END
$$

CREATE PROCEDURE pa_ubigeo_listCbo(
	IN _ubig_id int(11)
)
BEGIN
	SELECT ubig_id, ubig_codigo, ubig_dpto_cod, ubig_prov_cod, ubig_dist_cod, ubig_nombre,
		   ubig_estado
	FROM ubigeo ubig
	WHERE ubig.ubig_estado = 1 OR (ubig.ubig_id = _ubig_id);
END
$$

CREATE PROCEDURE pa_ubigeo_update(
	IN _ubig_id int(11),
	IN _ubig_codigo char(6),
	IN _ubig_dpto_cod int(11),
	IN _ubig_prov_cod int(11),
	IN _ubig_dist_cod int(11),
	IN _ubig_nombre varchar(50)
)
BEGIN
	UPDATE ubigeo
	SET ubig_codigo = _ubig_codigo,
		ubig_dpto_cod = _ubig_dpto_cod,
		ubig_prov_cod = _ubig_prov_cod,
		ubig_dist_cod = _ubig_dist_cod,
		ubig_nombre = _ubig_nombre
	WHERE ubig_id = _ubig_id;
END
$$

CREATE PROCEDURE pa_usuario_activate(
	IN _usu_id int(11)
)
BEGIN
	UPDATE usuario
	SET usu_estado = 1
	WHERE usu_id = _usu_id;
END
$$

CREATE PROCEDURE pa_usuario_delete(
	IN _usu_id int(11)
)
BEGIN
	UPDATE usuario
	SET usu_estado = 0
	WHERE usu_id = _usu_id;
END
$$

CREATE PROCEDURE pa_usuario_getByID(
	IN _usu_id int(11)
)
BEGIN
	SELECT usu_id, pers_id, pers_ap_paterno, pers_ap_materno, pers_nombres, usu_nombre,
		   rol_id, rol_nombre, usu_fecha_acceso, usu_fecha_reg, usu_estado
	FROM usuario usu
		INNER JOIN persona pers ON usu.usu_pers_id = pers.pers_id
		INNER JOIN rol rol ON usu.usu_rol_id = rol.rol_id
	WHERE usu.usu_id = _usu_id;
END
$$

CREATE PROCEDURE pa_usuario_insert(
	OUT _usu_id int(11),
	IN _usu_pers_id int(11),
	IN _usu_nombre varchar(30),
	IN _usu_contrasena varchar(32),
	IN _usu_rol_id int(11)
)
BEGIN
	INSERT INTO usuario (
		usu_pers_id,
		usu_nombre,
		usu_contrasena,
		usu_rol_id,
		usu_fecha_acceso,
		usu_fecha_reg,
		usu_estado
	)
	VALUES (
		_usu_pers_id,
		_usu_nombre,
		_usu_contrasena,
		_usu_rol_id,
		null,
		NOW(),
		1
	);
	SET _usu_id = LAST_INSERT_ID();
END
$$

CREATE PROCEDURE pa_usuario_list(
	IN _buscar varchar(50),
	IN _usu_estado tinyint(4)
)
BEGIN
	SET @aux = _buscar;
	SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

	SELECT usu_id, pers_id, pers_ap_paterno, pers_ap_materno, pers_nombres, usu_nombre,
		   rol_id, rol_nombre, usu_fecha_acceso, usu_fecha_reg, usu_estado
	FROM usuario usu
		INNER JOIN persona pers ON usu.usu_pers_id = pers.pers_id
		INNER JOIN rol rol ON usu.usu_rol_id = rol.rol_id
	WHERE usu.usu_estado = _usu_estado
	  AND (usu.usu_nombre LIKE _buscar);
END
$$

CREATE PROCEDURE pa_usuario_listAll(
    IN _buscar varchar(50)
)
BEGIN
    SET @aux = _buscar;
    SET _buscar = IF(_buscar <> '', concat('%', replace(_buscar, ' ', '%'), '%'), '%');

    SELECT usu_id, pers_id, pers_ap_paterno, pers_ap_materno, pers_nombres, usu_nombre,
        rol_id, rol_nombre, usu_fecha_acceso, usu_fecha_reg, usu_estado
    FROM usuario usu
        INNER JOIN persona pers ON usu.usu_pers_id = pers.pers_id
        INNER JOIN rol rol ON usu.usu_rol_id = rol.rol_id
    WHERE (usu.usu_nombre LIKE _buscar);
END
$$

CREATE PROCEDURE pa_usuario_listCbo(
	IN _usu_id int(11)
)
BEGIN
	SELECT usu_id, pers_id, pers_ap_paterno, pers_ap_materno, pers_nombres, usu_nombre,
		   rol_id, rol_nombre, usu_fecha_acceso, usu_fecha_reg, usu_estado
	FROM usuario usu
		INNER JOIN persona pers ON usu.usu_pers_id = pers.pers_id
		INNER JOIN rol rol ON usu.usu_rol_id = rol.rol_id
	WHERE usu.usu_estado = 1 OR (usu.usu_id = _usu_id);
END
$$

CREATE PROCEDURE pa_usuario_login(
    IN _usu_nombre varchar(30),
    IN _usu_contrasena varchar(32)
)
BEGIN
    SELECT usu_id, pers_id, pers_ap_paterno, pers_ap_materno, pers_nombres, usu_nombre,
        rol_id, rol_nombre, usu_fecha_acceso, usu_fecha_reg, usu_estado
    FROM usuario usu
        INNER JOIN persona pers ON usu.usu_pers_id = pers.pers_id
        INNER JOIN rol rol ON usu.usu_rol_id = rol.rol_id
    WHERE usu.usu_nombre = _usu_nombre AND usu.usu_contrasena = _usu_contrasena;
END
$$

CREATE PROCEDURE pa_usuario_update(
	IN _usu_id int(11),
	IN _usu_pers_id int(11),
	IN _usu_nombre varchar(30),
	IN _usu_rol_id int(11),
	IN _usu_fecha_acceso datetime
)
BEGIN
	UPDATE usuario
	SET usu_pers_id = _usu_pers_id,
		usu_nombre = _usu_nombre,
		usu_rol_id = _usu_rol_id,
		usu_fecha_acceso = _usu_fecha_acceso
	WHERE usu_id = _usu_id;
END
$$

CREATE FUNCTION fn_calcular_distancia_by_geo(lat1 decimal(14, 8),
    lng1 decimal(14, 8),
    lat2 decimal(14, 8),
    lng2 decimal(14, 8)
)
  RETURNS decimal(14,3)
  DETERMINISTIC
BEGIN
    DECLARE distancia_km decimal(14, 3);
    DECLARE r decimal(14, 2);
    DECLARE c decimal(14, 8);
    DECLARE a decimal(14, 8);

    SET r = 6371000; -- radio de la Tierra en metros
    SET c = PI() / 180; -- convertir a radianes

    SET lat1 = lat1 * c;
    SET lng1 = lng1 * c;
    SET lat2 = lat2 * c;
    SET lng2 = lng2 * c;

    SET a = POWER(SIN((lat2 - lat1) / 2), 2) + COS(lat1) * COS(lat2) * POWER(SIN((lng2 - lng1) / 2), 2);
    SET distancia_km = 2 * r * asin(SQRT(a));
    RETURN distancia_km / 1000;
END
$$

CREATE FUNCTION fn_calcular_distancia_sitio(_sitio1_id int, _sitio2_id int
)
  RETURNS decimal(14,3)
  DETERMINISTIC
BEGIN
    DECLARE lat1 decimal(14, 8);
    DECLARE lng1 decimal(14, 8);
    DECLARE lat2 decimal(14, 8);
    DECLARE lng2 decimal(14, 8);

    SET lat1 = (SELECT sitio_latitud_geo FROM sitio WHERE sitio_id = _sitio1_id);
    SET lng1 = (SELECT sitio_longitud_geo FROM sitio WHERE sitio_id = _sitio1_id);
    SET lat2 = (SELECT sitio_latitud_geo FROM sitio WHERE sitio_id = _sitio2_id);
    SET lng2 = (SELECT sitio_longitud_geo FROM sitio WHERE sitio_id = _sitio2_id);

    RETURN fn_calcular_distancia_by_geo(lat1, lng1, lat2, lng2);
END
$$

DELIMITER ;

CREATE 
VIEW v_actividades
AS
	select `lug`.`lug_id` AS `lug_id`,`lug`.`lug_nombre` AS `lug_nombre`,`t`.`tipoactiv_id` AS `tipoactiv_id`,`t`.`tipoactiv_nombre` AS `tipoactiv_nombre`,`act`.`activ_situacion` AS `activ_situacion`,`tlug`.`tipolug_id` AS `tipolug_id`,`tlug`.`tipolug_nombre` AS `tipolug_nombre`,`lug`.`lug_latitud_geo` AS `lug_latitud_geo`,`lug`.`lug_longitud_geo` AS `lug_longitud_geo`,`lug`.`lug_calificacion` AS `lug_calificacion` from (((`actividades` `act` join `tipoactividad` `t` on(`act`.`activ_tipoactiv_id` = `t`.`tipoactiv_id`)) join `lugarturistico` `lug` on(`act`.`activ_lug_id` = `lug`.`lug_id`)) join `tipolugar` `tlug` on(`lug`.`lug_tipolug_id` = `tlug`.`tipolug_id`));

CREATE 
VIEW v_sitios_cercanos
AS
	select `lug`.`lug_id` AS `lug_id`,`lug`.`lug_nombre` AS `lug_nombre`,`s`.`sitio_id` AS `sitio_id`,`s`.`sitio_nombre` AS `sitio_nombre`,`s`.`sitio_latitud_geo` AS `sitio_latitud_geo`,`s`.`sitio_longitud_geo` AS `sitio_longitud_geo`,`t`.`tipositio_id` AS `tipositio_id`,`t`.`tipositio_nombre` AS `tipositio_nombre`,`s`.`sitio_calificacion` AS `sitio_calificacion`,`s`.`sitio_celular` AS `sitio_celular`,`u`.`ubig_id` AS `sitio_ubig_id`,`u`.`ubig_codigo` AS `sitio_ubig_codigo`,`u`.`ubig_nombre` AS `sitio_ubig_nombre` from ((((`lugarturistico` `lug` join `cercania` `c` on(`lug`.`lug_id` = `c`.`cerca_lug_id`)) join `sitio` `s` on(`c`.`cerca_sitio_id` = `s`.`sitio_id`)) join `tipositio` `t` on(`s`.`sitio_tipositio_id` = `t`.`tipositio_id`)) join `ubigeo` `u` on(`s`.`sitio_ubig_id` = `u`.`ubig_id`));

INSERT INTO categorialugar VALUES
(4, 'Sitios naturales', 'Esta categoría agrupa diversos elementos de la naturaleza que, por sus atributos propios son sonsiderados parte "importante" del potencial turístico.', 1),
(5, 'Construcciones históricas', 'Se consideran las diferentes expresiones culturales del país, región o pueblo, tales como los lugares arqueológicos, sitios históricos, entre otros. Son los bienes o elementos creados por el hombre.', 1),
(6, 'Obras contemporaneas', 'Obras actuales', 0);

INSERT INTO persona VALUES
(1, 'Huatangari', 'Perales', 'Isaias', 'huantangari@gmail.com', 1),
(2, 'Loyola', 'Lavado', 'Rodrigo', 'rodrigo@gmail.com', 1),
(3, 'Almendras', 'Robles', 'Oscar', 'oscar@gmail.com', 1);

INSERT INTO rol VALUES
(1, 'Administrador', 1),
(2, 'Turista', 1);


-- Table turismo.ruta does not contain any data (it is empty)

INSERT INTO tipoactividad VALUES
(1, 'Observación del lugar', 1),
(2, 'Paseos en bote', 1),
(3, 'Paseos en caballo', 1),
(4, 'Paseos en lancha', 1),
(5, 'Paseos en bicicleta', 1),
(6, 'Paseo en cuatrimoto', 1),
(7, 'Paseo en motocicleta', 1),
(8, 'Buceo', 1),
(9, 'Canotaje', 1),
(10, 'Esquí acuatico', 1),
(11, 'Natación', 1),
(12, 'Pesca deportiva', 1),
(13, 'Remo', 1),
(14, 'Ciclismo', 1),
(15, 'Montañismo', 1);

INSERT INTO tipoingreso VALUES
(1, 'Libre', 1),
(2, 'Restringido', 1),
(3, 'No permitido', 1);

INSERT INTO tipoobjetoturistico VALUES
(1, 'Huaco', 1),
(2, 'Reliquias', 1),
(3, 'Objetos rituales', 1),
(4, 'Pinturas', 1),
(5, 'Tejidos', 1),
(6, 'Platos tipicos', 1),
(7, 'Bebidas tipicas', 1);

INSERT INTO tiporecomendacion VALUES
(1, 'Ropaje', 1),
(2, 'Comida', 1),
(3, 'Instrumental', 1);

INSERT INTO tipositio VALUES
(1, 'Restaurante', 1),
(2, 'Café', 1),
(3, 'Hospital', 1),
(4, 'Clínica', 1),
(5, 'Boutique', 1),
(6, 'Centro comercial', 1);

INSERT INTO ubigeo VALUES
(1, '010000', 1, 0, 0, 'Amazonas', 1),
(2, '010100', 1, 1, 0, 'Chachapoyas', 1),
(3, '010101', 1, 1, 1, 'Chachapoyas', 1),
(4, '010102', 1, 1, 2, 'Asuncion', 1),
(5, '010103', 1, 1, 3, 'Balsas', 1),
(6, '010104', 1, 1, 4, 'Cheto', 1),
(7, '010105', 1, 1, 5, 'Chiliquin', 1),
(8, '010106', 1, 1, 6, 'Chuquibamba', 1),
(9, '010107', 1, 1, 7, 'Granada', 1),
(10, '010108', 1, 1, 8, 'Huancas', 1),
(11, '010109', 1, 1, 9, 'La Jalca', 1),
(12, '010110', 1, 1, 10, 'Leimebamba', 1),
(13, '010111', 1, 1, 11, 'Levanto', 1),
(14, '010112', 1, 1, 12, 'Magdalena', 1),
(15, '010113', 1, 1, 13, 'Mariscal Castilla', 1),
(16, '010114', 1, 1, 14, 'Molinopampa', 1),
(17, '010115', 1, 1, 15, 'Montevideo', 1),
(18, '010116', 1, 1, 16, 'Olleros', 1),
(19, '010117', 1, 1, 17, 'Quinjalca', 1),
(20, '010118', 1, 1, 18, 'San Francisco de Daguas', 1),
(21, '010119', 1, 1, 19, 'San Isidro de Maino', 1),
(22, '010120', 1, 1, 20, 'Soloco', 1),
(23, '010121', 1, 1, 21, 'Sonche', 1),
(24, '010200', 1, 2, 0, 'Bagua', 1),
(25, '010201', 1, 2, 1, 'Bagua', 1),
(26, '010202', 1, 2, 2, 'Aramango', 1),
(27, '010203', 1, 2, 3, 'Copallin', 1),
(28, '010204', 1, 2, 4, 'El Parco', 1),
(29, '010205', 1, 2, 5, 'Imaza', 1),
(30, '010206', 1, 2, 6, 'La Peca', 1),
(31, '010300', 1, 3, 0, 'Bongara', 1),
(32, '010301', 1, 3, 1, 'Jumbilla', 1),
(33, '010302', 1, 3, 2, 'Chisquilla', 1),
(34, '010303', 1, 3, 3, 'Churuja', 1),
(35, '010304', 1, 3, 4, 'Corosha', 1),
(36, '010305', 1, 3, 5, 'Cuispes', 1),
(37, '010306', 1, 3, 6, 'Florida', 1),
(38, '010307', 1, 3, 7, 'Jazán', 1),
(39, '010308', 1, 3, 8, 'Recta', 1),
(40, '010309', 1, 3, 9, 'San Carlos', 1),
(41, '010310', 1, 3, 10, 'Shipasbamba', 1),
(42, '010311', 1, 3, 11, 'Valera', 1),
(43, '010312', 1, 3, 12, 'Yambrasbamba', 1),
(44, '010400', 1, 4, 0, 'Condorcanqui', 1),
(45, '010401', 1, 4, 1, 'Nieva', 1),
(46, '010402', 1, 4, 2, 'El Cenepa', 1),
(47, '010403', 1, 4, 3, 'Rio Santiago', 1),
(48, '010500', 1, 5, 0, 'Luya', 1),
(49, '010501', 1, 5, 1, 'Lamud', 1),
(50, '010502', 1, 5, 2, 'Camporredondo', 1),
(51, '010503', 1, 5, 3, 'Cocabamba', 1),
(52, '010504', 1, 5, 4, 'Colcamar', 1),
(53, '010505', 1, 5, 5, 'Conila', 1),
(54, '010506', 1, 5, 6, 'Inguilpata', 1),
(55, '010507', 1, 5, 7, 'Longuita', 1),
(56, '010508', 1, 5, 8, 'Lonya Chico', 1),
(57, '010509', 1, 5, 9, 'Luya', 1),
(58, '010510', 1, 5, 10, 'Luya Viejo', 1),
(59, '010511', 1, 5, 11, 'Maria', 1),
(60, '010512', 1, 5, 12, 'Ocalli', 1),
(61, '010513', 1, 5, 13, 'Ocumal', 1),
(62, '010514', 1, 5, 14, 'Pisuquia', 1),
(63, '010515', 1, 5, 15, 'Providencia', 1),
(64, '010516', 1, 5, 16, 'San Cristobal', 1),
(65, '010517', 1, 5, 17, 'San Francisco del Yeso', 1),
(66, '010518', 1, 5, 18, 'San Jeronimo', 1),
(67, '010519', 1, 5, 19, 'San Juan de Lopecancha', 1),
(68, '010520', 1, 5, 20, 'Santa Catalina', 1),
(69, '010521', 1, 5, 21, 'Santo Tomas', 1),
(70, '010522', 1, 5, 22, 'Tingo', 1),
(71, '010523', 1, 5, 23, 'Trita', 1),
(72, '010600', 1, 6, 0, 'Rodriguez de Mendoza', 1),
(73, '010601', 1, 6, 1, 'San Nicolas', 1),
(74, '010602', 1, 6, 2, 'Chirimoto', 1),
(75, '010603', 1, 6, 3, 'Cochamal', 1),
(76, '010604', 1, 6, 4, 'Huambo', 1),
(77, '010605', 1, 6, 5, 'Limabamba', 1),
(78, '010606', 1, 6, 6, 'Longar', 1),
(79, '010607', 1, 6, 7, 'Mariscal Benavides', 1),
(80, '010608', 1, 6, 8, 'Milpuc', 1),
(81, '010609', 1, 6, 9, 'Omia', 1),
(82, '010610', 1, 6, 10, 'Santa Rosa', 1),
(83, '010611', 1, 6, 11, 'Totora', 1),
(84, '010612', 1, 6, 12, 'Vista Alegre', 1),
(85, '010700', 1, 7, 0, 'Utcubamba', 1),
(86, '010701', 1, 7, 1, 'Bagua Grande', 1),
(87, '010702', 1, 7, 2, 'Cajaruro', 1),
(88, '010703', 1, 7, 3, 'Cumba', 1),
(89, '010704', 1, 7, 4, 'El Milagro', 1),
(90, '010705', 1, 7, 5, 'Jamalca', 1),
(91, '010706', 1, 7, 6, 'Lonya Grande', 1),
(92, '010707', 1, 7, 7, 'Yamon', 1),
(93, '020000', 2, 0, 0, 'Ancash', 1),
(94, '020100', 2, 1, 0, 'Huaraz', 1),
(95, '020101', 2, 1, 1, 'Huaraz', 1),
(96, '020102', 2, 1, 2, 'Cochabamba', 1),
(97, '020103', 2, 1, 3, 'Colcabamba', 1),
(98, '020104', 2, 1, 4, 'Huanchay', 1),
(99, '020105', 2, 1, 5, 'Independencia', 1),
(100, '020106', 2, 1, 6, 'Jangas', 1),
(101, '020107', 2, 1, 7, 'La Libertad', 1),
(102, '020108', 2, 1, 8, 'Olleros', 1),
(103, '020109', 2, 1, 9, 'Pampas', 1),
(104, '020110', 2, 1, 10, 'Pariacoto', 1),
(105, '020111', 2, 1, 11, 'Pira', 1),
(106, '020112', 2, 1, 12, 'Tarica', 1),
(107, '020200', 2, 2, 0, 'Aija', 1),
(108, '020201', 2, 2, 1, 'Aija', 1),
(109, '020202', 2, 2, 2, 'Coris', 1),
(110, '020203', 2, 2, 3, 'Huacllan', 1),
(111, '020204', 2, 2, 4, 'La Merced', 1),
(112, '020205', 2, 2, 5, 'Succha', 1),
(113, '020300', 2, 3, 0, 'Antonio Raymondi', 1),
(114, '020301', 2, 3, 1, 'Llamellin', 1),
(115, '020302', 2, 3, 2, 'Aczo', 1),
(116, '020303', 2, 3, 3, 'Chaccho', 1),
(117, '020304', 2, 3, 4, 'Chingas', 1),
(118, '020305', 2, 3, 5, 'Mirgas', 1),
(119, '020306', 2, 3, 6, 'San Juan de Rontoy', 1),
(120, '020400', 2, 4, 0, 'Asuncion', 1),
(121, '020401', 2, 4, 1, 'Chacas', 1),
(122, '020402', 2, 4, 2, 'Acochaca', 1),
(123, '020500', 2, 5, 0, 'Bolognesi', 1),
(124, '020501', 2, 5, 1, 'Chiquian', 1),
(125, '020502', 2, 5, 2, 'Abelardo Pardo Lezameta', 1),
(126, '020503', 2, 5, 3, 'Antonio Raymondi', 1),
(127, '020504', 2, 5, 4, 'Aquia', 1),
(128, '020505', 2, 5, 5, 'Cajacay', 1),
(129, '020506', 2, 5, 6, 'Canis', 1),
(130, '020507', 2, 5, 7, 'Colquioc', 1),
(131, '020508', 2, 5, 8, 'Huallanca', 1),
(132, '020509', 2, 5, 9, 'Huasta', 1),
(133, '020510', 2, 5, 10, 'Huayllacayan', 1),
(134, '020511', 2, 5, 11, 'La Primavera', 1),
(135, '020512', 2, 5, 12, 'Mangas', 1),
(136, '020513', 2, 5, 13, 'Pacllon', 1),
(137, '020514', 2, 5, 14, 'San Miguel de Corpanqui', 1),
(138, '020515', 2, 5, 15, 'Ticllos', 1),
(139, '020600', 2, 6, 0, 'Carhuaz', 1),
(140, '020601', 2, 6, 1, 'Carhuaz', 1),
(141, '020602', 2, 6, 2, 'Acopampa', 1),
(142, '020603', 2, 6, 3, 'Amashca', 1),
(143, '020604', 2, 6, 4, 'Anta', 1),
(144, '020605', 2, 6, 5, 'Ataquero', 1),
(145, '020606', 2, 6, 6, 'Marcara', 1),
(146, '020607', 2, 6, 7, 'Pariahuanca', 1),
(147, '020608', 2, 6, 8, 'San Miguel de Aco', 1),
(148, '020609', 2, 6, 9, 'Shilla', 1),
(149, '020610', 2, 6, 10, 'Tinco', 1),
(150, '020611', 2, 6, 11, 'Yungar', 1),
(151, '020700', 2, 7, 0, 'Carlos Fermin Fitzcarrald', 1),
(152, '020701', 2, 7, 1, 'San Luis', 1),
(153, '020702', 2, 7, 2, 'San Nicolas', 1),
(154, '020703', 2, 7, 3, 'Yauya', 1),
(155, '020800', 2, 8, 0, 'Casma', 1),
(156, '020801', 2, 8, 1, 'Casma', 1),
(157, '020802', 2, 8, 2, 'Buena Vista Alta', 1),
(158, '020803', 2, 8, 3, 'Comandante Noel', 1),
(159, '020804', 2, 8, 4, 'Yautan', 1),
(160, '020900', 2, 9, 0, 'Corongo', 1),
(161, '020901', 2, 9, 1, 'Corongo', 1),
(162, '020902', 2, 9, 2, 'Aco', 1),
(163, '020903', 2, 9, 3, 'Bambas', 1),
(164, '020904', 2, 9, 4, 'Cusca', 1),
(165, '020905', 2, 9, 5, 'La Pampa', 1),
(166, '020906', 2, 9, 6, 'Yanac', 1),
(167, '020907', 2, 9, 7, 'Yupan', 1),
(168, '021000', 2, 10, 0, 'Huari', 1),
(169, '021001', 2, 10, 1, 'Huari', 1),
(170, '021002', 2, 10, 2, 'Anra', 1),
(171, '021003', 2, 10, 3, 'Cajay', 1),
(172, '021004', 2, 10, 4, 'Chavin de Huantar', 1),
(173, '021005', 2, 10, 5, 'Huacachi', 1),
(174, '021006', 2, 10, 6, 'Huacchis', 1),
(175, '021007', 2, 10, 7, 'Huachis', 1),
(176, '021008', 2, 10, 8, 'Huantar', 1),
(177, '021009', 2, 10, 9, 'Masin', 1),
(178, '021010', 2, 10, 10, 'Paucas', 1),
(179, '021011', 2, 10, 11, 'Ponto', 1),
(180, '021012', 2, 10, 12, 'Rahuapampa', 1),
(181, '021013', 2, 10, 13, 'Rapayan', 1),
(182, '021014', 2, 10, 14, 'San Marcos', 1),
(183, '021015', 2, 10, 15, 'San Pedro de Chana', 1),
(184, '021016', 2, 10, 16, 'Uco', 1),
(185, '021100', 2, 11, 0, 'Huarmey', 1),
(186, '021101', 2, 11, 1, 'Huarmey', 1),
(187, '021102', 2, 11, 2, 'Cochapeti', 1),
(188, '021103', 2, 11, 3, 'Culebras', 1),
(189, '021104', 2, 11, 4, 'Huayan', 1),
(190, '021105', 2, 11, 5, 'Malvas', 1),
(191, '021200', 2, 12, 0, 'Huaylas', 1),
(192, '021201', 2, 12, 1, 'Caraz', 1),
(193, '021202', 2, 12, 2, 'Huallanca', 1),
(194, '021203', 2, 12, 3, 'Huata', 1),
(195, '021204', 2, 12, 4, 'Huaylas', 1),
(196, '021205', 2, 12, 5, 'Mato', 1),
(197, '021206', 2, 12, 6, 'Pamparomas', 1),
(198, '021207', 2, 12, 7, 'Pueblo Libre', 1),
(199, '021208', 2, 12, 8, 'Santa Cruz', 1),
(200, '021209', 2, 12, 9, 'Santo Toribio', 1),
(201, '021210', 2, 12, 10, 'Yuracmarca', 1),
(202, '021300', 2, 13, 0, 'Mariscal Luzuriaga', 1),
(203, '021301', 2, 13, 1, 'Piscobamba', 1),
(204, '021302', 2, 13, 2, 'Casca', 1),
(205, '021303', 2, 13, 3, 'Eleazar Guzman Barron', 1),
(206, '021304', 2, 13, 4, 'Fidel Olivas Escudero', 1),
(207, '021305', 2, 13, 5, 'Llama', 1),
(208, '021306', 2, 13, 6, 'Llumpa', 1),
(209, '021307', 2, 13, 7, 'Lucma', 1),
(210, '021308', 2, 13, 8, 'Musga', 1),
(211, '021400', 2, 14, 0, 'Ocros', 1),
(212, '021401', 2, 14, 1, 'Ocros', 1),
(213, '021402', 2, 14, 2, 'Acas', 1),
(214, '021403', 2, 14, 3, 'Cajamarquilla', 1),
(215, '021404', 2, 14, 4, 'Carhuapampa', 1),
(216, '021405', 2, 14, 5, 'Cochas', 1),
(217, '021406', 2, 14, 6, 'Congas', 1),
(218, '021407', 2, 14, 7, 'Llipa', 1),
(219, '021408', 2, 14, 8, 'San Cristobal de Rajan', 1),
(220, '021409', 2, 14, 9, 'San Pedro', 1),
(221, '021410', 2, 14, 10, 'Santiago de Chilcas', 1),
(222, '021500', 2, 15, 0, 'Pallasca', 1),
(223, '021501', 2, 15, 1, 'Cabana', 1),
(224, '021502', 2, 15, 2, 'Bolognesi', 1),
(225, '021503', 2, 15, 3, 'Conchucos', 1),
(226, '021504', 2, 15, 4, 'Huacaschuque', 1),
(227, '021505', 2, 15, 5, 'Huandoval', 1),
(228, '021506', 2, 15, 6, 'Lacabamba', 1),
(229, '021507', 2, 15, 7, 'Llapo', 1),
(230, '021508', 2, 15, 8, 'Pallasca', 1),
(231, '021509', 2, 15, 9, 'Pampas', 1),
(232, '021510', 2, 15, 10, 'Santa Rosa', 1),
(233, '021511', 2, 15, 11, 'Tauca', 1),
(234, '021600', 2, 16, 0, 'Pomabamba', 1),
(235, '021601', 2, 16, 1, 'Pomabamba', 1),
(236, '021602', 2, 16, 2, 'Huayllan', 1),
(237, '021603', 2, 16, 3, 'Parobamba', 1),
(238, '021604', 2, 16, 4, 'Quinuabamba', 1),
(239, '021700', 2, 17, 0, 'Recuay', 1),
(240, '021701', 2, 17, 1, 'Recuay', 1),
(241, '021702', 2, 17, 2, 'Catac', 1),
(242, '021703', 2, 17, 3, 'Cotaparaco', 1),
(243, '021704', 2, 17, 4, 'Huayllapampa', 1),
(244, '021705', 2, 17, 5, 'Llacllin', 1),
(245, '021706', 2, 17, 6, 'Marca', 1),
(246, '021707', 2, 17, 7, 'Pampas Chico', 1),
(247, '021708', 2, 17, 8, 'Pararin', 1),
(248, '021709', 2, 17, 9, 'Tapacocha', 1),
(249, '021710', 2, 17, 10, 'Ticapampa', 1),
(250, '021800', 2, 18, 0, 'Santa', 1),
(251, '021801', 2, 18, 1, 'Chimbote', 1),
(252, '021802', 2, 18, 2, 'Caceres del Peru', 1),
(253, '021803', 2, 18, 3, 'Coishco', 1),
(254, '021804', 2, 18, 4, 'Macate', 1),
(255, '021805', 2, 18, 5, 'Moro', 1),
(256, '021806', 2, 18, 6, 'Nepeña', 1),
(257, '021807', 2, 18, 7, 'Samanco', 1),
(258, '021808', 2, 18, 8, 'Santa', 1),
(259, '021809', 2, 18, 9, 'Nuevo Chimbote', 1),
(260, '021900', 2, 19, 0, 'Sihuas', 1),
(261, '021901', 2, 19, 1, 'Sihuas', 1),
(262, '021902', 2, 19, 2, 'Acobamba', 1),
(263, '021903', 2, 19, 3, 'Alfonso Ugarte', 1),
(264, '021904', 2, 19, 4, 'Cashapampa', 1),
(265, '021905', 2, 19, 5, 'Chingalpo', 1),
(266, '021906', 2, 19, 6, 'Huayllabamba', 1),
(267, '021907', 2, 19, 7, 'Quiches', 1),
(268, '021908', 2, 19, 8, 'Ragash', 1),
(269, '021909', 2, 19, 9, 'San Juan', 1),
(270, '021910', 2, 19, 10, 'Sicsibamba', 1),
(271, '022000', 2, 20, 0, 'Yungay', 1),
(272, '022001', 2, 20, 1, 'Yungay', 1),
(273, '022002', 2, 20, 2, 'Cascapara', 1),
(274, '022003', 2, 20, 3, 'Mancos', 1),
(275, '022004', 2, 20, 4, 'Matacoto', 1),
(276, '022005', 2, 20, 5, 'Quillo', 1),
(277, '022006', 2, 20, 6, 'Ranrahirca', 1),
(278, '022007', 2, 20, 7, 'Shupluy', 1),
(279, '022008', 2, 20, 8, 'Yanama', 1),
(280, '030000', 3, 0, 0, 'Apurimac', 1),
(281, '030100', 3, 1, 0, 'Abancay', 1),
(282, '030101', 3, 1, 1, 'Abancay', 1),
(283, '030102', 3, 1, 2, 'Chacoche', 1),
(284, '030103', 3, 1, 3, 'Circa', 1),
(285, '030104', 3, 1, 4, 'Curahuasi', 1),
(286, '030105', 3, 1, 5, 'Huanipaca', 1),
(287, '030106', 3, 1, 6, 'Lambrama', 1),
(288, '030107', 3, 1, 7, 'Pichirhua', 1),
(289, '030108', 3, 1, 8, 'San Pedro de Cachora', 1),
(290, '030109', 3, 1, 9, 'Tamburco', 1),
(291, '030200', 3, 2, 0, 'Andahuaylas', 1),
(292, '030201', 3, 2, 1, 'Andahuaylas', 1),
(293, '030202', 3, 2, 2, 'Andarapa', 1),
(294, '030203', 3, 2, 3, 'Chiara', 1),
(295, '030204', 3, 2, 4, 'Huancarama', 1),
(296, '030205', 3, 2, 5, 'Huancaray', 1),
(297, '030206', 3, 2, 6, 'Huayana', 1),
(298, '030207', 3, 2, 7, 'Kishuara', 1),
(299, '030208', 3, 2, 8, 'Pacobamba', 1),
(300, '030209', 3, 2, 9, 'Pacucha', 1),
(301, '030210', 3, 2, 10, 'Pampachiri', 1),
(302, '030211', 3, 2, 11, 'Pomacocha', 1),
(303, '030212', 3, 2, 12, 'San Antonio de Cachi', 1),
(304, '030213', 3, 2, 13, 'San Jeronimo', 1),
(305, '030214', 3, 2, 14, 'San Miguel de Chaccrampa', 1),
(306, '030215', 3, 2, 15, 'Santa Maria de Chicmo', 1),
(307, '030216', 3, 2, 16, 'Talavera', 1),
(308, '030217', 3, 2, 17, 'Tumay Huaraca', 1),
(309, '030218', 3, 2, 18, 'Turpo', 1),
(310, '030219', 3, 2, 19, 'Kaquiabamba', 1),
(311, '030300', 3, 3, 0, 'Antabamba', 1),
(312, '030301', 3, 3, 1, 'Antabamba', 1),
(313, '030302', 3, 3, 2, 'El Oro', 1),
(314, '030303', 3, 3, 3, 'Huaquirca', 1),
(315, '030304', 3, 3, 4, 'Juan Espinoza Medrano', 1),
(316, '030305', 3, 3, 5, 'Oropesa', 1),
(317, '030306', 3, 3, 6, 'Pachaconas', 1),
(318, '030307', 3, 3, 7, 'Sabaino', 1),
(319, '030400', 3, 4, 0, 'Aymaraes', 1),
(320, '030401', 3, 4, 1, 'Chalhuanca', 1),
(321, '030402', 3, 4, 2, 'Capaya', 1),
(322, '030403', 3, 4, 3, 'Caraybamba', 1),
(323, '030404', 3, 4, 4, 'Chapimarca', 1),
(324, '030405', 3, 4, 5, 'Colcabamba', 1),
(325, '030406', 3, 4, 6, 'Cotaruse', 1),
(326, '030407', 3, 4, 7, 'Huayllo', 1),
(327, '030408', 3, 4, 8, 'Justo Apu Sahuaraura', 1),
(328, '030409', 3, 4, 9, 'Lucre', 1),
(329, '030410', 3, 4, 10, 'Pocohuanca', 1),
(330, '030411', 3, 4, 11, 'San Juan de Chacña', 1),
(331, '030412', 3, 4, 12, 'Sañayca', 1),
(332, '030413', 3, 4, 13, 'Soraya', 1),
(333, '030414', 3, 4, 14, 'Tapairihua', 1),
(334, '030415', 3, 4, 15, 'Tintay', 1),
(335, '030416', 3, 4, 16, 'Toraya', 1),
(336, '030417', 3, 4, 17, 'Yanaca', 1),
(337, '030500', 3, 5, 0, 'Cotabambas', 1),
(338, '030501', 3, 5, 1, 'Tambobamba', 1),
(339, '030502', 3, 5, 2, 'Cotabambas', 1),
(340, '030503', 3, 5, 3, 'Coyllurqui', 1),
(341, '030504', 3, 5, 4, 'Haquira', 1),
(342, '030505', 3, 5, 5, 'Mara', 1),
(343, '030506', 3, 5, 6, 'Challhuahuacho', 1),
(344, '030600', 3, 6, 0, 'Chincheros', 1),
(345, '030601', 3, 6, 1, 'Chincheros', 1),
(346, '030602', 3, 6, 2, 'Anco-Huallo', 1),
(347, '030603', 3, 6, 3, 'Cocharcas', 1),
(348, '030604', 3, 6, 4, 'Huaccana', 1),
(349, '030605', 3, 6, 5, 'Ocobamba', 1),
(350, '030606', 3, 6, 6, 'Ongoy', 1),
(351, '030607', 3, 6, 7, 'Uranmarca', 1),
(352, '030608', 3, 6, 8, 'Ranracancha', 1),
(353, '030700', 3, 7, 0, 'Grau', 1),
(354, '030701', 3, 7, 1, 'Chuquibambilla', 1),
(355, '030702', 3, 7, 2, 'Curpahuasi', 1),
(356, '030703', 3, 7, 3, 'Gamarra', 1),
(357, '030704', 3, 7, 4, 'Huayllati', 1),
(358, '030705', 3, 7, 5, 'Mamara', 1),
(359, '030706', 3, 7, 6, 'Micaela Bastidas', 1),
(360, '030707', 3, 7, 7, 'Pataypampa', 1),
(361, '030708', 3, 7, 8, 'Progreso', 1),
(362, '030709', 3, 7, 9, 'San Antonio', 1),
(363, '030710', 3, 7, 10, 'Santa Rosa', 1),
(364, '030711', 3, 7, 11, 'Turpay', 1),
(365, '030712', 3, 7, 12, 'Vilcabamba', 1),
(366, '030713', 3, 7, 13, 'Virundo', 1),
(367, '030714', 3, 7, 14, 'Curasco', 1),
(368, '040000', 4, 0, 0, 'Arequipa', 1),
(369, '040100', 4, 1, 0, 'Arequipa', 1),
(370, '040101', 4, 1, 1, 'Arequipa', 1),
(371, '040102', 4, 1, 2, 'Alto Selva Alegre', 1),
(372, '040103', 4, 1, 3, 'Cayma', 1),
(373, '040104', 4, 1, 4, 'Cerro Colorado', 1),
(374, '040105', 4, 1, 5, 'Characato', 1),
(375, '040106', 4, 1, 6, 'Chiguata', 1),
(376, '040107', 4, 1, 7, 'Jacobo Hunter', 1),
(377, '040108', 4, 1, 8, 'La Joya', 1),
(378, '040109', 4, 1, 9, 'Mariano Melgar', 1),
(379, '040110', 4, 1, 10, 'Miraflores', 1),
(380, '040111', 4, 1, 11, 'Mollebaya', 1),
(381, '040112', 4, 1, 12, 'Paucarpata', 1),
(382, '040113', 4, 1, 13, 'Pocsi', 1),
(383, '040114', 4, 1, 14, 'Polobaya', 1),
(384, '040115', 4, 1, 15, 'Quequeña', 1),
(385, '040116', 4, 1, 16, 'Sabandia', 1),
(386, '040117', 4, 1, 17, 'Sachaca', 1),
(387, '040118', 4, 1, 18, 'San Juan de Siguas', 1),
(388, '040119', 4, 1, 19, 'San Juan de Tarucani', 1),
(389, '040120', 4, 1, 20, 'Santa Isabel de Siguas', 1),
(390, '040121', 4, 1, 21, 'Santa Rita de Siguas', 1),
(391, '040122', 4, 1, 22, 'Socabaya', 1),
(392, '040123', 4, 1, 23, 'Tiabaya', 1),
(393, '040124', 4, 1, 24, 'Uchumayo', 1),
(394, '040125', 4, 1, 25, 'Vitor', 1),
(395, '040126', 4, 1, 26, 'Yanahuara', 1),
(396, '040127', 4, 1, 27, 'Yarabamba', 1),
(397, '040128', 4, 1, 28, 'Yura', 1),
(398, '040129', 4, 1, 29, 'Jose Luis Bustamante y Rivero', 1),
(399, '040200', 4, 2, 0, 'Camana', 1),
(400, '040201', 4, 2, 1, 'Camana', 1),
(401, '040202', 4, 2, 2, 'Jose Maria Quimper', 1),
(402, '040203', 4, 2, 3, 'Mariano Nicolas Valcarcel', 1),
(403, '040204', 4, 2, 4, 'Mariscal Caceres', 1),
(404, '040205', 4, 2, 5, 'Nicolas de Pierola', 1),
(405, '040206', 4, 2, 6, 'Ocoña', 1),
(406, '040207', 4, 2, 7, 'Quilca', 1),
(407, '040208', 4, 2, 8, 'Samuel Pastor', 1),
(408, '040300', 4, 3, 0, 'Caraveli', 1),
(409, '040301', 4, 3, 1, 'Caraveli', 1),
(410, '040302', 4, 3, 2, 'Acari', 1),
(411, '040303', 4, 3, 3, 'Atico', 1),
(412, '040304', 4, 3, 4, 'Atiquipa', 1),
(413, '040305', 4, 3, 5, 'Bella Union', 1),
(414, '040306', 4, 3, 6, 'Cahuacho', 1),
(415, '040307', 4, 3, 7, 'Chala', 1),
(416, '040308', 4, 3, 8, 'Chaparra', 1),
(417, '040309', 4, 3, 9, 'Huanuhuanu', 1),
(418, '040310', 4, 3, 10, 'Jaqui', 1),
(419, '040311', 4, 3, 11, 'Lomas', 1),
(420, '040312', 4, 3, 12, 'Quicacha', 1),
(421, '040313', 4, 3, 13, 'Yauca', 1),
(422, '040400', 4, 4, 0, 'Castilla', 1),
(423, '040401', 4, 4, 1, 'Aplao', 1),
(424, '040402', 4, 4, 2, 'Andagua', 1),
(425, '040403', 4, 4, 3, 'Ayo', 1),
(426, '040404', 4, 4, 4, 'Chachas', 1),
(427, '040405', 4, 4, 5, 'Chilcaymarca', 1),
(428, '040406', 4, 4, 6, 'Choco', 1),
(429, '040407', 4, 4, 7, 'Huancarqui', 1),
(430, '040408', 4, 4, 8, 'Machaguay', 1),
(431, '040409', 4, 4, 9, 'Orcopampa', 1),
(432, '040410', 4, 4, 10, 'Pampacolca', 1),
(433, '040411', 4, 4, 11, 'Tipan', 1),
(434, '040412', 4, 4, 12, 'Uñon', 1),
(435, '040413', 4, 4, 13, 'Uraca', 1),
(436, '040414', 4, 4, 14, 'Viraco', 1),
(437, '040500', 4, 5, 0, 'Caylloma', 1),
(438, '040501', 4, 5, 1, 'Chivay', 1),
(439, '040502', 4, 5, 2, 'Achoma', 1),
(440, '040503', 4, 5, 3, 'Cabanaconde', 1),
(441, '040504', 4, 5, 4, 'Callalli', 1),
(442, '040505', 4, 5, 5, 'Caylloma', 1),
(443, '040506', 4, 5, 6, 'Coporaque', 1),
(444, '040507', 4, 5, 7, 'Huambo', 1),
(445, '040508', 4, 5, 8, 'Huanca', 1),
(446, '040509', 4, 5, 9, 'Ichupampa', 1),
(447, '040510', 4, 5, 10, 'Lari', 1),
(448, '040511', 4, 5, 11, 'Lluta', 1),
(449, '040512', 4, 5, 12, 'Maca', 1),
(450, '040513', 4, 5, 13, 'Madrigal', 1),
(451, '040514', 4, 5, 14, 'San Antonio de Chuca', 1),
(452, '040515', 4, 5, 15, 'Sibayo', 1),
(453, '040516', 4, 5, 16, 'Tapay', 1),
(454, '040517', 4, 5, 17, 'Tisco', 1),
(455, '040518', 4, 5, 18, 'Tuti', 1),
(456, '040519', 4, 5, 19, 'Yanque', 1),
(457, '040520', 4, 5, 20, 'Majes', 1),
(458, '040600', 4, 6, 0, 'Condesuyos', 1),
(459, '040601', 4, 6, 1, 'Chuquibamba', 1),
(460, '040602', 4, 6, 2, 'Andaray', 1),
(461, '040603', 4, 6, 3, 'Cayarani', 1),
(462, '040604', 4, 6, 4, 'Chichas', 1),
(463, '040605', 4, 6, 5, 'Iray', 1),
(464, '040606', 4, 6, 6, 'Rio Grande', 1),
(465, '040607', 4, 6, 7, 'Salamanca', 1),
(466, '040608', 4, 6, 8, 'Yanaquihua', 1),
(467, '040700', 4, 7, 0, 'Islay', 1),
(468, '040701', 4, 7, 1, 'Mollendo', 1),
(469, '040702', 4, 7, 2, 'Cocachacra', 1),
(470, '040703', 4, 7, 3, 'Dean Valdivia', 1),
(471, '040704', 4, 7, 4, 'Islay', 1),
(472, '040705', 4, 7, 5, 'Mejia', 1),
(473, '040706', 4, 7, 6, 'Punta de Bombon', 1),
(474, '040800', 4, 8, 0, 'La Union', 1),
(475, '040801', 4, 8, 1, 'Cotahuasi', 1),
(476, '040802', 4, 8, 2, 'Alca', 1),
(477, '040803', 4, 8, 3, 'Charcana', 1),
(478, '040804', 4, 8, 4, 'Huaynacotas', 1),
(479, '040805', 4, 8, 5, 'Pampamarca', 1),
(480, '040806', 4, 8, 6, 'Puyca', 1),
(481, '040807', 4, 8, 7, 'Quechualla', 1),
(482, '040808', 4, 8, 8, 'Sayla', 1),
(483, '040809', 4, 8, 9, 'Tauria', 1),
(484, '040810', 4, 8, 10, 'Tomepampa', 1),
(485, '040811', 4, 8, 11, 'Toro', 1),
(486, '050000', 5, 0, 0, 'Ayacucho', 1),
(487, '050100', 5, 1, 0, 'Huamanga', 1),
(488, '050101', 5, 1, 1, 'Ayacucho', 1),
(489, '050102', 5, 1, 2, 'Acocro', 1),
(490, '050103', 5, 1, 3, 'Acos Vinchos', 1),
(491, '050104', 5, 1, 4, 'Carmen Alto', 1),
(492, '050105', 5, 1, 5, 'Chiara', 1),
(493, '050106', 5, 1, 6, 'Ocros', 1),
(494, '050107', 5, 1, 7, 'Pacaycasa', 1),
(495, '050108', 5, 1, 8, 'Quinua', 1),
(496, '050109', 5, 1, 9, 'San Jose de Ticllas', 1),
(497, '050110', 5, 1, 10, 'San Juan Bautista', 1),
(498, '050111', 5, 1, 11, 'Santiago de Pischa', 1),
(499, '050112', 5, 1, 12, 'Socos', 1),
(500, '050113', 5, 1, 13, 'Tambillo', 1),
(501, '050114', 5, 1, 14, 'Vinchos', 1),
(502, '050115', 5, 1, 15, 'Jesús Nazareno', 1),
(503, '050116', 5, 1, 16, 'Andrés Avelino Cáceres Dorregay', 1),
(504, '050200', 5, 2, 0, 'Cangallo', 1),
(505, '050201', 5, 2, 1, 'Cangallo', 1),
(506, '050202', 5, 2, 2, 'Chuschi', 1),
(507, '050203', 5, 2, 3, 'Los Morochucos', 1),
(508, '050204', 5, 2, 4, 'Maria Parado de Bellido', 1),
(509, '050205', 5, 2, 5, 'Paras', 1),
(510, '050206', 5, 2, 6, 'Totos', 1),
(511, '050300', 5, 3, 0, 'Huanca Sancos', 1),
(512, '050301', 5, 3, 1, 'Sancos', 1),
(513, '050302', 5, 3, 2, 'Carapo', 1),
(514, '050303', 5, 3, 3, 'Sacsamarca', 1),
(515, '050304', 5, 3, 4, 'Santiago de Lucanamarca', 1),
(516, '050400', 5, 4, 0, 'Huanta', 1),
(517, '050401', 5, 4, 1, 'Huanta', 1),
(518, '050402', 5, 4, 2, 'Ayahuanco', 1),
(519, '050403', 5, 4, 3, 'Huamanguilla', 1),
(520, '050404', 5, 4, 4, 'Iguain', 1),
(521, '050405', 5, 4, 5, 'Luricocha', 1),
(522, '050406', 5, 4, 6, 'Santillana', 1),
(523, '050407', 5, 4, 7, 'Sivia', 1),
(524, '050408', 5, 4, 8, 'Llochegua', 1),
(525, '050409', 5, 4, 9, 'Canayre', 1),
(526, '050410', 5, 4, 10, 'Uchuraccay', 1),
(527, '050411', 5, 4, 11, 'Pucacolpa', 1),
(528, '050500', 5, 5, 0, 'La Mar', 1),
(529, '050501', 5, 5, 1, 'San Miguel', 1),
(530, '050502', 5, 5, 2, 'Anco', 1),
(531, '050503', 5, 5, 3, 'Ayna', 1),
(532, '050504', 5, 5, 4, 'Chilcas', 1),
(533, '050505', 5, 5, 5, 'Chungui', 1),
(534, '050506', 5, 5, 6, 'Luis Carranza', 1),
(535, '050507', 5, 5, 7, 'Santa Rosa', 1),
(536, '050508', 5, 5, 8, 'Tambo', 1),
(537, '050509', 5, 5, 9, 'Samugari', 1),
(538, '050510', 5, 5, 10, 'Anchihuay', 1),
(539, '050600', 5, 6, 0, 'Lucanas', 1),
(540, '050601', 5, 6, 1, 'Puquio', 1),
(541, '050602', 5, 6, 2, 'Aucara', 1),
(542, '050603', 5, 6, 3, 'Cabana', 1),
(543, '050604', 5, 6, 4, 'Carmen Salcedo', 1),
(544, '050605', 5, 6, 5, 'Chaviña', 1),
(545, '050606', 5, 6, 6, 'Chipao', 1),
(546, '050607', 5, 6, 7, 'Huac-Huas', 1),
(547, '050608', 5, 6, 8, 'Laramate', 1),
(548, '050609', 5, 6, 9, 'Leoncio Prado', 1),
(549, '050610', 5, 6, 10, 'Llauta', 1),
(550, '050611', 5, 6, 11, 'Lucanas', 1),
(551, '050612', 5, 6, 12, 'Ocaña', 1),
(552, '050613', 5, 6, 13, 'Otoca', 1),
(553, '050614', 5, 6, 14, 'Saisa', 1),
(554, '050615', 5, 6, 15, 'San Cristobal', 1),
(555, '050616', 5, 6, 16, 'San Juan', 1),
(556, '050617', 5, 6, 17, 'San Pedro', 1),
(557, '050618', 5, 6, 18, 'San Pedro de Palco', 1),
(558, '050619', 5, 6, 19, 'Sancos', 1),
(559, '050620', 5, 6, 20, 'Santa Ana de Huaycahuacho', 1),
(560, '050621', 5, 6, 21, 'Santa Lucia', 1),
(561, '050700', 5, 7, 0, 'Parinacochas', 1),
(562, '050701', 5, 7, 1, 'Coracora', 1),
(563, '050702', 5, 7, 2, 'Chumpi', 1),
(564, '050703', 5, 7, 3, 'Coronel Castañeda', 1),
(565, '050704', 5, 7, 4, 'Pacapausa', 1),
(566, '050705', 5, 7, 5, 'Pullo', 1),
(567, '050706', 5, 7, 6, 'Puyusca', 1),
(568, '050707', 5, 7, 7, 'San Francisco de Ravacayco', 1),
(569, '050708', 5, 7, 8, 'Upahuacho', 1),
(570, '050800', 5, 8, 0, 'Paucar del Sara Sara', 1),
(571, '050801', 5, 8, 1, 'Pausa', 1),
(572, '050802', 5, 8, 2, 'Colta', 1),
(573, '050803', 5, 8, 3, 'Corculla', 1),
(574, '050804', 5, 8, 4, 'Lampa', 1),
(575, '050805', 5, 8, 5, 'Marcabamba', 1),
(576, '050806', 5, 8, 6, 'Oyolo', 1),
(577, '050807', 5, 8, 7, 'Pararca', 1),
(578, '050808', 5, 8, 8, 'San Javier de Alpabamba', 1),
(579, '050809', 5, 8, 9, 'San Jose de Ushua', 1),
(580, '050810', 5, 8, 10, 'Sara Sara', 1),
(581, '050900', 5, 9, 0, 'Sucre', 1),
(582, '050901', 5, 9, 1, 'Querobamba', 1),
(583, '050902', 5, 9, 2, 'Belen', 1),
(584, '050903', 5, 9, 3, 'Chalcos', 1),
(585, '050904', 5, 9, 4, 'Chilcayoc', 1),
(586, '050905', 5, 9, 5, 'Huacaña', 1),
(587, '050906', 5, 9, 6, 'Morcolla', 1),
(588, '050907', 5, 9, 7, 'Paico', 1),
(589, '050908', 5, 9, 8, 'San Pedro de Larcay', 1),
(590, '050909', 5, 9, 9, 'San Salvador de Quije', 1),
(591, '050910', 5, 9, 10, 'Santiago de Paucaray', 1),
(592, '050911', 5, 9, 11, 'Soras', 1),
(593, '051000', 5, 10, 0, 'Victor Fajardo', 1),
(594, '051001', 5, 10, 1, 'Huancapi', 1),
(595, '051002', 5, 10, 2, 'Alcamenca', 1),
(596, '051003', 5, 10, 3, 'Apongo', 1),
(597, '051004', 5, 10, 4, 'Asquipata', 1),
(598, '051005', 5, 10, 5, 'Canaria', 1),
(599, '051006', 5, 10, 6, 'Cayara', 1),
(600, '051007', 5, 10, 7, 'Colca', 1),
(601, '051008', 5, 10, 8, 'Huamanquiquia', 1),
(602, '051009', 5, 10, 9, 'Huancaraylla', 1),
(603, '051010', 5, 10, 10, 'Huaya', 1),
(604, '051011', 5, 10, 11, 'Sarhua', 1),
(605, '051012', 5, 10, 12, 'Vilcanchos', 1),
(606, '051100', 5, 11, 0, 'Vilcas Huaman', 1),
(607, '051101', 5, 11, 1, 'Vilcas Huaman', 1),
(608, '051102', 5, 11, 2, 'Accomarca', 1),
(609, '051103', 5, 11, 3, 'Carhuanca', 1),
(610, '051104', 5, 11, 4, 'Concepcion', 1),
(611, '051105', 5, 11, 5, 'Huambalpa', 1),
(612, '051106', 5, 11, 6, 'Independencia', 1),
(613, '051107', 5, 11, 7, 'Saurama', 1),
(614, '051108', 5, 11, 8, 'Vischongo', 1),
(615, '060000', 6, 0, 0, 'Cajamarca', 1),
(616, '060100', 6, 1, 0, 'Cajamarca', 1),
(617, '060101', 6, 1, 1, 'Cajamarca', 1),
(618, '060102', 6, 1, 2, 'Asuncion', 1),
(619, '060103', 6, 1, 3, 'Chetilla', 1),
(620, '060104', 6, 1, 4, 'Cospan', 1),
(621, '060105', 6, 1, 5, 'Encañada', 1),
(622, '060106', 6, 1, 6, 'Jesus', 1),
(623, '060107', 6, 1, 7, 'Llacanora', 1),
(624, '060108', 6, 1, 8, 'Los Baños del Inca', 1),
(625, '060109', 6, 1, 9, 'Magdalena', 1),
(626, '060110', 6, 1, 10, 'Matara', 1),
(627, '060111', 6, 1, 11, 'Namora', 1),
(628, '060112', 6, 1, 12, 'San Juan', 1),
(629, '060200', 6, 2, 0, 'Cajabamba', 1),
(630, '060201', 6, 2, 1, 'Cajabamba', 1),
(631, '060202', 6, 2, 2, 'Cachachi', 1),
(632, '060203', 6, 2, 3, 'Condebamba', 1),
(633, '060204', 6, 2, 4, 'Sitacocha', 1),
(634, '060300', 6, 3, 0, 'Celendin', 1),
(635, '060301', 6, 3, 1, 'Celendin', 1),
(636, '060302', 6, 3, 2, 'Chumuch', 1),
(637, '060303', 6, 3, 3, 'Cortegana', 1),
(638, '060304', 6, 3, 4, 'Huasmin', 1),
(639, '060305', 6, 3, 5, 'Jorge Chavez', 1),
(640, '060306', 6, 3, 6, 'Jose Galvez', 1),
(641, '060307', 6, 3, 7, 'Miguel Iglesias', 1),
(642, '060308', 6, 3, 8, 'Oxamarca', 1),
(643, '060309', 6, 3, 9, 'Sorochuco', 1),
(644, '060310', 6, 3, 10, 'Sucre', 1),
(645, '060311', 6, 3, 11, 'Utco', 1),
(646, '060312', 6, 3, 12, 'La Libertad de Pallan', 1),
(647, '060400', 6, 4, 0, 'Chota', 1),
(648, '060401', 6, 4, 1, 'Chota', 1),
(649, '060402', 6, 4, 2, 'Anguia', 1),
(650, '060403', 6, 4, 3, 'Chadin', 1),
(651, '060404', 6, 4, 4, 'Chiguirip', 1),
(652, '060405', 6, 4, 5, 'Chimban', 1),
(653, '060406', 6, 4, 6, 'Choropampa', 1),
(654, '060407', 6, 4, 7, 'Cochabamba', 1),
(655, '060408', 6, 4, 8, 'Conchan', 1),
(656, '060409', 6, 4, 9, 'Huambos', 1),
(657, '060410', 6, 4, 10, 'Lajas', 1),
(658, '060411', 6, 4, 11, 'Llama', 1),
(659, '060412', 6, 4, 12, 'Miracosta', 1),
(660, '060413', 6, 4, 13, 'Paccha', 1),
(661, '060414', 6, 4, 14, 'Pion', 1),
(662, '060415', 6, 4, 15, 'Querocoto', 1),
(663, '060416', 6, 4, 16, 'San Juan de Licupis', 1),
(664, '060417', 6, 4, 17, 'Tacabamba', 1),
(665, '060418', 6, 4, 18, 'Tocmoche', 1),
(666, '060419', 6, 4, 19, 'Chalamarca', 1),
(667, '060500', 6, 5, 0, 'Contumaza', 1),
(668, '060501', 6, 5, 1, 'Contumaza', 1),
(669, '060502', 6, 5, 2, 'Chilete', 1),
(670, '060503', 6, 5, 3, 'Cupisnique', 1),
(671, '060504', 6, 5, 4, 'Guzmango', 1),
(672, '060505', 6, 5, 5, 'San Benito', 1),
(673, '060506', 6, 5, 6, 'Santa Cruz de Toled', 1),
(674, '060507', 6, 5, 7, 'Tantarica', 1),
(675, '060508', 6, 5, 8, 'Yonan', 1),
(676, '060600', 6, 6, 0, 'Cutervo', 1),
(677, '060601', 6, 6, 1, 'Cutervo', 1),
(678, '060602', 6, 6, 2, 'Callayuc', 1),
(679, '060603', 6, 6, 3, 'Choros', 1),
(680, '060604', 6, 6, 4, 'Cujillo', 1),
(681, '060605', 6, 6, 5, 'La Ramada', 1),
(682, '060606', 6, 6, 6, 'Pimpingos', 1),
(683, '060607', 6, 6, 7, 'Querocotillo', 1),
(684, '060608', 6, 6, 8, 'San Andres de Cutervo', 1),
(685, '060609', 6, 6, 9, 'San Juan de Cutervo', 1),
(686, '060610', 6, 6, 10, 'San Luis de Lucma', 1),
(687, '060611', 6, 6, 11, 'Santa Cruz', 1),
(688, '060612', 6, 6, 12, 'Santo Domingo de la Capilla', 1),
(689, '060613', 6, 6, 13, 'Santo Tomas', 1),
(690, '060614', 6, 6, 14, 'Socota', 1),
(691, '060615', 6, 6, 15, 'Toribio Casanova', 1),
(692, '060700', 6, 7, 0, 'Hualgayoc', 1),
(693, '060701', 6, 7, 1, 'Bambamarca', 1),
(694, '060702', 6, 7, 2, 'Chugur', 1),
(695, '060703', 6, 7, 3, 'Hualgayoc', 1),
(696, '060800', 6, 8, 0, 'Jaen', 1),
(697, '060801', 6, 8, 1, 'Jaen', 1),
(698, '060802', 6, 8, 2, 'Bellavista', 1),
(699, '060803', 6, 8, 3, 'Chontali', 1),
(700, '060804', 6, 8, 4, 'Colasay', 1),
(701, '060805', 6, 8, 5, 'Huabal', 1),
(702, '060806', 6, 8, 6, 'Las Pirias', 1),
(703, '060807', 6, 8, 7, 'Pomahuaca', 1),
(704, '060808', 6, 8, 8, 'Pucara', 1),
(705, '060809', 6, 8, 9, 'Sallique', 1),
(706, '060810', 6, 8, 10, 'San Felipe', 1),
(707, '060811', 6, 8, 11, 'San Jose del Alto', 1),
(708, '060812', 6, 8, 12, 'Santa Rosa', 1),
(709, '060900', 6, 9, 0, 'San Ignacio', 1),
(710, '060901', 6, 9, 1, 'San Ignacio', 1),
(711, '060902', 6, 9, 2, 'Chirinos', 1),
(712, '060903', 6, 9, 3, 'Huarango', 1),
(713, '060904', 6, 9, 4, 'La Coipa', 1),
(714, '060905', 6, 9, 5, 'Namballe', 1),
(715, '060906', 6, 9, 6, 'San Jose de Lourdes', 1),
(716, '060907', 6, 9, 7, 'Tabaconas', 1),
(717, '061000', 6, 10, 0, 'San Marcos', 1),
(718, '061001', 6, 10, 1, 'Pedro Galvez', 1),
(719, '061002', 6, 10, 2, 'Chancay', 1),
(720, '061003', 6, 10, 3, 'Eduardo Villanueva', 1),
(721, '061004', 6, 10, 4, 'Gregorio Pita', 1),
(722, '061005', 6, 10, 5, 'Ichocan', 1),
(723, '061006', 6, 10, 6, 'Jose Manuel Quiroz', 1),
(724, '061007', 6, 10, 7, 'Jose Sabogal', 1),
(725, '061100', 6, 11, 0, 'San Miguel', 1),
(726, '061101', 6, 11, 1, 'San Miguel', 1),
(727, '061102', 6, 11, 2, 'Bolivar', 1),
(728, '061103', 6, 11, 3, 'Calquis', 1),
(729, '061104', 6, 11, 4, 'Catilluc', 1),
(730, '061105', 6, 11, 5, 'El Prado', 1),
(731, '061106', 6, 11, 6, 'La Florida', 1),
(732, '061107', 6, 11, 7, 'Llapa', 1),
(733, '061108', 6, 11, 8, 'Nanchoc', 1),
(734, '061109', 6, 11, 9, 'Niepos', 1),
(735, '061110', 6, 11, 10, 'San Gregorio', 1),
(736, '061111', 6, 11, 11, 'San Silvestre de Cochan', 1),
(737, '061112', 6, 11, 12, 'Tongod', 1),
(738, '061113', 6, 11, 13, 'Union Agua Blanca', 1),
(739, '061200', 6, 12, 0, 'San Pablo', 1),
(740, '061201', 6, 12, 1, 'San Pablo', 1),
(741, '061202', 6, 12, 2, 'San Bernardino', 1),
(742, '061203', 6, 12, 3, 'San Luis', 1),
(743, '061204', 6, 12, 4, 'Tumbaden', 1),
(744, '061300', 6, 13, 0, 'Santa Cruz', 1),
(745, '061301', 6, 13, 1, 'Santa Cruz', 1),
(746, '061302', 6, 13, 2, 'Andabamba', 1),
(747, '061303', 6, 13, 3, 'Catache', 1),
(748, '061304', 6, 13, 4, 'Chancaybaños', 1),
(749, '061305', 6, 13, 5, 'La Esperanza', 1),
(750, '061306', 6, 13, 6, 'Ninabamba', 1),
(751, '061307', 6, 13, 7, 'Pulan', 1),
(752, '061308', 6, 13, 8, 'Saucepampa', 1),
(753, '061309', 6, 13, 9, 'Sexi', 1),
(754, '061310', 6, 13, 10, 'Uticyacu', 1),
(755, '061311', 6, 13, 11, 'Yauyucan', 1),
(756, '070000', 7, 0, 0, 'Callao', 1),
(757, '070100', 7, 1, 0, 'Prov. Const. del Callao', 1),
(758, '070101', 7, 1, 1, 'Callao', 1),
(759, '070102', 7, 1, 2, 'Bellavista', 1),
(760, '070103', 7, 1, 3, 'Carmen de la Legua Reynoso', 1),
(761, '070104', 7, 1, 4, 'La Perla', 1),
(762, '070105', 7, 1, 5, 'La Punta', 1),
(763, '070106', 7, 1, 6, 'Ventanilla', 1),
(764, '070107', 7, 1, 7, 'Mi Perú', 1),
(765, '080000', 8, 0, 0, 'Cusco', 1),
(766, '080100', 8, 1, 0, 'Cusco', 1),
(767, '080101', 8, 1, 1, 'Cusco', 1),
(768, '080102', 8, 1, 2, 'Ccorca', 1),
(769, '080103', 8, 1, 3, 'Poroy', 1),
(770, '080104', 8, 1, 4, 'San Jeronimo', 1),
(771, '080105', 8, 1, 5, 'San Sebastian', 1),
(772, '080106', 8, 1, 6, 'Santiago', 1),
(773, '080107', 8, 1, 7, 'Saylla', 1),
(774, '080108', 8, 1, 8, 'Wanchaq', 1),
(775, '080200', 8, 2, 0, 'Acomayo', 1),
(776, '080201', 8, 2, 1, 'Acomayo', 1),
(777, '080202', 8, 2, 2, 'Acopia', 1),
(778, '080203', 8, 2, 3, 'Acos', 1),
(779, '080204', 8, 2, 4, 'Mosoc Llacta', 1),
(780, '080205', 8, 2, 5, 'Pomacanchi', 1),
(781, '080206', 8, 2, 6, 'Rondocan', 1),
(782, '080207', 8, 2, 7, 'Sangarara', 1),
(783, '080300', 8, 3, 0, 'Anta', 1),
(784, '080301', 8, 3, 1, 'Anta', 1),
(785, '080302', 8, 3, 2, 'Ancahuasi', 1),
(786, '080303', 8, 3, 3, 'Cachimayo', 1),
(787, '080304', 8, 3, 4, 'Chinchaypujio', 1),
(788, '080305', 8, 3, 5, 'Huarocondo', 1),
(789, '080306', 8, 3, 6, 'Limatambo', 1),
(790, '080307', 8, 3, 7, 'Mollepata', 1),
(791, '080308', 8, 3, 8, 'Pucyura', 1),
(792, '080309', 8, 3, 9, 'Zurite', 1),
(793, '080400', 8, 4, 0, 'Calca', 1),
(794, '080401', 8, 4, 1, 'Calca', 1),
(795, '080402', 8, 4, 2, 'Coya', 1),
(796, '080403', 8, 4, 3, 'Lamay', 1),
(797, '080404', 8, 4, 4, 'Lares', 1),
(798, '080405', 8, 4, 5, 'Pisac', 1),
(799, '080406', 8, 4, 6, 'San Salvador', 1),
(800, '080407', 8, 4, 7, 'Taray', 1),
(801, '080408', 8, 4, 8, 'Yanatile', 1),
(802, '080500', 8, 5, 0, 'Canas', 1),
(803, '080501', 8, 5, 1, 'Yanaoca', 1),
(804, '080502', 8, 5, 2, 'Checca', 1),
(805, '080503', 8, 5, 3, 'Kunturkanki', 1),
(806, '080504', 8, 5, 4, 'Langui', 1),
(807, '080505', 8, 5, 5, 'Layo', 1),
(808, '080506', 8, 5, 6, 'Pampamarca', 1),
(809, '080507', 8, 5, 7, 'Quehue', 1),
(810, '080508', 8, 5, 8, 'Tupac Amaru', 1),
(811, '080600', 8, 6, 0, 'Canchis', 1),
(812, '080601', 8, 6, 1, 'Sicuani', 1),
(813, '080602', 8, 6, 2, 'Checacupe', 1),
(814, '080603', 8, 6, 3, 'Combapata', 1),
(815, '080604', 8, 6, 4, 'Marangani', 1),
(816, '080605', 8, 6, 5, 'Pitumarca', 1),
(817, '080606', 8, 6, 6, 'San Pablo', 1),
(818, '080607', 8, 6, 7, 'San Pedro', 1),
(819, '080608', 8, 6, 8, 'Tinta', 1),
(820, '080700', 8, 7, 0, 'Chumbivilcas', 1),
(821, '080701', 8, 7, 1, 'Santo Tomas', 1),
(822, '080702', 8, 7, 2, 'Capacmarca', 1),
(823, '080703', 8, 7, 3, 'Chamaca', 1),
(824, '080704', 8, 7, 4, 'Colquemarca', 1),
(825, '080705', 8, 7, 5, 'Livitaca', 1),
(826, '080706', 8, 7, 6, 'Llusco', 1),
(827, '080707', 8, 7, 7, 'Quiñota', 1),
(828, '080708', 8, 7, 8, 'Velille', 1),
(829, '080800', 8, 8, 0, 'Espinar', 1),
(830, '080801', 8, 8, 1, 'Espinar', 1),
(831, '080802', 8, 8, 2, 'Condoroma', 1),
(832, '080803', 8, 8, 3, 'Coporaque', 1),
(833, '080804', 8, 8, 4, 'Ocoruro', 1),
(834, '080805', 8, 8, 5, 'Pallpata', 1),
(835, '080806', 8, 8, 6, 'Pichigua', 1),
(836, '080807', 8, 8, 7, 'Suyckutambo', 1),
(837, '080808', 8, 8, 8, 'Alto Pichigua', 1),
(838, '080900', 8, 9, 0, 'La Convencion', 1),
(839, '080901', 8, 9, 1, 'Santa Ana', 1),
(840, '080902', 8, 9, 2, 'Echarate', 1),
(841, '080903', 8, 9, 3, 'Huayopata', 1),
(842, '080904', 8, 9, 4, 'Maranura', 1),
(843, '080905', 8, 9, 5, 'Ocobamba', 1),
(844, '080906', 8, 9, 6, 'Quellouno', 1),
(845, '080907', 8, 9, 7, 'Kimbiri', 1),
(846, '080908', 8, 9, 8, 'Santa Teresa', 1),
(847, '080909', 8, 9, 9, 'Vilcabamba', 1),
(848, '080910', 8, 9, 10, 'Pichari', 1),
(849, '080911', 8, 9, 11, 'Inkawasi', 1),
(850, '080912', 8, 9, 12, 'Villa Virgen', 1),
(851, '081000', 8, 10, 0, 'Paruro', 1),
(852, '081001', 8, 10, 1, 'Paruro', 1),
(853, '081002', 8, 10, 2, 'Accha', 1),
(854, '081003', 8, 10, 3, 'Ccapi', 1),
(855, '081004', 8, 10, 4, 'Colcha', 1),
(856, '081005', 8, 10, 5, 'Huanoquite', 1),
(857, '081006', 8, 10, 6, 'Omacha', 1),
(858, '081007', 8, 10, 7, 'Paccaritambo', 1),
(859, '081008', 8, 10, 8, 'Pillpinto', 1),
(860, '081009', 8, 10, 9, 'Yaurisque', 1),
(861, '081100', 8, 11, 0, 'Paucartambo', 1),
(862, '081101', 8, 11, 1, 'Paucartambo', 1),
(863, '081102', 8, 11, 2, 'Caicay', 1),
(864, '081103', 8, 11, 3, 'Challabamba', 1),
(865, '081104', 8, 11, 4, 'Colquepata', 1),
(866, '081105', 8, 11, 5, 'Huancarani', 1),
(867, '081106', 8, 11, 6, 'Kosñipata', 1),
(868, '081200', 8, 12, 0, 'Quispicanchi', 1),
(869, '081201', 8, 12, 1, 'Urcos', 1),
(870, '081202', 8, 12, 2, 'Andahuaylillas', 1),
(871, '081203', 8, 12, 3, 'Camanti', 1),
(872, '081204', 8, 12, 4, 'Ccarhuayo', 1),
(873, '081205', 8, 12, 5, 'Ccatca', 1),
(874, '081206', 8, 12, 6, 'Cusipata', 1),
(875, '081207', 8, 12, 7, 'Huaro', 1),
(876, '081208', 8, 12, 8, 'Lucre', 1),
(877, '081209', 8, 12, 9, 'Marcapata', 1),
(878, '081210', 8, 12, 10, 'Ocongate', 1),
(879, '081211', 8, 12, 11, 'Oropesa', 1),
(880, '081212', 8, 12, 12, 'Quiquijana', 1),
(881, '081300', 8, 13, 0, 'Urubamba', 1),
(882, '081301', 8, 13, 1, 'Urubamba', 1),
(883, '081302', 8, 13, 2, 'Chinchero', 1),
(884, '081303', 8, 13, 3, 'Huayllabamba', 1),
(885, '081304', 8, 13, 4, 'Machupicchu', 1),
(886, '081305', 8, 13, 5, 'Maras', 1),
(887, '081306', 8, 13, 6, 'Ollantaytambo', 1),
(888, '081307', 8, 13, 7, 'Yucay', 1),
(889, '090000', 9, 0, 0, 'Huancavelica', 1),
(890, '090100', 9, 1, 0, 'Huancavelica', 1),
(891, '090101', 9, 1, 1, 'Huancavelica', 1),
(892, '090102', 9, 1, 2, 'Acobambilla', 1),
(893, '090103', 9, 1, 3, 'Acoria', 1),
(894, '090104', 9, 1, 4, 'Conayca', 1),
(895, '090105', 9, 1, 5, 'Cuenca', 1),
(896, '090106', 9, 1, 6, 'Huachocolpa', 1),
(897, '090107', 9, 1, 7, 'Huayllahuara', 1),
(898, '090108', 9, 1, 8, 'Izcuchaca', 1),
(899, '090109', 9, 1, 9, 'Laria', 1),
(900, '090110', 9, 1, 10, 'Manta', 1),
(901, '090111', 9, 1, 11, 'Mariscal Caceres', 1),
(902, '090112', 9, 1, 12, 'Moya', 1),
(903, '090113', 9, 1, 13, 'Nuevo Occoro', 1),
(904, '090114', 9, 1, 14, 'Palca', 1),
(905, '090115', 9, 1, 15, 'Pilchaca', 1),
(906, '090116', 9, 1, 16, 'Vilca', 1),
(907, '090117', 9, 1, 17, 'Yauli', 1),
(908, '090118', 9, 1, 18, 'Ascensión', 1),
(909, '090119', 9, 1, 19, 'Huando', 1),
(910, '090200', 9, 2, 0, 'Acobamba', 1),
(911, '090201', 9, 2, 1, 'Acobamba', 1),
(912, '090202', 9, 2, 2, 'Andabamba', 1),
(913, '090203', 9, 2, 3, 'Anta', 1),
(914, '090204', 9, 2, 4, 'Caja', 1),
(915, '090205', 9, 2, 5, 'Marcas', 1),
(916, '090206', 9, 2, 6, 'Paucara', 1),
(917, '090207', 9, 2, 7, 'Pomacocha', 1),
(918, '090208', 9, 2, 8, 'Rosario', 1),
(919, '090300', 9, 3, 0, 'Angaraes', 1),
(920, '090301', 9, 3, 1, 'Lircay', 1),
(921, '090302', 9, 3, 2, 'Anchonga', 1),
(922, '090303', 9, 3, 3, 'Callanmarca', 1),
(923, '090304', 9, 3, 4, 'Ccochaccasa', 1),
(924, '090305', 9, 3, 5, 'Chincho', 1),
(925, '090306', 9, 3, 6, 'Congalla', 1),
(926, '090307', 9, 3, 7, 'Huanca-Huanca', 1),
(927, '090308', 9, 3, 8, 'Huayllay Grande', 1),
(928, '090309', 9, 3, 9, 'Julcamarca', 1),
(929, '090310', 9, 3, 10, 'San Antonio de Antaparco', 1),
(930, '090311', 9, 3, 11, 'Santo Tomas de Pata', 1),
(931, '090312', 9, 3, 12, 'Secclla', 1),
(932, '090400', 9, 4, 0, 'Castrovirreyna', 1),
(933, '090401', 9, 4, 1, 'Castrovirreyna', 1),
(934, '090402', 9, 4, 2, 'Arma', 1),
(935, '090403', 9, 4, 3, 'Aurahua', 1),
(936, '090404', 9, 4, 4, 'Capillas', 1),
(937, '090405', 9, 4, 5, 'Chupamarca', 1),
(938, '090406', 9, 4, 6, 'Cocas', 1),
(939, '090407', 9, 4, 7, 'Huachos', 1),
(940, '090408', 9, 4, 8, 'Huamatambo', 1),
(941, '090409', 9, 4, 9, 'Mollepampa', 1),
(942, '090410', 9, 4, 10, 'San Juan', 1),
(943, '090411', 9, 4, 11, 'Santa Ana', 1),
(944, '090412', 9, 4, 12, 'Tantara', 1),
(945, '090413', 9, 4, 13, 'Ticrapo', 1),
(946, '090500', 9, 5, 0, 'Churcampa', 1),
(947, '090501', 9, 5, 1, 'Churcampa', 1),
(948, '090502', 9, 5, 2, 'Anco', 1),
(949, '090503', 9, 5, 3, 'Chinchihuasi', 1),
(950, '090504', 9, 5, 4, 'El Carmen', 1),
(951, '090505', 9, 5, 5, 'La Merced', 1),
(952, '090506', 9, 5, 6, 'Locroja', 1),
(953, '090507', 9, 5, 7, 'Paucarbamba', 1),
(954, '090508', 9, 5, 8, 'San Miguel de Mayocc', 1),
(955, '090509', 9, 5, 9, 'San Pedro de Coris', 1),
(956, '090510', 9, 5, 10, 'Pachamarca', 1),
(957, '090511', 9, 5, 11, 'Cosme', 1),
(958, '090600', 9, 6, 0, 'Huaytara', 1),
(959, '090601', 9, 6, 1, 'Huaytara', 1),
(960, '090602', 9, 6, 2, 'Ayavi', 1),
(961, '090603', 9, 6, 3, 'Cordova', 1),
(962, '090604', 9, 6, 4, 'Huayacundo Arma', 1),
(963, '090605', 9, 6, 5, 'Laramarca', 1),
(964, '090606', 9, 6, 6, 'Ocoyo', 1),
(965, '090607', 9, 6, 7, 'Pilpichaca', 1),
(966, '090608', 9, 6, 8, 'Querco', 1),
(967, '090609', 9, 6, 9, 'Quito-Arma', 1),
(968, '090610', 9, 6, 10, 'San Antonio de Cusicancha', 1),
(969, '090611', 9, 6, 11, 'San Francisco de Sangayaico', 1),
(970, '090612', 9, 6, 12, 'San Isidro', 1),
(971, '090613', 9, 6, 13, 'Santiago de Chocorvos', 1),
(972, '090614', 9, 6, 14, 'Santiago de Quirahuara', 1),
(973, '090615', 9, 6, 15, 'Santo Domingo de Capillas', 1),
(974, '090616', 9, 6, 16, 'Tambo', 1),
(975, '090700', 9, 7, 0, 'Tayacaja', 1),
(976, '090701', 9, 7, 1, 'Pampas', 1),
(977, '090702', 9, 7, 2, 'Acostambo', 1),
(978, '090703', 9, 7, 3, 'Acraquia', 1),
(979, '090704', 9, 7, 4, 'Ahuaycha', 1),
(980, '090705', 9, 7, 5, 'Colcabamba', 1),
(981, '090706', 9, 7, 6, 'Daniel Hernandez', 1),
(982, '090707', 9, 7, 7, 'Huachocolpa', 1),
(983, '090709', 9, 7, 9, 'Huaribamba', 1),
(984, '090710', 9, 7, 10, 'Ñahuimpuquio', 1),
(985, '090711', 9, 7, 11, 'Pazos', 1),
(986, '090713', 9, 7, 13, 'Quishuar', 1),
(987, '090714', 9, 7, 14, 'Salcabamba', 1),
(988, '090715', 9, 7, 15, 'Salcahuasi', 1),
(989, '090716', 9, 7, 16, 'San Marcos de Rocchac', 1),
(990, '090717', 9, 7, 17, 'Surcubamba', 1),
(991, '090718', 9, 7, 18, 'Tintay Puncu', 1),
(992, '100000', 10, 0, 0, 'Huanuco', 1),
(993, '100100', 10, 1, 0, 'Huanuco', 1),
(994, '100101', 10, 1, 1, 'Huanuco', 1),
(995, '100102', 10, 1, 2, 'Amarilis', 1),
(996, '100103', 10, 1, 3, 'Chinchao', 1),
(997, '100104', 10, 1, 4, 'Churubamba', 1),
(998, '100105', 10, 1, 5, 'Margos', 1),
(999, '100106', 10, 1, 6, 'Quisqui', 1),
(1000, '100107', 10, 1, 7, 'San Francisco de Cayran', 1),
(1001, '100108', 10, 1, 8, 'San Pedro de Chaulan', 1),
(1002, '100109', 10, 1, 9, 'Santa Maria del Valle', 1),
(1003, '100110', 10, 1, 10, 'Yarumayo', 1),
(1004, '100111', 10, 1, 11, 'Pillco Marca', 1),
(1005, '100112', 10, 1, 12, 'Yacus', 1),
(1006, '100200', 10, 2, 0, 'Ambo', 1),
(1007, '100201', 10, 2, 1, 'Ambo', 1),
(1008, '100202', 10, 2, 2, 'Cayna', 1),
(1009, '100203', 10, 2, 3, 'Colpas', 1),
(1010, '100204', 10, 2, 4, 'Conchamarca', 1),
(1011, '100205', 10, 2, 5, 'Huacar', 1),
(1012, '100206', 10, 2, 6, 'San Francisco', 1),
(1013, '100207', 10, 2, 7, 'San Rafael', 1),
(1014, '100208', 10, 2, 8, 'Tomay Kichwa', 1),
(1015, '100300', 10, 3, 0, 'Dos de Mayo', 1),
(1016, '100301', 10, 3, 1, 'La Union', 1),
(1017, '100307', 10, 3, 7, 'Chuquis', 1),
(1018, '100311', 10, 3, 11, 'Marias', 1),
(1019, '100313', 10, 3, 13, 'Pachas', 1),
(1020, '100316', 10, 3, 16, 'Quivilla', 1),
(1021, '100317', 10, 3, 17, 'Ripan', 1),
(1022, '100321', 10, 3, 21, 'Shunqui', 1),
(1023, '100322', 10, 3, 22, 'Sillapata', 1),
(1024, '100323', 10, 3, 23, 'Yanas', 1),
(1025, '100400', 10, 4, 0, 'Huacaybamba', 1),
(1026, '100401', 10, 4, 1, 'Huacaybamba', 1),
(1027, '100402', 10, 4, 2, 'Canchabamba', 1),
(1028, '100403', 10, 4, 3, 'Cochabamba', 1),
(1029, '100404', 10, 4, 4, 'Pinra', 1),
(1030, '100500', 10, 5, 0, 'Huamalies', 1),
(1031, '100501', 10, 5, 1, 'Llata', 1),
(1032, '100502', 10, 5, 2, 'Arancay', 1),
(1033, '100503', 10, 5, 3, 'Chavin de Pariarca', 1),
(1034, '100504', 10, 5, 4, 'Jacas Grande', 1),
(1035, '100505', 10, 5, 5, 'Jircan', 1),
(1036, '100506', 10, 5, 6, 'Miraflores', 1),
(1037, '100507', 10, 5, 7, 'Monzon', 1),
(1038, '100508', 10, 5, 8, 'Punchao', 1),
(1039, '100509', 10, 5, 9, 'Puños', 1),
(1040, '100510', 10, 5, 10, 'Singa', 1),
(1041, '100511', 10, 5, 11, 'Tantamayo', 1),
(1042, '100600', 10, 6, 0, 'Leoncio Prado', 1),
(1043, '100601', 10, 6, 1, 'Rupa-Rupa', 1),
(1044, '100602', 10, 6, 2, 'Daniel Alomias Robles', 1),
(1045, '100603', 10, 6, 3, 'Hermilio Valdizan', 1),
(1046, '100604', 10, 6, 4, 'Jose Crespo y Castillo', 1),
(1047, '100605', 10, 6, 5, 'Luyando', 1),
(1048, '100606', 10, 6, 6, 'Mariano Damaso Beraun', 1),
(1049, '100700', 10, 7, 0, 'Marañon', 1),
(1050, '100701', 10, 7, 1, 'Huacrachuco', 1),
(1051, '100702', 10, 7, 2, 'Cholon', 1),
(1052, '100703', 10, 7, 3, 'San Buenaventura', 1),
(1053, '100800', 10, 8, 0, 'Pachitea', 1),
(1054, '100801', 10, 8, 1, 'Panao', 1),
(1055, '100802', 10, 8, 2, 'Chaglla', 1),
(1056, '100803', 10, 8, 3, 'Molino', 1),
(1057, '100804', 10, 8, 4, 'Umari', 1),
(1058, '100900', 10, 9, 0, 'Puerto Inca', 1),
(1059, '100901', 10, 9, 1, 'Puerto Inca', 1),
(1060, '100902', 10, 9, 2, 'Codo del Pozuzo', 1),
(1061, '100903', 10, 9, 3, 'Honoria', 1),
(1062, '100904', 10, 9, 4, 'Tournavista', 1),
(1063, '100905', 10, 9, 5, 'Yuyapichis', 1),
(1064, '101000', 10, 10, 0, 'Lauricocha', 1),
(1065, '101001', 10, 10, 1, 'Jesus', 1),
(1066, '101002', 10, 10, 2, 'Baños', 1),
(1067, '101003', 10, 10, 3, 'Jivia', 1),
(1068, '101004', 10, 10, 4, 'Queropalca', 1),
(1069, '101005', 10, 10, 5, 'Rondos', 1),
(1070, '101006', 10, 10, 6, 'San Francisco de Asis', 1),
(1071, '101007', 10, 10, 7, 'San Miguel de Cauri', 1),
(1072, '101100', 10, 11, 0, 'Yarowilca', 1),
(1073, '101101', 10, 11, 1, 'Chavinillo', 1),
(1074, '101102', 10, 11, 2, 'Cahuac', 1),
(1075, '101103', 10, 11, 3, 'Chacabamba', 1),
(1076, '101104', 10, 11, 4, 'Chupan', 1),
(1077, '101105', 10, 11, 5, 'Jacas Chico', 1),
(1078, '101106', 10, 11, 6, 'Obas', 1),
(1079, '101107', 10, 11, 7, 'Pampamarca', 1),
(1080, '101108', 10, 11, 8, 'Choras', 1),
(1081, '110000', 11, 0, 0, 'Ica', 1),
(1082, '110100', 11, 1, 0, 'Ica', 1),
(1083, '110101', 11, 1, 1, 'Ica', 1),
(1084, '110102', 11, 1, 2, 'La Tinguiña', 1),
(1085, '110103', 11, 1, 3, 'Los Aquijes', 1),
(1086, '110104', 11, 1, 4, 'Ocucaje', 1),
(1087, '110105', 11, 1, 5, 'Pachacutec', 1),
(1088, '110106', 11, 1, 6, 'Parcona', 1),
(1089, '110107', 11, 1, 7, 'Pueblo Nuevo', 1),
(1090, '110108', 11, 1, 8, 'Salas', 1),
(1091, '110109', 11, 1, 9, 'San Jose de los Molinos', 1),
(1092, '110110', 11, 1, 10, 'San Juan Bautista', 1),
(1093, '110111', 11, 1, 11, 'Santiago', 1),
(1094, '110112', 11, 1, 12, 'Subtanjalla', 1),
(1095, '110113', 11, 1, 13, 'Tate', 1),
(1096, '110114', 11, 1, 14, 'Yauca del Rosario', 1),
(1097, '110200', 11, 2, 0, 'Chincha', 1),
(1098, '110201', 11, 2, 1, 'Chincha Alta', 1),
(1099, '110202', 11, 2, 2, 'Alto Laran', 1),
(1100, '110203', 11, 2, 3, 'Chavin', 1),
(1101, '110204', 11, 2, 4, 'Chincha Baja', 1),
(1102, '110205', 11, 2, 5, 'El Carmen', 1),
(1103, '110206', 11, 2, 6, 'Grocio Prado', 1),
(1104, '110207', 11, 2, 7, 'Pueblo Nuevo', 1),
(1105, '110208', 11, 2, 8, 'San Juan de Yanac', 1),
(1106, '110209', 11, 2, 9, 'San Pedro de Huacarpana', 1),
(1107, '110210', 11, 2, 10, 'Sunampe', 1),
(1108, '110211', 11, 2, 11, 'Tambo de Mora', 1),
(1109, '110300', 11, 3, 0, 'Nazca', 1),
(1110, '110301', 11, 3, 1, 'Nazca', 1),
(1111, '110302', 11, 3, 2, 'Changuillo', 1),
(1112, '110303', 11, 3, 3, 'El Ingenio', 1),
(1113, '110304', 11, 3, 4, 'Marcona', 1),
(1114, '110305', 11, 3, 5, 'Vista Alegre', 1),
(1115, '110400', 11, 4, 0, 'Palpa', 1),
(1116, '110401', 11, 4, 1, 'Palpa', 1),
(1117, '110402', 11, 4, 2, 'Llipata', 1),
(1118, '110403', 11, 4, 3, 'Rio Grande', 1),
(1119, '110404', 11, 4, 4, 'Santa Cruz', 1),
(1120, '110405', 11, 4, 5, 'Tibillo', 1),
(1121, '110500', 11, 5, 0, 'Pisco', 1),
(1122, '110501', 11, 5, 1, 'Pisco', 1),
(1123, '110502', 11, 5, 2, 'Huancano', 1),
(1124, '110503', 11, 5, 3, 'Humay', 1),
(1125, '110504', 11, 5, 4, 'Independencia', 1),
(1126, '110505', 11, 5, 5, 'Paracas', 1),
(1127, '110506', 11, 5, 6, 'San Andres', 1),
(1128, '110507', 11, 5, 7, 'San Clemente', 1),
(1129, '110508', 11, 5, 8, 'Tupac Amaru Inca', 1),
(1130, '120000', 12, 0, 0, 'Junin', 1),
(1131, '120100', 12, 1, 0, 'Huancayo', 1),
(1132, '120101', 12, 1, 1, 'Huancayo', 1),
(1133, '120104', 12, 1, 4, 'Carhuacallanga', 1),
(1134, '120105', 12, 1, 5, 'Chacapampa', 1),
(1135, '120106', 12, 1, 6, 'Chicche', 1),
(1136, '120107', 12, 1, 7, 'Chilca', 1),
(1137, '120108', 12, 1, 8, 'Chongos Alto', 1),
(1138, '120111', 12, 1, 11, 'Chupuro', 1),
(1139, '120112', 12, 1, 12, 'Colca', 1),
(1140, '120113', 12, 1, 13, 'Cullhuas', 1),
(1141, '120114', 12, 1, 14, 'El Tambo', 1),
(1142, '120116', 12, 1, 16, 'Huacrapuquio', 1),
(1143, '120117', 12, 1, 17, 'Hualhuas', 1),
(1144, '120119', 12, 1, 19, 'Huancan', 1),
(1145, '120120', 12, 1, 20, 'Huasicancha', 1),
(1146, '120121', 12, 1, 21, 'Huayucachi', 1),
(1147, '120122', 12, 1, 22, 'Ingenio', 1),
(1148, '120124', 12, 1, 24, 'Pariahuanca', 1),
(1149, '120125', 12, 1, 25, 'Pilcomayo', 1),
(1150, '120126', 12, 1, 26, 'Pucara', 1),
(1151, '120127', 12, 1, 27, 'Quichuay', 1),
(1152, '120128', 12, 1, 28, 'Quilcas', 1),
(1153, '120129', 12, 1, 29, 'San Agustin', 1),
(1154, '120130', 12, 1, 30, 'San Jeronimo de Tunan', 1),
(1155, '120132', 12, 1, 32, 'Saño', 1),
(1156, '120133', 12, 1, 33, 'Sapallanga', 1),
(1157, '120134', 12, 1, 34, 'Sicaya', 1),
(1158, '120135', 12, 1, 35, 'Santo Domingo de Acobamba', 1),
(1159, '120136', 12, 1, 36, 'Viques', 1),
(1160, '120200', 12, 2, 0, 'Concepcion', 1),
(1161, '120201', 12, 2, 1, 'Concepcion', 1),
(1162, '120202', 12, 2, 2, 'Aco', 1),
(1163, '120203', 12, 2, 3, 'Andamarca', 1),
(1164, '120204', 12, 2, 4, 'Chambara', 1),
(1165, '120205', 12, 2, 5, 'Cochas', 1),
(1166, '120206', 12, 2, 6, 'Comas', 1),
(1167, '120207', 12, 2, 7, 'Heroinas Toledo', 1),
(1168, '120208', 12, 2, 8, 'Manzanares', 1),
(1169, '120209', 12, 2, 9, 'Mariscal Castilla', 1),
(1170, '120210', 12, 2, 10, 'Matahuasi', 1),
(1171, '120211', 12, 2, 11, 'Mito', 1),
(1172, '120212', 12, 2, 12, 'Nueve de Julio', 1),
(1173, '120213', 12, 2, 13, 'Orcotuna', 1),
(1174, '120214', 12, 2, 14, 'San Jose de Quero', 1),
(1175, '120215', 12, 2, 15, 'Santa Rosa de Ocopa', 1),
(1176, '120300', 12, 3, 0, 'Chanchamayo', 1),
(1177, '120301', 12, 3, 1, 'Chanchamayo', 1),
(1178, '120302', 12, 3, 2, 'Perene', 1),
(1179, '120303', 12, 3, 3, 'Pichanaqui', 1),
(1180, '120304', 12, 3, 4, 'San Luis de Shuaro', 1),
(1181, '120305', 12, 3, 5, 'San Ramon', 1),
(1182, '120306', 12, 3, 6, 'Vitoc', 1),
(1183, '120400', 12, 4, 0, 'Jauja', 1),
(1184, '120401', 12, 4, 1, 'Jauja', 1),
(1185, '120402', 12, 4, 2, 'Acolla', 1),
(1186, '120403', 12, 4, 3, 'Apata', 1),
(1187, '120404', 12, 4, 4, 'Ataura', 1),
(1188, '120405', 12, 4, 5, 'Canchayllo', 1),
(1189, '120406', 12, 4, 6, 'Curicaca', 1),
(1190, '120407', 12, 4, 7, 'El Mantaro', 1),
(1191, '120408', 12, 4, 8, 'Huamali', 1),
(1192, '120409', 12, 4, 9, 'Huaripampa', 1),
(1193, '120410', 12, 4, 10, 'Huertas', 1),
(1194, '120411', 12, 4, 11, 'Janjaillo', 1),
(1195, '120412', 12, 4, 12, 'Julcan', 1),
(1196, '120413', 12, 4, 13, 'Leonor Ordoñez', 1),
(1197, '120414', 12, 4, 14, 'Llocllapampa', 1),
(1198, '120415', 12, 4, 15, 'Marco', 1),
(1199, '120416', 12, 4, 16, 'Masma', 1),
(1200, '120417', 12, 4, 17, 'Masma Chicche', 1),
(1201, '120418', 12, 4, 18, 'Molinos', 1),
(1202, '120419', 12, 4, 19, 'Monobamba', 1),
(1203, '120420', 12, 4, 20, 'Muqui', 1),
(1204, '120421', 12, 4, 21, 'Muquiyauyo', 1),
(1205, '120422', 12, 4, 22, 'Paca', 1),
(1206, '120423', 12, 4, 23, 'Paccha', 1),
(1207, '120424', 12, 4, 24, 'Pancan', 1),
(1208, '120425', 12, 4, 25, 'Parco', 1),
(1209, '120426', 12, 4, 26, 'Pomacancha', 1),
(1210, '120427', 12, 4, 27, 'Ricran', 1),
(1211, '120428', 12, 4, 28, 'San Lorenzo', 1),
(1212, '120429', 12, 4, 29, 'San Pedro de Chunan', 1),
(1213, '120430', 12, 4, 30, 'Sausa', 1),
(1214, '120431', 12, 4, 31, 'Sincos', 1),
(1215, '120432', 12, 4, 32, 'Tunan Marca', 1),
(1216, '120433', 12, 4, 33, 'Yauli', 1),
(1217, '120434', 12, 4, 34, 'Yauyos', 1),
(1218, '120500', 12, 5, 0, 'Junin', 1),
(1219, '120501', 12, 5, 1, 'Junin', 1),
(1220, '120502', 12, 5, 2, 'Carhuamayo', 1),
(1221, '120503', 12, 5, 3, 'Ondores', 1),
(1222, '120504', 12, 5, 4, 'Ulcumayo', 1),
(1223, '120600', 12, 6, 0, 'Satipo', 1),
(1224, '120601', 12, 6, 1, 'Satipo', 1),
(1225, '120602', 12, 6, 2, 'Coviriali', 1),
(1226, '120603', 12, 6, 3, 'Llaylla', 1),
(1227, '120604', 12, 6, 4, 'Mazamari', 1),
(1228, '120605', 12, 6, 5, 'Pampa Hermosa', 1),
(1229, '120606', 12, 6, 6, 'Pangoa', 1),
(1230, '120607', 12, 6, 7, 'Rio Negro', 1),
(1231, '120608', 12, 6, 8, 'Rio Tambo', 1),
(1232, '120699', 12, 6, 99, 'Mazamari-Pangoa', 1),
(1233, '120700', 12, 7, 0, 'Tarma', 1),
(1234, '120701', 12, 7, 1, 'Tarma', 1),
(1235, '120702', 12, 7, 2, 'Acobamba', 1),
(1236, '120703', 12, 7, 3, 'Huaricolca', 1),
(1237, '120704', 12, 7, 4, 'Huasahuasi', 1),
(1238, '120705', 12, 7, 5, 'La Union', 1),
(1239, '120706', 12, 7, 6, 'Palca', 1),
(1240, '120707', 12, 7, 7, 'Palcamayo', 1),
(1241, '120708', 12, 7, 8, 'San Pedro de Cajas', 1),
(1242, '120709', 12, 7, 9, 'Tapo', 1),
(1243, '120800', 12, 8, 0, 'Yauli', 1),
(1244, '120801', 12, 8, 1, 'La Oroya', 1),
(1245, '120802', 12, 8, 2, 'Chacapalpa', 1),
(1246, '120803', 12, 8, 3, 'Huay-Huay', 1),
(1247, '120804', 12, 8, 4, 'Marcapomacocha', 1),
(1248, '120805', 12, 8, 5, 'Morococha', 1),
(1249, '120806', 12, 8, 6, 'Paccha', 1),
(1250, '120807', 12, 8, 7, 'Santa Barbara de Carhuacayan', 1),
(1251, '120808', 12, 8, 8, 'Santa Rosa de Sacco', 1),
(1252, '120809', 12, 8, 9, 'Suitucancha', 1),
(1253, '120810', 12, 8, 10, 'Yauli', 1),
(1254, '120900', 12, 9, 0, 'Chupaca', 1),
(1255, '120901', 12, 9, 1, 'Chupaca', 1),
(1256, '120902', 12, 9, 2, 'Ahuac', 1),
(1257, '120903', 12, 9, 3, 'Chongos Bajo', 1),
(1258, '120904', 12, 9, 4, 'Huachac', 1),
(1259, '120905', 12, 9, 5, 'Huamancaca Chico', 1),
(1260, '120906', 12, 9, 6, 'San Juan de Iscos', 1),
(1261, '120907', 12, 9, 7, 'San Juan de Jarpa', 1),
(1262, '120908', 12, 9, 8, '3 de Diciembre', 1),
(1263, '120909', 12, 9, 9, 'Yanacancha', 1),
(1264, '130000', 13, 0, 0, 'La Libertad', 1),
(1265, '130100', 13, 1, 0, 'Trujillo', 1),
(1266, '130101', 13, 1, 1, 'Trujillo', 1),
(1267, '130102', 13, 1, 2, 'El Porvenir', 1),
(1268, '130103', 13, 1, 3, 'Florencia de Mora', 1),
(1269, '130104', 13, 1, 4, 'Huanchaco', 1),
(1270, '130105', 13, 1, 5, 'La Esperanza', 1),
(1271, '130106', 13, 1, 6, 'Laredo', 1),
(1272, '130107', 13, 1, 7, 'Moche', 1),
(1273, '130108', 13, 1, 8, 'Poroto', 1),
(1274, '130109', 13, 1, 9, 'Salaverry', 1),
(1275, '130110', 13, 1, 10, 'Simbal', 1),
(1276, '130111', 13, 1, 11, 'Victor Larco Herrera', 1),
(1277, '130200', 13, 2, 0, 'Ascope', 1),
(1278, '130201', 13, 2, 1, 'Ascope', 1),
(1279, '130202', 13, 2, 2, 'Chicama', 1),
(1280, '130203', 13, 2, 3, 'Chocope', 1),
(1281, '130204', 13, 2, 4, 'Magdalena de Cao', 1),
(1282, '130205', 13, 2, 5, 'Paijan', 1),
(1283, '130206', 13, 2, 6, 'Razuri', 1),
(1284, '130207', 13, 2, 7, 'Santiago de Cao', 1),
(1285, '130208', 13, 2, 8, 'Casa Grande', 1),
(1286, '130300', 13, 3, 0, 'Bolivar', 1),
(1287, '130301', 13, 3, 1, 'Bolivar', 1),
(1288, '130302', 13, 3, 2, 'Bambamarca', 1),
(1289, '130303', 13, 3, 3, 'Condormarca', 1),
(1290, '130304', 13, 3, 4, 'Longotea', 1),
(1291, '130305', 13, 3, 5, 'Uchumarca', 1),
(1292, '130306', 13, 3, 6, 'Ucuncha', 1),
(1293, '130400', 13, 4, 0, 'Chepen', 1),
(1294, '130401', 13, 4, 1, 'Chepen', 1),
(1295, '130402', 13, 4, 2, 'Pacanga', 1),
(1296, '130403', 13, 4, 3, 'Pueblo Nuevo', 1),
(1297, '130500', 13, 5, 0, 'Julcan', 1),
(1298, '130501', 13, 5, 1, 'Julcan', 1),
(1299, '130502', 13, 5, 2, 'Calamarca', 1),
(1300, '130503', 13, 5, 3, 'Carabamba', 1),
(1301, '130504', 13, 5, 4, 'Huaso', 1),
(1302, '130600', 13, 6, 0, 'Otuzco', 1),
(1303, '130601', 13, 6, 1, 'Otuzco', 1),
(1304, '130602', 13, 6, 2, 'Agallpampa', 1),
(1305, '130604', 13, 6, 4, 'Charat', 1),
(1306, '130605', 13, 6, 5, 'Huaranchal', 1),
(1307, '130606', 13, 6, 6, 'La Cuesta', 1),
(1308, '130608', 13, 6, 8, 'Mache', 1),
(1309, '130610', 13, 6, 10, 'Paranday', 1),
(1310, '130611', 13, 6, 11, 'Salpo', 1),
(1311, '130613', 13, 6, 13, 'Sinsicap', 1),
(1312, '130614', 13, 6, 14, 'Usquil', 1),
(1313, '130700', 13, 7, 0, 'Pacasmayo', 1),
(1314, '130701', 13, 7, 1, 'San Pedro de Lloc', 1),
(1315, '130702', 13, 7, 2, 'Guadalupe', 1),
(1316, '130703', 13, 7, 3, 'Jequetepeque', 1),
(1317, '130704', 13, 7, 4, 'Pacasmayo', 1),
(1318, '130705', 13, 7, 5, 'San Jose', 1),
(1319, '130800', 13, 8, 0, 'Pataz', 1),
(1320, '130801', 13, 8, 1, 'Tayabamba', 1),
(1321, '130802', 13, 8, 2, 'Buldibuyo', 1),
(1322, '130803', 13, 8, 3, 'Chillia', 1),
(1323, '130804', 13, 8, 4, 'Huancaspata', 1),
(1324, '130805', 13, 8, 5, 'Huaylillas', 1),
(1325, '130806', 13, 8, 6, 'Huayo', 1),
(1326, '130807', 13, 8, 7, 'Ongon', 1),
(1327, '130808', 13, 8, 8, 'Parcoy', 1),
(1328, '130809', 13, 8, 9, 'Pataz', 1),
(1329, '130810', 13, 8, 10, 'Pias', 1),
(1330, '130811', 13, 8, 11, 'Santiago de Challas', 1),
(1331, '130812', 13, 8, 12, 'Taurija', 1),
(1332, '130813', 13, 8, 13, 'Urpay', 1),
(1333, '130900', 13, 9, 0, 'Sanchez Carrion', 1),
(1334, '130901', 13, 9, 1, 'Huamachuco', 1),
(1335, '130902', 13, 9, 2, 'Chugay', 1),
(1336, '130903', 13, 9, 3, 'Cochorco', 1),
(1337, '130904', 13, 9, 4, 'Curgos', 1),
(1338, '130905', 13, 9, 5, 'Marcabal', 1),
(1339, '130906', 13, 9, 6, 'Sanagoran', 1),
(1340, '130907', 13, 9, 7, 'Sarin', 1),
(1341, '130908', 13, 9, 8, 'Sartimbamba', 1),
(1342, '131000', 13, 10, 0, 'Santiago de Chuco', 1),
(1343, '131001', 13, 10, 1, 'Santiago de Chuco', 1),
(1344, '131002', 13, 10, 2, 'Angasmarca', 1),
(1345, '131003', 13, 10, 3, 'Cachicadan', 1),
(1346, '131004', 13, 10, 4, 'Mollebamba', 1),
(1347, '131005', 13, 10, 5, 'Mollepata', 1),
(1348, '131006', 13, 10, 6, 'Quiruvilca', 1),
(1349, '131007', 13, 10, 7, 'Santa Cruz de Chuca', 1),
(1350, '131008', 13, 10, 8, 'Sitabamba', 1),
(1351, '131100', 13, 11, 0, 'Gran Chimu', 1),
(1352, '131101', 13, 11, 1, 'Cascas', 1),
(1353, '131102', 13, 11, 2, 'Lucma', 1),
(1354, '131103', 13, 11, 3, 'Marmot', 1),
(1355, '131104', 13, 11, 4, 'Sayapullo', 1),
(1356, '131200', 13, 12, 0, 'Viru', 1),
(1357, '131201', 13, 12, 1, 'Viru', 1),
(1358, '131202', 13, 12, 2, 'Chao', 1),
(1359, '131203', 13, 12, 3, 'Guadalupito', 1),
(1360, '140000', 14, 0, 0, 'Lambayeque', 1),
(1361, '140100', 14, 1, 0, 'Chiclayo', 1),
(1362, '140101', 14, 1, 1, 'Chiclayo', 1),
(1363, '140102', 14, 1, 2, 'Chongoyape', 1),
(1364, '140103', 14, 1, 3, 'Eten', 1),
(1365, '140104', 14, 1, 4, 'Eten Puerto', 1),
(1366, '140105', 14, 1, 5, 'Jose Leonardo Ortiz', 1),
(1367, '140106', 14, 1, 6, 'La Victoria', 1),
(1368, '140107', 14, 1, 7, 'Lagunas', 1),
(1369, '140108', 14, 1, 8, 'Monsefu', 1),
(1370, '140109', 14, 1, 9, 'Nueva Arica', 1),
(1371, '140110', 14, 1, 10, 'Oyotun', 1),
(1372, '140111', 14, 1, 11, 'Picsi', 1),
(1373, '140112', 14, 1, 12, 'Pimentel', 1),
(1374, '140113', 14, 1, 13, 'Reque', 1),
(1375, '140114', 14, 1, 14, 'Santa Rosa', 1),
(1376, '140115', 14, 1, 15, 'Saña', 1),
(1377, '140116', 14, 1, 16, 'Cayaltí', 1),
(1378, '140117', 14, 1, 17, 'Patapo', 1),
(1379, '140118', 14, 1, 18, 'Pomalca', 1),
(1380, '140119', 14, 1, 19, 'Pucalá', 1),
(1381, '140120', 14, 1, 20, 'Tumán', 1),
(1382, '140200', 14, 2, 0, 'Ferreñafe', 1),
(1383, '140201', 14, 2, 1, 'Ferreñafe', 1),
(1384, '140202', 14, 2, 2, 'Cañaris', 1),
(1385, '140203', 14, 2, 3, 'Incahuasi', 1),
(1386, '140204', 14, 2, 4, 'Manuel Antonio Mesones Muro', 1),
(1387, '140205', 14, 2, 5, 'Pitipo', 1),
(1388, '140206', 14, 2, 6, 'Pueblo Nuevo', 1),
(1389, '140300', 14, 3, 0, 'Lambayeque', 1),
(1390, '140301', 14, 3, 1, 'Lambayeque', 1),
(1391, '140302', 14, 3, 2, 'Chochope', 1),
(1392, '140303', 14, 3, 3, 'Illimo', 1),
(1393, '140304', 14, 3, 4, 'Jayanca', 1),
(1394, '140305', 14, 3, 5, 'Mochumi', 1),
(1395, '140306', 14, 3, 6, 'Morrope', 1),
(1396, '140307', 14, 3, 7, 'Motupe', 1),
(1397, '140308', 14, 3, 8, 'Olmos', 1),
(1398, '140309', 14, 3, 9, 'Pacora', 1),
(1399, '140310', 14, 3, 10, 'Salas', 1),
(1400, '140311', 14, 3, 11, 'San Jose', 1),
(1401, '140312', 14, 3, 12, 'Tucume', 1),
(1402, '150000', 15, 0, 0, 'Lima', 1),
(1403, '150100', 15, 1, 0, 'Lima', 1),
(1404, '150101', 15, 1, 1, 'Lima', 1),
(1405, '150102', 15, 1, 2, 'Ancon', 1),
(1406, '150103', 15, 1, 3, 'Ate', 1),
(1407, '150104', 15, 1, 4, 'Barranco', 1),
(1408, '150105', 15, 1, 5, 'Breña', 1),
(1409, '150106', 15, 1, 6, 'Carabayllo', 1),
(1410, '150107', 15, 1, 7, 'Chaclacayo', 1),
(1411, '150108', 15, 1, 8, 'Chorrillos', 1),
(1412, '150109', 15, 1, 9, 'Cieneguilla', 1),
(1413, '150110', 15, 1, 10, 'Comas', 1),
(1414, '150111', 15, 1, 11, 'El Agustino', 1),
(1415, '150112', 15, 1, 12, 'Independencia', 1),
(1416, '150113', 15, 1, 13, 'Jesus Maria', 1),
(1417, '150114', 15, 1, 14, 'La Molina', 1),
(1418, '150115', 15, 1, 15, 'La Victoria', 1),
(1419, '150116', 15, 1, 16, 'Lince', 1),
(1420, '150117', 15, 1, 17, 'Los Olivos', 1),
(1421, '150118', 15, 1, 18, 'Lurigancho', 1),
(1422, '150119', 15, 1, 19, 'Lurin', 1),
(1423, '150120', 15, 1, 20, 'Magdalena del Mar', 1),
(1424, '150121', 15, 1, 21, 'Pueblo Libre (Magdalena Vieja)', 1),
(1425, '150122', 15, 1, 22, 'Miraflores', 1),
(1426, '150123', 15, 1, 23, 'Pachacamac', 1),
(1427, '150124', 15, 1, 24, 'Pucusana', 1),
(1428, '150125', 15, 1, 25, 'Puente Piedra', 1),
(1429, '150126', 15, 1, 26, 'Punta Hermosa', 1),
(1430, '150127', 15, 1, 27, 'Punta Negra', 1),
(1431, '150128', 15, 1, 28, 'Rimac', 1),
(1432, '150129', 15, 1, 29, 'San Bartolo', 1),
(1433, '150130', 15, 1, 30, 'San Borja', 1),
(1434, '150131', 15, 1, 31, 'San Isidro', 1),
(1435, '150132', 15, 1, 32, 'San Juan de Lurigancho', 1),
(1436, '150133', 15, 1, 33, 'San Juan de Miraflores', 1),
(1437, '150134', 15, 1, 34, 'San Luis', 1),
(1438, '150135', 15, 1, 35, 'San Martin de Porres', 1),
(1439, '150136', 15, 1, 36, 'San Miguel', 1),
(1440, '150137', 15, 1, 37, 'Santa Anita', 1),
(1441, '150138', 15, 1, 38, 'Santa Maria del Mar', 1),
(1442, '150139', 15, 1, 39, 'Santa Rosa', 1),
(1443, '150140', 15, 1, 40, 'Santiago de Surco', 1),
(1444, '150141', 15, 1, 41, 'Surquillo', 1),
(1445, '150142', 15, 1, 42, 'Villa El Salvador', 1),
(1446, '150143', 15, 1, 43, 'Villa Maria del Triunfo', 1),
(1447, '150200', 15, 2, 0, 'Barranca', 1),
(1448, '150201', 15, 2, 1, 'Barranca', 1),
(1449, '150202', 15, 2, 2, 'Paramonga', 1),
(1450, '150203', 15, 2, 3, 'Pativilca', 1),
(1451, '150204', 15, 2, 4, 'Supe', 1),
(1452, '150205', 15, 2, 5, 'Supe Puerto', 1),
(1453, '150300', 15, 3, 0, 'Cajatambo', 1),
(1454, '150301', 15, 3, 1, 'Cajatambo', 1),
(1455, '150302', 15, 3, 2, 'Copa', 1),
(1456, '150303', 15, 3, 3, 'Gorgor', 1),
(1457, '150304', 15, 3, 4, 'Huancapon', 1),
(1458, '150305', 15, 3, 5, 'Manas', 1),
(1459, '150400', 15, 4, 0, 'Canta', 1),
(1460, '150401', 15, 4, 1, 'Canta', 1),
(1461, '150402', 15, 4, 2, 'Arahuay', 1),
(1462, '150403', 15, 4, 3, 'Huamantanga', 1),
(1463, '150404', 15, 4, 4, 'Huaros', 1),
(1464, '150405', 15, 4, 5, 'Lachaqui', 1),
(1465, '150406', 15, 4, 6, 'San Buenaventura', 1),
(1466, '150407', 15, 4, 7, 'Santa Rosa de Quives', 1),
(1467, '150500', 15, 5, 0, 'Cañete', 1),
(1468, '150501', 15, 5, 1, 'San Vicente de Cañete', 1),
(1469, '150502', 15, 5, 2, 'Asia', 1),
(1470, '150503', 15, 5, 3, 'Calango', 1),
(1471, '150504', 15, 5, 4, 'Cerro Azul', 1),
(1472, '150505', 15, 5, 5, 'Chilca', 1),
(1473, '150506', 15, 5, 6, 'Coayllo', 1),
(1474, '150507', 15, 5, 7, 'Imperial', 1),
(1475, '150508', 15, 5, 8, 'Lunahuana', 1),
(1476, '150509', 15, 5, 9, 'Mala', 1),
(1477, '150510', 15, 5, 10, 'Nuevo Imperial', 1),
(1478, '150511', 15, 5, 11, 'Pacaran', 1),
(1479, '150512', 15, 5, 12, 'Quilmana', 1),
(1480, '150513', 15, 5, 13, 'San Antonio', 1),
(1481, '150514', 15, 5, 14, 'San Luis', 1),
(1482, '150515', 15, 5, 15, 'Santa Cruz de Flores', 1),
(1483, '150516', 15, 5, 16, 'Zuñiga', 1),
(1484, '150600', 15, 6, 0, 'Huaral', 1),
(1485, '150601', 15, 6, 1, 'Huaral', 1),
(1486, '150602', 15, 6, 2, 'Atavillos Alto', 1),
(1487, '150603', 15, 6, 3, 'Atavillos Bajo', 1),
(1488, '150604', 15, 6, 4, 'Aucallama', 1),
(1489, '150605', 15, 6, 5, 'Chancay', 1),
(1490, '150606', 15, 6, 6, 'Ihuari', 1),
(1491, '150607', 15, 6, 7, 'Lampian', 1),
(1492, '150608', 15, 6, 8, 'Pacaraos', 1),
(1493, '150609', 15, 6, 9, 'San Miguel de Acos', 1),
(1494, '150610', 15, 6, 10, 'Santa Cruz de Andamarca', 1),
(1495, '150611', 15, 6, 11, 'Sumbilca', 1),
(1496, '150612', 15, 6, 12, 'Veintisiete de Noviembre', 1),
(1497, '150700', 15, 7, 0, 'Huarochiri', 1),
(1498, '150701', 15, 7, 1, 'Matucana', 1),
(1499, '150702', 15, 7, 2, 'Antioquia', 1),
(1500, '150703', 15, 7, 3, 'Callahuanca', 1),
(1501, '150704', 15, 7, 4, 'Carampoma', 1),
(1502, '150705', 15, 7, 5, 'Chicla', 1),
(1503, '150706', 15, 7, 6, 'Cuenca', 1),
(1504, '150707', 15, 7, 7, 'Huachupampa', 1),
(1505, '150708', 15, 7, 8, 'Huanza', 1),
(1506, '150709', 15, 7, 9, 'Huarochiri', 1),
(1507, '150710', 15, 7, 10, 'Lahuaytambo', 1),
(1508, '150711', 15, 7, 11, 'Langa', 1),
(1509, '150712', 15, 7, 12, 'Laraos', 1),
(1510, '150713', 15, 7, 13, 'Mariatana', 1),
(1511, '150714', 15, 7, 14, 'Ricardo Palma', 1),
(1512, '150715', 15, 7, 15, 'San Andres de Tupicocha', 1),
(1513, '150716', 15, 7, 16, 'San Antonio', 1),
(1514, '150717', 15, 7, 17, 'San Bartolome', 1),
(1515, '150718', 15, 7, 18, 'San Damian', 1),
(1516, '150719', 15, 7, 19, 'San Juan de Iris', 1),
(1517, '150720', 15, 7, 20, 'San Juan de Tantaranche', 1),
(1518, '150721', 15, 7, 21, 'San Lorenzo de Quinti', 1),
(1519, '150722', 15, 7, 22, 'San Mateo', 1),
(1520, '150723', 15, 7, 23, 'San Mateo de Otao', 1),
(1521, '150724', 15, 7, 24, 'San Pedro de Casta', 1),
(1522, '150725', 15, 7, 25, 'San Pedro de Huancayre', 1),
(1523, '150726', 15, 7, 26, 'Sangallaya', 1),
(1524, '150727', 15, 7, 27, 'Santa Cruz de Cocachacra', 1),
(1525, '150728', 15, 7, 28, 'Santa Eulalia', 1),
(1526, '150729', 15, 7, 29, 'Santiago de Anchucaya', 1),
(1527, '150730', 15, 7, 30, 'Santiago de Tuna', 1),
(1528, '150731', 15, 7, 31, 'Santo Domingo de los Olleros', 1),
(1529, '150732', 15, 7, 32, 'Surco', 1),
(1530, '150800', 15, 8, 0, 'Huaura', 1),
(1531, '150801', 15, 8, 1, 'Huacho', 1),
(1532, '150802', 15, 8, 2, 'Ambar', 1),
(1533, '150803', 15, 8, 3, 'Caleta de Carquin', 1),
(1534, '150804', 15, 8, 4, 'Checras', 1),
(1535, '150805', 15, 8, 5, 'Hualmay', 1),
(1536, '150806', 15, 8, 6, 'Huaura', 1),
(1537, '150807', 15, 8, 7, 'Leoncio Prado', 1),
(1538, '150808', 15, 8, 8, 'Paccho', 1),
(1539, '150809', 15, 8, 9, 'Santa Leonor', 1),
(1540, '150810', 15, 8, 10, 'Santa Maria', 1),
(1541, '150811', 15, 8, 11, 'Sayan', 1),
(1542, '150812', 15, 8, 12, 'Vegueta', 1),
(1543, '150900', 15, 9, 0, 'Oyon', 1),
(1544, '150901', 15, 9, 1, 'Oyon', 1),
(1545, '150902', 15, 9, 2, 'Andajes', 1),
(1546, '150903', 15, 9, 3, 'Caujul', 1),
(1547, '150904', 15, 9, 4, 'Cochamarca', 1),
(1548, '150905', 15, 9, 5, 'Navan', 1),
(1549, '150906', 15, 9, 6, 'Pachangara', 1),
(1550, '151000', 15, 10, 0, 'Yauyos', 1),
(1551, '151001', 15, 10, 1, 'Yauyos', 1),
(1552, '151002', 15, 10, 2, 'Alis', 1),
(1553, '151003', 15, 10, 3, 'Ayauca', 1),
(1554, '151004', 15, 10, 4, 'Ayaviri', 1),
(1555, '151005', 15, 10, 5, 'Azangaro', 1),
(1556, '151006', 15, 10, 6, 'Cacra', 1),
(1557, '151007', 15, 10, 7, 'Carania', 1),
(1558, '151008', 15, 10, 8, 'Catahuasi', 1),
(1559, '151009', 15, 10, 9, 'Chocos', 1),
(1560, '151010', 15, 10, 10, 'Cochas', 1),
(1561, '151011', 15, 10, 11, 'Colonia', 1),
(1562, '151012', 15, 10, 12, 'Hongos', 1),
(1563, '151013', 15, 10, 13, 'Huampara', 1),
(1564, '151014', 15, 10, 14, 'Huancaya', 1),
(1565, '151015', 15, 10, 15, 'Huangascar', 1),
(1566, '151016', 15, 10, 16, 'Huantan', 1),
(1567, '151017', 15, 10, 17, 'Huañec', 1),
(1568, '151018', 15, 10, 18, 'Laraos', 1),
(1569, '151019', 15, 10, 19, 'Lincha', 1),
(1570, '151020', 15, 10, 20, 'Madean', 1),
(1571, '151021', 15, 10, 21, 'Miraflores', 1),
(1572, '151022', 15, 10, 22, 'Omas', 1),
(1573, '151023', 15, 10, 23, 'Putinza', 1),
(1574, '151024', 15, 10, 24, 'Quinches', 1),
(1575, '151025', 15, 10, 25, 'Quinocay', 1),
(1576, '151026', 15, 10, 26, 'San Joaquin', 1),
(1577, '151027', 15, 10, 27, 'San Pedro de Pilas', 1),
(1578, '151028', 15, 10, 28, 'Tanta', 1),
(1579, '151029', 15, 10, 29, 'Tauripampa', 1),
(1580, '151030', 15, 10, 30, 'Tomas', 1),
(1581, '151031', 15, 10, 31, 'Tupe', 1),
(1582, '151032', 15, 10, 32, 'Viñac', 1),
(1583, '151033', 15, 10, 33, 'Vitis', 1),
(1584, '160000', 16, 0, 0, 'Loreto', 1),
(1585, '160100', 16, 1, 0, 'Maynas', 1),
(1586, '160101', 16, 1, 1, 'Iquitos', 1),
(1587, '160102', 16, 1, 2, 'Alto Nanay', 1),
(1588, '160103', 16, 1, 3, 'Fernando Lores', 1),
(1589, '160104', 16, 1, 4, 'Indiana', 1),
(1590, '160105', 16, 1, 5, 'Las Amazonas', 1),
(1591, '160106', 16, 1, 6, 'Mazan', 1),
(1592, '160107', 16, 1, 7, 'Napo', 1),
(1593, '160108', 16, 1, 8, 'Punchana', 1),
(1594, '160109', 16, 1, 9, 'Putumayo', 1),
(1595, '160110', 16, 1, 10, 'Torres Causana', 1),
(1596, '160112', 16, 1, 12, 'Belén', 1),
(1597, '160113', 16, 1, 13, 'San Juan Bautista', 1),
(1598, '160114', 16, 1, 14, 'Teniente Manuel Clavero', 1),
(1599, '160200', 16, 2, 0, 'Alto Amazonas', 1),
(1600, '160201', 16, 2, 1, 'Yurimaguas', 1),
(1601, '160202', 16, 2, 2, 'Balsapuerto', 1),
(1602, '160205', 16, 2, 5, 'Jeberos', 1),
(1603, '160206', 16, 2, 6, 'Lagunas', 1),
(1604, '160210', 16, 2, 10, 'Santa Cruz', 1),
(1605, '160211', 16, 2, 11, 'Teniente Cesar Lopez Rojas', 1),
(1606, '160300', 16, 3, 0, 'Loreto', 1),
(1607, '160301', 16, 3, 1, 'Nauta', 1),
(1608, '160302', 16, 3, 2, 'Parinari', 1),
(1609, '160303', 16, 3, 3, 'Tigre', 1),
(1610, '160304', 16, 3, 4, 'Trompeteros', 1),
(1611, '160305', 16, 3, 5, 'Urarinas', 1),
(1612, '160400', 16, 4, 0, 'Mariscal Ramon Castilla', 1),
(1613, '160401', 16, 4, 1, 'Ramon Castilla', 1),
(1614, '160402', 16, 4, 2, 'Pebas', 1),
(1615, '160403', 16, 4, 3, 'Yavari', 1),
(1616, '160404', 16, 4, 4, 'San Pablo', 1),
(1617, '160500', 16, 5, 0, 'Requena', 1),
(1618, '160501', 16, 5, 1, 'Requena', 1),
(1619, '160502', 16, 5, 2, 'Alto Tapiche', 1),
(1620, '160503', 16, 5, 3, 'Capelo', 1),
(1621, '160504', 16, 5, 4, 'Emilio San Martin', 1),
(1622, '160505', 16, 5, 5, 'Maquia', 1),
(1623, '160506', 16, 5, 6, 'Puinahua', 1),
(1624, '160507', 16, 5, 7, 'Saquena', 1),
(1625, '160508', 16, 5, 8, 'Soplin', 1),
(1626, '160509', 16, 5, 9, 'Tapiche', 1),
(1627, '160510', 16, 5, 10, 'Jenaro Herrera', 1),
(1628, '160511', 16, 5, 11, 'Yaquerana', 1),
(1629, '160600', 16, 6, 0, 'Ucayali', 1),
(1630, '160601', 16, 6, 1, 'Contamana', 1),
(1631, '160602', 16, 6, 2, 'Inahuaya', 1),
(1632, '160603', 16, 6, 3, 'Padre Marquez', 1),
(1633, '160604', 16, 6, 4, 'Pampa Hermosa', 1),
(1634, '160605', 16, 6, 5, 'Sarayacu', 1),
(1635, '160606', 16, 6, 6, 'Vargas Guerra', 1),
(1636, '160700', 16, 7, 0, 'Datem del Marañón', 1),
(1637, '160701', 16, 7, 1, 'Barranca', 1),
(1638, '160702', 16, 7, 2, 'Cahuapanas', 1),
(1639, '160703', 16, 7, 3, 'Manseriche', 1),
(1640, '160704', 16, 7, 4, 'Morona', 1),
(1641, '160705', 16, 7, 5, 'Pastaza', 1),
(1642, '160706', 16, 7, 6, 'Andoas', 1),
(1643, '160800', 16, 8, 0, 'Putumayo', 1),
(1644, '160801', 16, 8, 1, 'Putumayo', 1),
(1645, '160802', 16, 8, 2, 'Rosa Panduro', 1),
(1646, '160803', 16, 8, 3, 'Teniente Manuel Clavero', 1),
(1647, '160804', 16, 8, 4, 'Yaguas', 1),
(1648, '170000', 17, 0, 0, 'Madre de Dios', 1),
(1649, '170100', 17, 1, 0, 'Tambopata', 1),
(1650, '170101', 17, 1, 1, 'Tambopata', 1),
(1651, '170102', 17, 1, 2, 'Inambari', 1),
(1652, '170103', 17, 1, 3, 'Las Piedras', 1),
(1653, '170104', 17, 1, 4, 'Laberinto', 1),
(1654, '170200', 17, 2, 0, 'Manu', 1),
(1655, '170201', 17, 2, 1, 'Manu', 1),
(1656, '170202', 17, 2, 2, 'Fitzcarrald', 1),
(1657, '170203', 17, 2, 3, 'Madre de Dios', 1),
(1658, '170204', 17, 2, 4, 'Huepetuhe', 1),
(1659, '170300', 17, 3, 0, 'Tahuamanu', 1),
(1660, '170301', 17, 3, 1, 'Iñapari', 1),
(1661, '170302', 17, 3, 2, 'Iberia', 1),
(1662, '170303', 17, 3, 3, 'Tahuamanu', 1),
(1663, '180000', 18, 0, 0, 'Moquegua', 1),
(1664, '180100', 18, 1, 0, 'Mariscal Nieto', 1),
(1665, '180101', 18, 1, 1, 'Moquegua', 1),
(1666, '180102', 18, 1, 2, 'Carumas', 1),
(1667, '180103', 18, 1, 3, 'Cuchumbaya', 1),
(1668, '180104', 18, 1, 4, 'Samegua', 1),
(1669, '180105', 18, 1, 5, 'San Cristobal', 1),
(1670, '180106', 18, 1, 6, 'Torata', 1),
(1671, '180200', 18, 2, 0, 'General Sanchez Cerro', 1),
(1672, '180201', 18, 2, 1, 'Omate', 1),
(1673, '180202', 18, 2, 2, 'Chojata', 1),
(1674, '180203', 18, 2, 3, 'Coalaque', 1),
(1675, '180204', 18, 2, 4, 'Ichuña', 1),
(1676, '180205', 18, 2, 5, 'La Capilla', 1),
(1677, '180206', 18, 2, 6, 'Lloque', 1),
(1678, '180207', 18, 2, 7, 'Matalaque', 1),
(1679, '180208', 18, 2, 8, 'Puquina', 1),
(1680, '180209', 18, 2, 9, 'Quinistaquillas', 1),
(1681, '180210', 18, 2, 10, 'Ubinas', 1),
(1682, '180211', 18, 2, 11, 'Yunga', 1),
(1683, '180300', 18, 3, 0, 'Ilo', 1),
(1684, '180301', 18, 3, 1, 'Ilo', 1),
(1685, '180302', 18, 3, 2, 'El Algarrobal', 1),
(1686, '180303', 18, 3, 3, 'Pacocha', 1),
(1687, '190000', 19, 0, 0, 'Pasco', 1),
(1688, '190100', 19, 1, 0, 'Pasco', 1),
(1689, '190101', 19, 1, 1, 'Chaupimarca', 1),
(1690, '190102', 19, 1, 2, 'Huachon', 1),
(1691, '190103', 19, 1, 3, 'Huariaca', 1),
(1692, '190104', 19, 1, 4, 'Huayllay', 1),
(1693, '190105', 19, 1, 5, 'Ninacaca', 1),
(1694, '190106', 19, 1, 6, 'Pallanchacra', 1),
(1695, '190107', 19, 1, 7, 'Paucartambo', 1),
(1696, '190108', 19, 1, 8, 'San Fco. de Asís de Yarusyacán', 1),
(1697, '190109', 19, 1, 9, 'Simon Bolivar', 1),
(1698, '190110', 19, 1, 10, 'Ticlacayan', 1),
(1699, '190111', 19, 1, 11, 'Tinyahuarco', 1),
(1700, '190112', 19, 1, 12, 'Vicco', 1),
(1701, '190113', 19, 1, 13, 'Yanacancha', 1),
(1702, '190200', 19, 2, 0, 'Daniel Alcides Carrion', 1),
(1703, '190201', 19, 2, 1, 'Yanahuanca', 1),
(1704, '190202', 19, 2, 2, 'Chacayan', 1),
(1705, '190203', 19, 2, 3, 'Goyllarisquizga', 1),
(1706, '190204', 19, 2, 4, 'Paucar', 1),
(1707, '190205', 19, 2, 5, 'San Pedro de Pillao', 1),
(1708, '190206', 19, 2, 6, 'Santa Ana de Tusi', 1),
(1709, '190207', 19, 2, 7, 'Tapuc', 1),
(1710, '190208', 19, 2, 8, 'Vilcabamba', 1),
(1711, '190300', 19, 3, 0, 'Oxapampa', 1),
(1712, '190301', 19, 3, 1, 'Oxapampa', 1),
(1713, '190302', 19, 3, 2, 'Chontabamba', 1),
(1714, '190303', 19, 3, 3, 'Huancabamba', 1),
(1715, '190304', 19, 3, 4, 'Palcazu', 1),
(1716, '190305', 19, 3, 5, 'Pozuzo', 1),
(1717, '190306', 19, 3, 6, 'Puerto Bermudez', 1),
(1718, '190307', 19, 3, 7, 'Villa Rica', 1),
(1719, '190308', 19, 3, 8, 'Constitucion', 1),
(1720, '200000', 20, 0, 0, 'Piura', 1),
(1721, '200100', 20, 1, 0, 'Piura', 1),
(1722, '200101', 20, 1, 1, 'Piura', 1),
(1723, '200104', 20, 1, 4, 'Castilla', 1),
(1724, '200105', 20, 1, 5, 'Catacaos', 1),
(1725, '200107', 20, 1, 7, 'Cura Mori', 1),
(1726, '200108', 20, 1, 8, 'El Tallan', 1),
(1727, '200109', 20, 1, 9, 'La Arena', 1),
(1728, '200110', 20, 1, 10, 'La Union', 1),
(1729, '200111', 20, 1, 11, 'Las Lomas', 1),
(1730, '200114', 20, 1, 14, 'Tambo Grande', 1),
(1731, '200115', 20, 1, 15, 'Veintiséis de Octubre', 1),
(1732, '200200', 20, 2, 0, 'Ayabaca', 1),
(1733, '200201', 20, 2, 1, 'Ayabaca', 1),
(1734, '200202', 20, 2, 2, 'Frias', 1),
(1735, '200203', 20, 2, 3, 'Jilili', 1),
(1736, '200204', 20, 2, 4, 'Lagunas', 1),
(1737, '200205', 20, 2, 5, 'Montero', 1),
(1738, '200206', 20, 2, 6, 'Pacaipampa', 1),
(1739, '200207', 20, 2, 7, 'Paimas', 1),
(1740, '200208', 20, 2, 8, 'Sapillica', 1),
(1741, '200209', 20, 2, 9, 'Sicchez', 1),
(1742, '200210', 20, 2, 10, 'Suyo', 1),
(1743, '200300', 20, 3, 0, 'Huancabamba', 1),
(1744, '200301', 20, 3, 1, 'Huancabamba', 1),
(1745, '200302', 20, 3, 2, 'Canchaque', 1),
(1746, '200303', 20, 3, 3, 'El Carmen de la Frontera', 1),
(1747, '200304', 20, 3, 4, 'Huarmaca', 1),
(1748, '200305', 20, 3, 5, 'Lalaquiz', 1),
(1749, '200306', 20, 3, 6, 'San Miguel de El Faique', 1),
(1750, '200307', 20, 3, 7, 'Sondor', 1),
(1751, '200308', 20, 3, 8, 'Sondorillo', 1),
(1752, '200400', 20, 4, 0, 'Morropon', 1),
(1753, '200401', 20, 4, 1, 'Chulucanas', 1),
(1754, '200402', 20, 4, 2, 'Buenos Aires', 1),
(1755, '200403', 20, 4, 3, 'Chalaco', 1),
(1756, '200404', 20, 4, 4, 'La Matanza', 1),
(1757, '200405', 20, 4, 5, 'Morropon', 1),
(1758, '200406', 20, 4, 6, 'Salitral', 1),
(1759, '200407', 20, 4, 7, 'San Juan de Bigote', 1),
(1760, '200408', 20, 4, 8, 'Santa Catalina de Mossa', 1),
(1761, '200409', 20, 4, 9, 'Santo Domingo', 1),
(1762, '200410', 20, 4, 10, 'Yamango', 1),
(1763, '200500', 20, 5, 0, 'Paita', 1),
(1764, '200501', 20, 5, 1, 'Paita', 1),
(1765, '200502', 20, 5, 2, 'Amotape', 1),
(1766, '200503', 20, 5, 3, 'Arenal', 1),
(1767, '200504', 20, 5, 4, 'Colan', 1),
(1768, '200505', 20, 5, 5, 'La Huaca', 1),
(1769, '200506', 20, 5, 6, 'Tamarindo', 1),
(1770, '200507', 20, 5, 7, 'Vichayal', 1),
(1771, '200600', 20, 6, 0, 'Sullana', 1),
(1772, '200601', 20, 6, 1, 'Sullana', 1),
(1773, '200602', 20, 6, 2, 'Bellavista', 1),
(1774, '200603', 20, 6, 3, 'Ignacio Escudero', 1),
(1775, '200604', 20, 6, 4, 'Lancones', 1),
(1776, '200605', 20, 6, 5, 'Marcavelica', 1),
(1777, '200606', 20, 6, 6, 'Miguel Checa', 1),
(1778, '200607', 20, 6, 7, 'Querecotillo', 1),
(1779, '200608', 20, 6, 8, 'Salitral', 1),
(1780, '200700', 20, 7, 0, 'Talara', 1),
(1781, '200701', 20, 7, 1, 'Pariñas', 1),
(1782, '200702', 20, 7, 2, 'El Alto', 1),
(1783, '200703', 20, 7, 3, 'La Brea', 1),
(1784, '200704', 20, 7, 4, 'Lobitos', 1),
(1785, '200705', 20, 7, 5, 'Los Organos', 1),
(1786, '200706', 20, 7, 6, 'Mancora', 1),
(1787, '200800', 20, 8, 0, 'Sechura', 1),
(1788, '200801', 20, 8, 1, 'Sechura', 1),
(1789, '200802', 20, 8, 2, 'Bellavista de la Union', 1),
(1790, '200803', 20, 8, 3, 'Bernal', 1),
(1791, '200804', 20, 8, 4, 'Cristo Nos Valga', 1),
(1792, '200805', 20, 8, 5, 'Vice', 1),
(1793, '200806', 20, 8, 6, 'Rinconada Llicuar', 1),
(1794, '210000', 21, 0, 0, 'Puno', 1),
(1795, '210100', 21, 1, 0, 'Puno', 1),
(1796, '210101', 21, 1, 1, 'Puno', 1),
(1797, '210102', 21, 1, 2, 'Acora', 1),
(1798, '210103', 21, 1, 3, 'Amantani', 1),
(1799, '210104', 21, 1, 4, 'Atuncolla', 1),
(1800, '210105', 21, 1, 5, 'Capachica', 1),
(1801, '210106', 21, 1, 6, 'Chucuito', 1),
(1802, '210107', 21, 1, 7, 'Coata', 1),
(1803, '210108', 21, 1, 8, 'Huata', 1),
(1804, '210109', 21, 1, 9, 'Mañazo', 1),
(1805, '210110', 21, 1, 10, 'Paucarcolla', 1),
(1806, '210111', 21, 1, 11, 'Pichacani', 1),
(1807, '210112', 21, 1, 12, 'Plateria', 1),
(1808, '210113', 21, 1, 13, 'San Antonio', 1),
(1809, '210114', 21, 1, 14, 'Tiquillaca', 1),
(1810, '210115', 21, 1, 15, 'Vilque', 1),
(1811, '210200', 21, 2, 0, 'Azangaro', 1),
(1812, '210201', 21, 2, 1, 'Azangaro', 1),
(1813, '210202', 21, 2, 2, 'Achaya', 1),
(1814, '210203', 21, 2, 3, 'Arapa', 1),
(1815, '210204', 21, 2, 4, 'Asillo', 1),
(1816, '210205', 21, 2, 5, 'Caminaca', 1),
(1817, '210206', 21, 2, 6, 'Chupa', 1),
(1818, '210207', 21, 2, 7, 'Jose Domingo Choquehuanca', 1),
(1819, '210208', 21, 2, 8, 'Muñani', 1),
(1820, '210209', 21, 2, 9, 'Potoni', 1),
(1821, '210210', 21, 2, 10, 'Saman', 1),
(1822, '210211', 21, 2, 11, 'San Anton', 1),
(1823, '210212', 21, 2, 12, 'San Jose', 1),
(1824, '210213', 21, 2, 13, 'San Juan de Salinas', 1),
(1825, '210214', 21, 2, 14, 'Santiago de Pupuja', 1),
(1826, '210215', 21, 2, 15, 'Tirapata', 1),
(1827, '210300', 21, 3, 0, 'Carabaya', 1),
(1828, '210301', 21, 3, 1, 'Macusani', 1),
(1829, '210302', 21, 3, 2, 'Ajoyani', 1),
(1830, '210303', 21, 3, 3, 'Ayapata', 1),
(1831, '210304', 21, 3, 4, 'Coasa', 1),
(1832, '210305', 21, 3, 5, 'Corani', 1),
(1833, '210306', 21, 3, 6, 'Crucero', 1),
(1834, '210307', 21, 3, 7, 'Ituata', 1),
(1835, '210308', 21, 3, 8, 'Ollachea', 1),
(1836, '210309', 21, 3, 9, 'San Gaban', 1),
(1837, '210310', 21, 3, 10, 'Usicayos', 1),
(1838, '210400', 21, 4, 0, 'Chucuito', 1),
(1839, '210401', 21, 4, 1, 'Juli', 1),
(1840, '210402', 21, 4, 2, 'Desaguadero', 1),
(1841, '210403', 21, 4, 3, 'Huacullani', 1),
(1842, '210404', 21, 4, 4, 'Kelluyo', 1),
(1843, '210405', 21, 4, 5, 'Pisacoma', 1),
(1844, '210406', 21, 4, 6, 'Pomata', 1),
(1845, '210407', 21, 4, 7, 'Zepita', 1),
(1846, '210500', 21, 5, 0, 'El Collao', 1),
(1847, '210501', 21, 5, 1, 'Ilave', 1),
(1848, '210502', 21, 5, 2, 'Capaso', 1),
(1849, '210503', 21, 5, 3, 'Pilcuyo', 1),
(1850, '210504', 21, 5, 4, 'Santa Rosa', 1),
(1851, '210505', 21, 5, 5, 'Conduriri', 1),
(1852, '210600', 21, 6, 0, 'Huancane', 1),
(1853, '210601', 21, 6, 1, 'Huancane', 1),
(1854, '210602', 21, 6, 2, 'Cojata', 1),
(1855, '210603', 21, 6, 3, 'Huatasani', 1),
(1856, '210604', 21, 6, 4, 'Inchupalla', 1),
(1857, '210605', 21, 6, 5, 'Pusi', 1),
(1858, '210606', 21, 6, 6, 'Rosaspata', 1),
(1859, '210607', 21, 6, 7, 'Taraco', 1),
(1860, '210608', 21, 6, 8, 'Vilque Chico', 1),
(1861, '210700', 21, 7, 0, 'Lampa', 1),
(1862, '210701', 21, 7, 1, 'Lampa', 1),
(1863, '210702', 21, 7, 2, 'Cabanilla', 1),
(1864, '210703', 21, 7, 3, 'Calapuja', 1),
(1865, '210704', 21, 7, 4, 'Nicasio', 1),
(1866, '210705', 21, 7, 5, 'Ocuviri', 1),
(1867, '210706', 21, 7, 6, 'Palca', 1),
(1868, '210707', 21, 7, 7, 'Paratia', 1),
(1869, '210708', 21, 7, 8, 'Pucara', 1),
(1870, '210709', 21, 7, 9, 'Santa Lucia', 1),
(1871, '210710', 21, 7, 10, 'Vilavila', 1),
(1872, '210800', 21, 8, 0, 'Melgar', 1),
(1873, '210801', 21, 8, 1, 'Ayaviri', 1),
(1874, '210802', 21, 8, 2, 'Antauta', 1),
(1875, '210803', 21, 8, 3, 'Cupi', 1),
(1876, '210804', 21, 8, 4, 'Llalli', 1),
(1877, '210805', 21, 8, 5, 'Macari', 1),
(1878, '210806', 21, 8, 6, 'Nuñoa', 1),
(1879, '210807', 21, 8, 7, 'Orurillo', 1),
(1880, '210808', 21, 8, 8, 'Santa Rosa', 1),
(1881, '210809', 21, 8, 9, 'Umachiri', 1),
(1882, '210900', 21, 9, 0, 'Moho', 1),
(1883, '210901', 21, 9, 1, 'Moho', 1),
(1884, '210902', 21, 9, 2, 'Conima', 1),
(1885, '210903', 21, 9, 3, 'Huayrapata', 1),
(1886, '210904', 21, 9, 4, 'Tilali', 1),
(1887, '211000', 21, 10, 0, 'San Antonio de Putina', 1),
(1888, '211001', 21, 10, 1, 'Putina', 1),
(1889, '211002', 21, 10, 2, 'Ananea', 1),
(1890, '211003', 21, 10, 3, 'Pedro Vilca Apaza', 1),
(1891, '211004', 21, 10, 4, 'Quilcapuncu', 1),
(1892, '211005', 21, 10, 5, 'Sina', 1),
(1893, '211100', 21, 11, 0, 'San Roman', 1),
(1894, '211101', 21, 11, 1, 'Juliaca', 1),
(1895, '211102', 21, 11, 2, 'Cabana', 1),
(1896, '211103', 21, 11, 3, 'Cabanillas', 1),
(1897, '211104', 21, 11, 4, 'Caracoto', 1),
(1898, '211200', 21, 12, 0, 'Sandia', 1),
(1899, '211201', 21, 12, 1, 'Sandia', 1),
(1900, '211202', 21, 12, 2, 'Cuyocuyo', 1),
(1901, '211203', 21, 12, 3, 'Limbani', 1),
(1902, '211204', 21, 12, 4, 'Patambuco', 1),
(1903, '211205', 21, 12, 5, 'Phara', 1),
(1904, '211206', 21, 12, 6, 'Quiaca', 1),
(1905, '211207', 21, 12, 7, 'San Juan del Oro', 1),
(1906, '211208', 21, 12, 8, 'Yanahuaya', 1),
(1907, '211209', 21, 12, 9, 'Alto Inambari', 1),
(1908, '211210', 21, 12, 10, 'San Pedro de Putina Punco', 1),
(1909, '211300', 21, 13, 0, 'Yunguyo', 1),
(1910, '211301', 21, 13, 1, 'Yunguyo', 1),
(1911, '211302', 21, 13, 2, 'Anapia', 1),
(1912, '211303', 21, 13, 3, 'Copani', 1),
(1913, '211304', 21, 13, 4, 'Cuturapi', 1),
(1914, '211305', 21, 13, 5, 'Ollaraya', 1),
(1915, '211306', 21, 13, 6, 'Tinicachi', 1),
(1916, '211307', 21, 13, 7, 'Unicachi', 1),
(1917, '220000', 22, 0, 0, 'San Martin', 1),
(1918, '220100', 22, 1, 0, 'Moyobamba', 1),
(1919, '220101', 22, 1, 1, 'Moyobamba', 1),
(1920, '220102', 22, 1, 2, 'Calzada', 1),
(1921, '220103', 22, 1, 3, 'Habana', 1),
(1922, '220104', 22, 1, 4, 'Jepelacio', 1),
(1923, '220105', 22, 1, 5, 'Soritor', 1),
(1924, '220106', 22, 1, 6, 'Yantalo', 1),
(1925, '220200', 22, 2, 0, 'Bellavista', 1),
(1926, '220201', 22, 2, 1, 'Bellavista', 1),
(1927, '220202', 22, 2, 2, 'Alto Biavo', 1),
(1928, '220203', 22, 2, 3, 'Bajo Biavo', 1),
(1929, '220204', 22, 2, 4, 'Huallaga', 1),
(1930, '220205', 22, 2, 5, 'San Pablo', 1),
(1931, '220206', 22, 2, 6, 'San Rafael', 1),
(1932, '220300', 22, 3, 0, 'El Dorado', 1),
(1933, '220301', 22, 3, 1, 'San Jose de Sisa', 1),
(1934, '220302', 22, 3, 2, 'Agua Blanca', 1),
(1935, '220303', 22, 3, 3, 'San Martin', 1),
(1936, '220304', 22, 3, 4, 'Santa Rosa', 1),
(1937, '220305', 22, 3, 5, 'Shatoja', 1),
(1938, '220400', 22, 4, 0, 'Huallaga', 1),
(1939, '220401', 22, 4, 1, 'Saposoa', 1),
(1940, '220402', 22, 4, 2, 'Alto Saposoa', 1),
(1941, '220403', 22, 4, 3, 'El Eslabon', 1),
(1942, '220404', 22, 4, 4, 'Piscoyacu', 1),
(1943, '220405', 22, 4, 5, 'Sacanche', 1),
(1944, '220406', 22, 4, 6, 'Tingo de Saposoa', 1),
(1945, '220500', 22, 5, 0, 'Lamas', 1),
(1946, '220501', 22, 5, 1, 'Lamas', 1),
(1947, '220502', 22, 5, 2, 'Alonso de Alvarado', 1),
(1948, '220503', 22, 5, 3, 'Barranquita', 1),
(1949, '220504', 22, 5, 4, 'Caynarachi', 1),
(1950, '220505', 22, 5, 5, 'Cuñumbuqui', 1),
(1951, '220506', 22, 5, 6, 'Pinto Recodo', 1),
(1952, '220507', 22, 5, 7, 'Rumisapa', 1),
(1953, '220508', 22, 5, 8, 'San Roque de Cumbaza', 1),
(1954, '220509', 22, 5, 9, 'Shanao', 1),
(1955, '220510', 22, 5, 10, 'Tabalosos', 1),
(1956, '220511', 22, 5, 11, 'Zapatero', 1),
(1957, '220600', 22, 6, 0, 'Mariscal Caceres', 1),
(1958, '220601', 22, 6, 1, 'Juanjui', 1),
(1959, '220602', 22, 6, 2, 'Campanilla', 1),
(1960, '220603', 22, 6, 3, 'Huicungo', 1),
(1961, '220604', 22, 6, 4, 'Pachiza', 1),
(1962, '220605', 22, 6, 5, 'Pajarillo', 1),
(1963, '220700', 22, 7, 0, 'Picota', 1),
(1964, '220701', 22, 7, 1, 'Picota', 1),
(1965, '220702', 22, 7, 2, 'Buenos Aires', 1),
(1966, '220703', 22, 7, 3, 'Caspisapa', 1),
(1967, '220704', 22, 7, 4, 'Pilluana', 1),
(1968, '220705', 22, 7, 5, 'Pucacaca', 1),
(1969, '220706', 22, 7, 6, 'San Cristobal', 1),
(1970, '220707', 22, 7, 7, 'San Hilarion', 1),
(1971, '220708', 22, 7, 8, 'Shamboyacu', 1),
(1972, '220709', 22, 7, 9, 'Tingo de Ponasa', 1),
(1973, '220710', 22, 7, 10, 'Tres Unidos', 1),
(1974, '220800', 22, 8, 0, 'Rioja', 1),
(1975, '220801', 22, 8, 1, 'Rioja', 1),
(1976, '220802', 22, 8, 2, 'Awajun', 1),
(1977, '220803', 22, 8, 3, 'Elias Soplin Vargas', 1),
(1978, '220804', 22, 8, 4, 'Nueva Cajamarca', 1),
(1979, '220805', 22, 8, 5, 'Pardo Miguel', 1),
(1980, '220806', 22, 8, 6, 'Posic', 1),
(1981, '220807', 22, 8, 7, 'San Fernando', 1),
(1982, '220808', 22, 8, 8, 'Yorongos', 1),
(1983, '220809', 22, 8, 9, 'Yuracyacu', 1),
(1984, '220900', 22, 9, 0, 'San Martin', 1),
(1985, '220901', 22, 9, 1, 'Tarapoto', 1),
(1986, '220902', 22, 9, 2, 'Alberto Leveau', 1),
(1987, '220903', 22, 9, 3, 'Cacatachi', 1),
(1988, '220904', 22, 9, 4, 'Chazuta', 1),
(1989, '220905', 22, 9, 5, 'Chipurana', 1),
(1990, '220906', 22, 9, 6, 'El Porvenir', 1),
(1991, '220907', 22, 9, 7, 'Huimbayoc', 1),
(1992, '220908', 22, 9, 8, 'Juan Guerra', 1),
(1993, '220909', 22, 9, 9, 'La Banda de Shilcayo', 1),
(1994, '220910', 22, 9, 10, 'Morales', 1),
(1995, '220911', 22, 9, 11, 'Papaplaya', 1),
(1996, '220912', 22, 9, 12, 'San Antonio', 1),
(1997, '220913', 22, 9, 13, 'Sauce', 1),
(1998, '220914', 22, 9, 14, 'Shapaja', 1),
(1999, '221000', 22, 10, 0, 'Tocache', 1),
(2000, '221001', 22, 10, 1, 'Tocache', 1),
(2001, '221002', 22, 10, 2, 'Nuevo Progreso', 1),
(2002, '221003', 22, 10, 3, 'Polvora', 1),
(2003, '221004', 22, 10, 4, 'Shunte', 1),
(2004, '221005', 22, 10, 5, 'Uchiza', 1),
(2005, '230000', 23, 0, 0, 'Tacna', 1),
(2006, '230100', 23, 1, 0, 'Tacna', 1),
(2007, '230101', 23, 1, 1, 'Tacna', 1),
(2008, '230102', 23, 1, 2, 'Alto de la Alianza', 1),
(2009, '230103', 23, 1, 3, 'Calana', 1),
(2010, '230104', 23, 1, 4, 'Ciudad Nueva', 1),
(2011, '230105', 23, 1, 5, 'Inclan', 1),
(2012, '230106', 23, 1, 6, 'Pachia', 1),
(2013, '230107', 23, 1, 7, 'Palca', 1),
(2014, '230108', 23, 1, 8, 'Pocollay', 1),
(2015, '230109', 23, 1, 9, 'Sama', 1),
(2016, '230110', 23, 1, 10, 'Coronel Gregorio Albarracín L', 1),
(2017, '230200', 23, 2, 0, 'Candarave', 1),
(2018, '230201', 23, 2, 1, 'Candarave', 1),
(2019, '230202', 23, 2, 2, 'Cairani', 1),
(2020, '230203', 23, 2, 3, 'Camilaca', 1),
(2021, '230204', 23, 2, 4, 'Curibaya', 1),
(2022, '230205', 23, 2, 5, 'Huanuara', 1),
(2023, '230206', 23, 2, 6, 'Quilahuani', 1),
(2024, '230300', 23, 3, 0, 'Jorge Basadre', 1),
(2025, '230301', 23, 3, 1, 'Locumba', 1),
(2026, '230302', 23, 3, 2, 'Ilabaya', 1),
(2027, '230303', 23, 3, 3, 'Ite', 1),
(2028, '230400', 23, 4, 0, 'Tarata', 1),
(2029, '230401', 23, 4, 1, 'Tarata', 1),
(2030, '230402', 23, 4, 2, 'Chucatamani', 1),
(2031, '230403', 23, 4, 3, 'Estique', 1),
(2032, '230404', 23, 4, 4, 'Estique Pampa', 1),
(2033, '230405', 23, 4, 5, 'Sitajara', 1),
(2034, '230406', 23, 4, 6, 'Susapaya', 1),
(2035, '230407', 23, 4, 7, 'Tarucachi', 1),
(2036, '230408', 23, 4, 8, 'Ticaco', 1),
(2037, '240000', 24, 0, 0, 'Tumbes', 1),
(2038, '240100', 24, 1, 0, 'Tumbes', 1),
(2039, '240101', 24, 1, 1, 'Tumbes', 1),
(2040, '240102', 24, 1, 2, 'Corrales', 1),
(2041, '240103', 24, 1, 3, 'La Cruz', 1),
(2042, '240104', 24, 1, 4, 'Pampas de Hospital', 1),
(2043, '240105', 24, 1, 5, 'San Jacinto', 1),
(2044, '240106', 24, 1, 6, 'San Juan de la Virgen', 1),
(2045, '240200', 24, 2, 0, 'Contralmirante Villar', 1),
(2046, '240201', 24, 2, 1, 'Zorritos', 1),
(2047, '240202', 24, 2, 2, 'Casitas', 1),
(2048, '240203', 24, 2, 3, 'Canoas de Punta Sal', 1),
(2049, '240300', 24, 3, 0, 'Zarumilla', 1),
(2050, '240301', 24, 3, 1, 'Zarumilla', 1),
(2051, '240302', 24, 3, 2, 'Aguas Verdes', 1),
(2052, '240303', 24, 3, 3, 'Matapalo', 1),
(2053, '240304', 24, 3, 4, 'Papayal', 1),
(2054, '250000', 25, 0, 0, 'Ucayali', 1),
(2055, '250100', 25, 1, 0, 'Coronel Portillo', 1),
(2056, '250101', 25, 1, 1, 'Callaria', 1),
(2057, '250102', 25, 1, 2, 'Campoverde', 1),
(2058, '250103', 25, 1, 3, 'Iparia', 1),
(2059, '250104', 25, 1, 4, 'Masisea', 1),
(2060, '250105', 25, 1, 5, 'Yarinacocha', 1),
(2061, '250106', 25, 1, 6, 'Nueva Requena', 1),
(2062, '250107', 25, 1, 7, 'Manantay', 1),
(2063, '250200', 25, 2, 0, 'Atalaya', 1),
(2064, '250201', 25, 2, 1, 'Raymondi', 1),
(2065, '250202', 25, 2, 2, 'Sepahua', 1),
(2066, '250203', 25, 2, 3, 'Tahuania', 1),
(2067, '250204', 25, 2, 4, 'Yurua', 1),
(2068, '250300', 25, 3, 0, 'Padre Abad', 1),
(2069, '250301', 25, 3, 1, 'Padre Abad', 1),
(2070, '250302', 25, 3, 2, 'Irazola', 1),
(2071, '250303', 25, 3, 3, 'Curimana', 1),
(2072, '250400', 25, 4, 0, 'Purus', 1),
(2073, '250401', 25, 4, 1, 'Purus', 1),
(2074, '990000', 99, 0, 0, 'Extranjero', 1),
(2075, '999900', 99, 99, 0, 'Extranjero', 1),
(2076, '999999', 99, 99, 99, 'Extranjero', 1);

INSERT INTO sitio VALUES
(3, 'Restaurante Turistico "Colmenas"', 1, -9.000000000000, -82.000000000000, '945254548', '945254548', '', NULL, 'Av. Bolognesi', 0, 1, 1),
(4, 'Clinica "San Pedro"', 4, -9.000000000000, -75.000000000000, '945254548', '945254548', '', NULL, 'Av. Elias Aguirre', 0, 1, 1);

INSERT INTO tipolugar VALUES
(2, 'Montaña', 4, 1),
(3, 'Valle', 4, 1),
(4, 'Cuerpo de agua', 4, 1),
(5, 'Corriente de agua', 4, 1),
(6, 'Manantial', 4, 1),
(7, 'Caida de agua', 4, 1),
(8, 'Museo', 5, 1),
(9, 'Construcción arquitectónica', 5, 1),
(10, 'Sitio arqueológico', 5, 1),
(11, 'Pueblo', 5, 1),
(12, 'Isla', 4, 1),
(13, 'Nevado', 4, 1),
(14, 'Quebrada', 4, 1);

INSERT INTO usuario VALUES
(1, 1, 'admin', '123', 1, '2019-11-27 22:08:28', '2019-11-06 16:35:31', 1),
(2, 2, 'rodrigo', '123456', 1, '2019-11-06 00:00:00', '2019-11-06 21:37:00', 1);

INSERT INTO lugarturistico VALUES
(20, 'Isla blanca', 12, -9.099374700000, -78.628887400000, 204.00, 300.00, 'archivos/lugares/foto_20.jpg', 'La Isla Blanca es una pequeña isla ubicada en el Océano Pacífico al noroeste de la ciudad de Chimbote a unos 5 km de distancia de la costa, en la Bahía de Chimbote (Departamento de Ancash).', NULL, '', 1, 0, 1, '', '2019-11-06 23:11:45', 1),
(21, 'Chavin de Huantar', 10, -45.630000000000, -45.180000000000, 655.00, 500.00, 'archivos/lugares/foto_21.jpg', 'Sitio Arqueológico', NULL, '', 1, 0, 1, 'Sitio Arqueológico de Chavín de Huantar', '2019-11-07 12:16:53', 1),
(22, 'Ruinas de Chan Chan', 13, 4.000000000000, 5.000000000000, 2.00, 2200.00, '', 'Nevado', NULL, '', 1, 0, 1, ' ¥ · £ · € · $ · ¢ · ₡ · ₢ · ₣ · ₤ · ₥ · ₦ · ₧ · ₨ · ₩ · ₪ · ₫ · ₭ · ₮ · ₯ · ₹', '2019-11-12 17:54:06', 1),
(23, 'Runa SiMi', 2, -74.585600000000, -85.540000000000, 15.00, 1520.00, '', 'Montaña', NULL, '', 1, 0, 1, '', '2019-11-27 12:34:38', 1);

INSERT INTO actividades VALUES
(20, 2, 1),
(20, 4, 1),
(21, 1, 1),
(21, 14, 1);


-- Table turismo.calendariovisita does not contain any data (it is empty)


-- Table turismo.cercania does not contain any data (it is empty)


-- Table turismo.galeria does not contain any data (it is empty)

INSERT INTO objetoturistico VALUES
(1, 'Cabezas Clavas', 2, '', 'Las cabezas claves de Chavin de Huantar', '1950-06-11 00:00:00', 21, 1, 1),
(2, 'Estela de Raimondi', 3, '', 'Estela de Raimondi', '1952-04-11 00:00:00', 21, 1, 1),
(3, 'Lanzon monolitico', 2, '', 'Lanzon monolitico', '1233-06-11 00:00:00', 22, 1, 1),
(4, 'sds', 2, 'archivos/objetos/foto_4.jpg', 'dasdas', '2019-07-11 00:00:00', 20, 1, 1),
(5, 'terwtert', 2, '', 'rtwerter', '2019-07-11 00:00:00', 20, 1, 1),
(6, 'terwtertyu', 2, '', 'rtwerter', '2019-07-11 00:00:00', 20, 1, 1),
(7, 'qerwdzc', 2, '', 'erwzvxcv', '2019-08-11 00:00:00', 22, 1, 1),
(9, 'qerwdzcttt', 2, '', 'erwzvxcv', '2019-08-11 00:00:00', 22, 1, 1),
(10, 'rewrwer', 2, '', 'rwerwerwe', '2019-11-11 00:00:00', 21, 1, 1);

INSERT INTO recomendacion VALUES
(1, 20, 1, 'Llevar ropa liviana', 1),
(2, 21, 3, 'Llevar antimosquitos', 1),
(3, 22, 3, 'Llevar linternas para la noche', 1);


-- Table turismo.rutadet does not contain any data (it is empty)

DELIMITER $$

CREATE TRIGGER trg_actividades_beforeInsert
	BEFORE INSERT
	ON actividades
	FOR EACH ROW
BEGIN
	IF NOT new.activ_lug_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
	END IF;
	IF NOT new.activ_tipoactiv_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un tipo de actividad';
	END IF;
	IF NOT new.activ_situacion > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo situacion debe ser mayor a cero';
	END IF;
	IF NOT new.activ_situacion IN (1, 2) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'La situacion de la actividad solo puede contener los valores 1, 2';
	END IF;
END
$$

CREATE TRIGGER trg_actividades_beforeUpdate
	BEFORE UPDATE
	ON actividades
	FOR EACH ROW
BEGIN
	IF NOT new.activ_lug_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
	END IF;
	IF NOT new.activ_tipoactiv_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un tipo de actividad';
	END IF;
	IF NOT new.activ_situacion > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo situacion debe ser mayor a cero';
	END IF;
	IF NOT new.activ_situacion IN (1, 2) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'La situacion de la actividad solo puede contener los valores 1, 2';
	END IF;
END
$$

CREATE TRIGGER trg_calendariovisita_beforeInsert
	BEFORE INSERT
	ON calendariovisita
	FOR EACH ROW
BEGIN
	IF NOT new.calend_lug_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
	END IF;
	IF NOT new.calend_nro > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo número de calendario debe ser mayor a cero';
	END IF;
	IF NOT new.calend_situacion > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo situación debe ser mayor a cero';
	END IF;
	IF NOT new.calend_situacion IN (1, 2) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'La situacion del calendario de visita solo puede contener los valores 1, 2';
	END IF;
	IF NOT new.calend_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.calend_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado del calendario de visita solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_calendariovisita_beforeUpdate
	BEFORE UPDATE
	ON calendariovisita
	FOR EACH ROW
BEGIN
    IF NOT new.calend_lug_id > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
    END IF;
    IF NOT new.calend_nro > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo número de calendario debe ser mayor a cero';
    END IF;
    IF NOT new.calend_situacion > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo situación debe ser mayor a cero';
    END IF;
    IF NOT new.calend_situacion IN (1, 2) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'La situacion del calendario de visita solo puede contener los valores 1, 2';
    END IF;
    IF NOT new.calend_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.calend_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado del calendario de visita solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_categorialugar_beforeInsert
	BEFORE INSERT
	ON categorialugar
	FOR EACH ROW
BEGIN
    IF NOT length(trim(new.catlug_nombre)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El nombre de la categoría de lugar no debe estar en blanco';
    END IF;
    IF NOT new.catlug_nombre REGEXP '^[[:alpha:]_ ]+$' THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El nombre de la categoría de lugar solo puede contener letras';
    END IF;
    IF NOT new.catlug_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado de la categoría de lugar debe ser mayor igual a cero';
    END IF;
    IF NOT new.catlug_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado de la categoría de lugar solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_categorialugar_beforeUpdate
	BEFORE UPDATE
	ON categorialugar
	FOR EACH ROW
BEGIN
    IF NOT length(trim(new.catlug_nombre)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El nombre de la categoría de lugar no debe estar en blanco';
    END IF;
    IF NOT new.catlug_nombre REGEXP '^[[:alpha:]_ ]+$' THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El nombre de la categoría de lugar solo puede contener letras';
    END IF;
    IF NOT new.catlug_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado de la categoría de lugar debe ser mayor igual a cero';
    END IF;
    IF NOT new.catlug_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado de la categoría de lugar solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_cercania_beforeInsert
	BEFORE INSERT
	ON cercania
	FOR EACH ROW
BEGIN
	IF NOT new.cerca_lug_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
	END IF;
	IF NOT new.cerca_sitio_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un sitio';
	END IF;
	IF NOT new.cerca_distancia > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo distancia debe ser mayor cero';
	END IF;
END
$$

CREATE TRIGGER trg_cercania_beforeUpdate
	BEFORE UPDATE
	ON cercania
	FOR EACH ROW
BEGIN
	IF NOT new.cerca_lug_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
	END IF;
	IF NOT new.cerca_sitio_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un sitio';
	END IF;
	IF NOT new.cerca_distancia > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo distancia debe ser mayor cero';
	END IF;
END
$$

CREATE TRIGGER trg_galeria_beforeInsert
	BEFORE INSERT
	ON galeria
	FOR EACH ROW
BEGIN
	IF NOT new.gal_lug_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
	END IF;
	IF NOT length(trim(new.gal_foto)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo foto no debe estar en blanco';
	END IF;
	IF NOT length(trim(new.gal_foto_descripcion)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo foto descripcion no debe estar en blanco';
	END IF;
	IF NOT new.gal_foto_descripcion REGEXP '([A-Z &.,]*[1-9]*)w+$' THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El foto descripcion solo puede contener letras';
	END IF;
	IF NOT new.gal_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.gal_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado de la galería solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_galeria_beforeUpdate
	BEFORE UPDATE
	ON galeria
	FOR EACH ROW
BEGIN
    IF NOT new.gal_lug_id > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
    END IF;
    IF NOT length(trim(new.gal_foto)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo foto no debe estar en blanco';
    END IF;
    IF NOT length(trim(new.gal_foto_descripcion)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo foto descripcion no debe estar en blanco';
    END IF;
    IF NOT new.gal_foto_descripcion REGEXP '([A-Z &.,]*[1-9]*)w+$' THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El foto descripcion solo puede contener letras';
    END IF;
    IF NOT new.gal_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.gal_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado de la galería solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_lugarturistico_beforeInsert
	BEFORE INSERT
	ON lugarturistico
	FOR EACH ROW
BEGIN
	IF NOT length(trim(new.lug_nombre)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El nombre del lugar turístico no debe estar en blanco';
	END IF;
#	IF NOT new.lug_nombre REGEXP '([A-Za-z &.,]*[1-9]*)w+$' THEN
#		SIGNAL SQLSTATE '45000'
#		SET MESSAGE_TEXT = 'El nombre del lugar turístico solo puede contener letras';
#	END IF;
	IF NOT new.lug_tipolug_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un tipo de lugar';
	END IF;
#	IF NOT new.lug_latitud_geo > 0 THEN
#		SIGNAL SQLSTATE '45000'
#		SET MESSAGE_TEXT = 'La latitud geográfica debe ser mayor cero';
#	END IF;
#	IF NOT new.lug_longitud_geo > 0 THEN
#		SIGNAL SQLSTATE '45000'
#		SET MESSAGE_TEXT = 'La longitud geográfica debe ser mayor cero';
#	END IF;
	IF NOT new.lug_tamanio_area > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El área geográfica debe ser mayor cero';
	END IF;
# 	IF NOT length(trim(new.lug_foto)) > 0 THEN
# 		SIGNAL SQLSTATE '45000'
# 		SET MESSAGE_TEXT = 'El campo foto no debe estar en blanco';
# 	END IF;
	IF NOT length(trim(new.lug_descripcion)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo descripcion no debe estar en blanco';
	END IF;
#	IF NOT new.lug_descripcion REGEXP '([A-Z &.,]*[1-9]*)w+$' THEN
#		SIGNAL SQLSTATE '45000'
#		SET MESSAGE_TEXT = 'El campo descripcion solo puede contener letras, numeros y algunos caracteres especiales';
#	END IF;
	IF NOT new.lug_ubig_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un ubigeo';
	END IF;
#	IF NOT length(trim(new.lug_direccion_ref)) > 0 THEN
#		SIGNAL SQLSTATE '45000'
#		SET MESSAGE_TEXT = 'El campo direccion referencial no debe estar en blanco';
#	END IF;
	IF NOT new.lug_tipoing_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un tipo de ingreso';
	END IF;
	IF NOT new.lug_calificacion >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo calificación debe ser mayor o igual a cero';
	END IF;
	IF NOT new.lug_situacion > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo situacion debe ser mayor a cero';
	END IF;
	IF NOT new.lug_situacion IN (1, 2) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'La situacion del lugar turístico solo puede contener los valores 1, 2';
	END IF;
# 	IF NOT length(trim(new.lug_resenia)) > 0 THEN
# 		SIGNAL SQLSTATE '45000'
# 		SET MESSAGE_TEXT = 'El campo resenia no debe estar en blanco';
# 	END IF;
	IF NOT DAYNAME(new.lug_fecha_reg) IS NOT NULL THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El valor de fecha reg debe ser una fecha válida';
	END IF;
	IF NOT new.lug_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.lug_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado del lugar turístico solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_lugarturistico_beforeUpdate
	BEFORE UPDATE
	ON lugarturistico
	FOR EACH ROW
BEGIN
    IF NOT length(trim(new.lug_nombre)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El nombre del lugar turístico no debe estar en blanco';
    END IF;
#    IF NOT new.lug_nombre REGEXP '([A-Za-z &.,]*[1-9]*)w+$' THEN
#        SIGNAL SQLSTATE '45000'
#            SET MESSAGE_TEXT = 'El nombre del lugar turístico solo puede contener letras';
#    END IF;
    IF NOT new.lug_tipolug_id > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ingrese un tipo de lugar';
    END IF;
#    IF NOT new.lug_latitud_geo > 0 THEN
#        SIGNAL SQLSTATE '45000'
#            SET MESSAGE_TEXT = 'La latitud geográfica debe ser mayor cero';
#    END IF;
#    IF NOT new.lug_longitud_geo > 0 THEN
#        SIGNAL SQLSTATE '45000'
#            SET MESSAGE_TEXT = 'La longitud geográfica debe ser mayor cero';
#    END IF;
    IF NOT new.lug_tamanio_area > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El área geográfica debe ser mayor cero';
    END IF;
# 	IF NOT length(trim(new.lug_foto)) > 0 THEN
# 		SIGNAL SQLSTATE '45000'
# 		SET MESSAGE_TEXT = 'El campo foto no debe estar en blanco';
# 	END IF;
    IF NOT length(trim(new.lug_descripcion)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo descripcion no debe estar en blanco';
    END IF;
#    IF NOT new.lug_descripcion REGEXP '([A-Z &.,]*[1-9]*)w+$' THEN
#        SIGNAL SQLSTATE '45000'
#            SET MESSAGE_TEXT = 'El campo descripcion solo puede contener letras, numeros y algunos caracteres especiales';
#    END IF;
    IF NOT new.lug_ubig_id > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ingrese un ubigeo';
    END IF;
#    IF NOT length(trim(new.lug_direccion_ref)) > 0 THEN
#        SIGNAL SQLSTATE '45000'
#            SET MESSAGE_TEXT = 'El campo direccion referencial no debe estar en blanco';
#    END IF;
    IF NOT new.lug_tipoing_id > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ingrese un tipo de ingreso';
    END IF;
    IF NOT new.lug_calificacion >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo calificación debe ser mayor o igual a cero';
    END IF;
    IF NOT new.lug_situacion > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo situacion debe ser mayor a cero';
    END IF;
    IF NOT new.lug_situacion IN (1, 2) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'La situacion del lugar turístico solo puede contener los valores 1, 2';
    END IF;
# 	IF NOT length(trim(new.lug_resenia)) > 0 THEN
# 		SIGNAL SQLSTATE '45000'
# 		SET MESSAGE_TEXT = 'El campo resenia no debe estar en blanco';
# 	END IF;
    IF NOT DAYNAME(new.lug_fecha_reg) IS NOT NULL THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El valor de fecha reg debe ser una fecha válida';
    END IF;
    IF NOT new.lug_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.lug_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado del lugar turístico solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_objetoturistico_beforeInsert
	BEFORE INSERT
	ON objetoturistico
	FOR EACH ROW
BEGIN
	IF NOT length(trim(new.obj_nombre)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El nombre del objeto turístico no debe estar en blanco';
	END IF;
	IF NOT new.obj_nombre REGEXP '^[[:alpha:]_ ]+$' THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El nombre del objeto turístico solo puede contener letras';
	END IF;
	IF NOT new.obj_tipoobj_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un tipo de objeto turístico';
	END IF;
# 	IF NOT length(trim(new.obj_foto)) > 0 THEN
# 		SIGNAL SQLSTATE '45000'
# 		SET MESSAGE_TEXT = 'El campo foto no debe estar en blanco';
# 	END IF;
	IF NOT length(trim(new.obj_comentario)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo comentario no debe estar en blanco';
	END IF;
	IF NOT DAYNAME(new.obj_fecha_datacion) IS NOT NULL THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El valor de fecha datación debe ser una fecha válida';
	END IF;
	IF NOT new.obj_lug_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
	END IF;
	IF NOT new.obj_situacion > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo situación debe ser mayor a cero';
	END IF;
	IF NOT new.obj_situacion IN (1, 2) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'La situación del objeto turístico solo puede contener los valores 1, 2';
	END IF;
	IF NOT new.obj_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.obj_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado del objeto turístico solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_objetoturistico_beforeUpdate
	BEFORE UPDATE
	ON objetoturistico
	FOR EACH ROW
BEGIN
     IF NOT length(trim(new.obj_nombre)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El nombre del objeto turístico no debe estar en blanco';
    END IF;
    IF NOT new.obj_nombre REGEXP '^[[:alpha:]_ ]+$' THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El nombre del objeto turístico solo puede contener letras';
    END IF;
    IF NOT new.obj_tipoobj_id > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ingrese un tipo de objeto turístico';
    END IF;
    # 	IF NOT length(trim(new.obj_foto)) > 0 THEN
    # 		SIGNAL SQLSTATE '45000'
    # 		SET MESSAGE_TEXT = 'El campo foto no debe estar en blanco';
    # 	END IF;
    IF NOT length(trim(new.obj_comentario)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo comentario no debe estar en blanco';
    END IF;
    IF NOT DAYNAME(new.obj_fecha_datacion) IS NOT NULL THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El valor de fecha datación debe ser una fecha válida';
    END IF;
    IF NOT new.obj_lug_id > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
    END IF;
    IF NOT new.obj_situacion > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo situación debe ser mayor a cero';
    END IF;
    IF NOT new.obj_situacion IN (1, 2) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'La situación del objeto turístico solo puede contener los valores 1, 2';
    END IF;
    IF NOT new.obj_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.obj_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado del objeto turístico solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_recomendacion_beforeInsert
	BEFORE INSERT
	ON recomendacion
	FOR EACH ROW
BEGIN
    IF NOT new.rec_lug_id > 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
    END IF;
    IF NOT new.rec_tiporec_id > 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Ingrese un tipo de recomendación';
    END IF;
    IF NOT LENGTH(TRIM(new.rec_descripcion)) > 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo descripción no debe estar en blanco';
    END IF;    
    IF NOT new.rec_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.rec_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El estado de la recomendación solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_recomendacion_beforeUpdate
	BEFORE UPDATE
	ON recomendacion
	FOR EACH ROW
BEGIN
    IF NOT new.rec_lug_id > 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
    END IF;
    IF NOT new.rec_tiporec_id > 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Ingrese un tipo de recomendación';
    END IF;
    IF NOT LENGTH(TRIM(new.rec_descripcion)) > 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo descripcion no debe estar en blanco';
    END IF;    
    IF NOT new.rec_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.rec_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El estado de la recomendación solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_rutadet_beforeInsert
	BEFORE INSERT
	ON rutadet
	FOR EACH ROW
BEGIN
	IF NOT new.rutad_ruta_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese una ruta';
	END IF;
	IF NOT new.rutad_lug_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
	END IF;
	IF NOT new.rutad_nro_ord > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El nro orden de la ruta debe ser mayor a cero';
	END IF;
	IF NOT new.rutad_distancia > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo distancia debe ser mayor cero';
	END IF;
END
$$

CREATE TRIGGER trg_rutadet_beforeUpdate
	BEFORE UPDATE
	ON rutadet
	FOR EACH ROW
BEGIN
    IF NOT new.rutad_ruta_id > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ingrese una ruta';
    END IF;
    IF NOT new.rutad_lug_id > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ingrese un lugar turístico';
    END IF;
    IF NOT new.rutad_nro_ord > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El nro orden de la ruta debe ser mayor a cero';
    END IF;
    IF NOT new.rutad_distancia > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo distancia debe ser mayor cero';
    END IF;
END
$$

CREATE TRIGGER trg_ruta_beforeInsert
	BEFORE INSERT
	ON ruta
	FOR EACH ROW
BEGIN
	IF NOT length(trim(new.ruta_descripcion)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo descripcion no debe estar en blanco';
	END IF;
	IF NOT new.ruta_descripcion REGEXP '^[[:alpha:]_ ]+$' THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El descripcion de la ruta solo puede contener letras';
	END IF;
	IF NOT DAYNAME(new.ruta_fecha_reg) IS NOT NULL THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El valor de fecha reg debe ser una fecha válida';
	END IF;
	IF NOT new.ruta_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.ruta_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado de la ruta solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_ruta_beforeUpdate
	BEFORE UPDATE
	ON ruta
	FOR EACH ROW
BEGIN
    IF NOT length(trim(new.ruta_descripcion)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo descripcion no debe estar en blanco';
    END IF;
    IF NOT new.ruta_descripcion REGEXP '^[[:alpha:]_ ]+$' THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El descripcion de la ruta solo puede contener letras';
    END IF;
    IF NOT DAYNAME(new.ruta_fecha_reg) IS NOT NULL THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El valor de fecha reg debe ser una fecha válida';
    END IF;
    IF NOT new.ruta_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.ruta_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado de la ruta solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_sitio_afterInsert
	AFTER INSERT
	ON sitio
	FOR EACH ROW
BEGIN
    DECLARE sitio_lat decimal(14, 8);
    DECLARE sitio_lng decimal(14, 8);

    SET sitio_lat = NEW.sitio_latitud_geo;
    SET sitio_lng = NEW.sitio_longitud_geo;

    INSERT INTO cercania (
        cerca_lug_id, cerca_sitio_id, cerca_distancia
    ) SELECT lug_id, new.sitio_id, d.distancia
    FROM (
        SELECT lug.lug_id, sqrt(lug_tamanio_area) as lug_largo, lug.lug_tamanio_area,
            fn_calcular_distancia_by_geo(sitio_lat, sitio_lng, lug.lug_latitud_geo, lug.lug_longitud_geo) as distancia
        FROM lugarturistico lug
        ) d
    WHERE distancia <= lug_largo;
END
$$

CREATE TRIGGER trg_sitio_afterUpdate
	AFTER UPDATE
	ON sitio
	FOR EACH ROW
BEGIN
    DECLARE sitio_lat decimal(14, 8);
    DECLARE sitio_lng decimal(14, 8);

    SET sitio_lat = NEW.sitio_latitud_geo;
    SET sitio_lng = NEW.sitio_longitud_geo;

    delete from cercania where cerca_sitio_id = new.sitio_id;

    INSERT INTO cercania (
        cerca_lug_id, cerca_sitio_id, cerca_distancia
    ) SELECT lug_id, new.sitio_id, d.distancia
    FROM (
        SELECT lug.lug_id, lug_tamanio_area + sqrt(lug_tamanio_area) as lug_largo, lug.lug_tamanio_area,
               fn_calcular_distancia_by_geo(sitio_lat, sitio_lng, lug.lug_latitud_geo, lug.lug_longitud_geo) as distancia
        FROM lugarturistico lug
    ) d
    WHERE distancia <= lug_largo;
END
$$

CREATE TRIGGER trg_sitio_beforeInsert
	BEFORE INSERT
	ON sitio
	FOR EACH ROW
BEGIN
    IF NOT length(trim(new.sitio_nombre)) > 0
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
    END IF;
    IF NOT new.sitio_nombre REGEXP '([a-zA-Z]*[1-9]*)+$'
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El nombre del sitio solo puede contener letras';
    END IF;
    IF NOT new.sitio_tipositio_id > 0
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ingrese un tipo de sitio';
    END IF;
    # 	IF NOT length(trim(new.sitio_celular)) > 0 THEN
# 		SIGNAL SQLSTATE '45000'
# 		SET MESSAGE_TEXT = 'El campo celular no debe estar en blanco';
# 	END IF;
# 	IF NOT length(trim(new.sitio_telefono)) > 0 THEN
# 		SIGNAL SQLSTATE '45000'
# 		SET MESSAGE_TEXT = 'El campo telefono no debe estar en blanco';
# 	END IF;
# 	IF NOT length(trim(new.sitio_webpage)) > 0 THEN
# 		SIGNAL SQLSTATE '45000'
# 		SET MESSAGE_TEXT = 'El campo webpage no debe estar en blanco';
# 	END IF;
    #IF NOT new.sitio_ubig_id > 0
    #THEN
    #    SIGNAL SQLSTATE '45000'
    #        SET MESSAGE_TEXT = 'Ingrese un ubigeo';
    #END IF;
    IF NOT length(trim(new.sitio_direccion)) > 0
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo direccion no debe estar en blanco';
    END IF;
    IF NOT new.sitio_calificacion >= 0
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo calificacion debe ser mayor o igual a cero';
    END IF;
    IF NOT new.sitio_situacion > 0
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo situacion debe ser mayor a cero';
    END IF;
    IF NOT new.sitio_situacion IN (1, 2)
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'La situacion del sitio solo puede contener los valores 1, 2';
    END IF;
    IF NOT new.sitio_estado >= 0
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.sitio_estado IN (0, 1)
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado del sitio solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_sitio_beforeUpdate
	BEFORE UPDATE
	ON sitio
	FOR EACH ROW
BEGIN
    IF NOT length(trim(new.sitio_nombre)) > 0
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
    END IF;
    IF NOT new.sitio_nombre REGEXP '([a-zA-Z]*[1-9]*)+$'
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El nombre del sitio solo puede contener letras';
    END IF;
    IF NOT new.sitio_tipositio_id > 0
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ingrese un tipo de sitio';
    END IF;
        # 	IF NOT length(trim(new.sitio_celular)) > 0 THEN
# 		SIGNAL SQLSTATE '45000'
# 		SET MESSAGE_TEXT = 'El campo celular no debe estar en blanco';
# 	END IF;
# 	IF NOT length(trim(new.sitio_telefono)) > 0 THEN
# 		SIGNAL SQLSTATE '45000'
# 		SET MESSAGE_TEXT = 'El campo telefono no debe estar en blanco';
# 	END IF;
# 	IF NOT length(trim(new.sitio_webpage)) > 0 THEN
# 		SIGNAL SQLSTATE '45000'
# 		SET MESSAGE_TEXT = 'El campo webpage no debe estar en blanco';
# 	END IF;
    #IF NOT new.sitio_ubig_id > 0
    #THEN
    #    SIGNAL SQLSTATE '45000'
    #        SET MESSAGE_TEXT = 'Ingrese un ubigeo';
    #END IF;
    IF NOT length(trim(new.sitio_direccion)) > 0
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo direccion no debe estar en blanco';
    END IF;
    IF NOT new.sitio_calificacion >= 0
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo calificacion debe ser mayor o igual a cero';
    END IF;
    IF NOT new.sitio_situacion > 0
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo situacion debe ser mayor a cero';
    END IF;
    IF NOT new.sitio_situacion IN (1, 2)
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'La situacion del sitio solo puede contener los valores 1, 2';
    END IF;
    IF NOT new.sitio_estado >= 0
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.sitio_estado IN (0, 1)
    THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado del sitio solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_tipoactividad_beforeInsert
	BEFORE INSERT
	ON tipoactividad
	FOR EACH ROW
BEGIN
	IF NOT length(trim(new.tipoactiv_nombre)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
	END IF;
	IF NOT new.tipoactiv_nombre REGEXP '^[[:alpha:]_ ]+$' THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El nombre del tipo de actividad solo puede contener letras';
	END IF;
	IF NOT new.tipoactiv_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.tipoactiv_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado del tipo de actividad solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_tipoactividad_beforeUpdate
	BEFORE UPDATE
	ON tipoactividad
	FOR EACH ROW
BEGIN
    IF NOT length(trim(new.tipoactiv_nombre)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
    END IF;
    IF NOT new.tipoactiv_nombre REGEXP '^[[:alpha:]_ ]+$' THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El nombre del tipo de actividad solo puede contener letras';
    END IF;
    IF NOT new.tipoactiv_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.tipoactiv_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado del tipo de actividad solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_tipoingreso_beforeInsert
	BEFORE INSERT
	ON tipoingreso
	FOR EACH ROW
BEGIN
	IF NOT length(trim(new.tipoing_nombre)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
	END IF;
	IF NOT new.tipoing_nombre REGEXP '^[[:alpha:]_ ]+$' THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El nombre del tipo de ingreso solo puede contener letras';
	END IF;
	IF NOT new.tipoing_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.tipoing_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado del tipo de ingreso solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_tipoingreso_beforeUpdate
	BEFORE UPDATE
	ON tipoingreso
	FOR EACH ROW
BEGIN
    IF NOT length(trim(new.tipoing_nombre)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
    END IF;
    IF NOT new.tipoing_nombre REGEXP '^[[:alpha:]_ ]+$' THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El nombre del tipo de ingreso solo puede contener letras';
    END IF;
    IF NOT new.tipoing_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.tipoing_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado del tipo de ingreso solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_tipolugar_beforeInsert
	BEFORE INSERT
	ON tipolugar
	FOR EACH ROW
BEGIN
	IF NOT length(trim(new.tipolug_nombre)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
	END IF;
	IF NOT new.tipolug_nombre REGEXP '^[[:alpha:]_ ]+$' THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El nombre del tipo de lugar solo puede contener letras';
	END IF;
	IF NOT new.tipolug_catlug_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese una categoría de lugar';
	END IF;
	IF NOT new.tipolug_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.tipolug_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado del tipo de lugar solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_tipolugar_beforeUpdate
	BEFORE UPDATE
	ON tipolugar
	FOR EACH ROW
BEGIN
	IF NOT length(trim(new.tipolug_nombre)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
	END IF;
	IF NOT new.tipolug_nombre REGEXP '^[[:alpha:]_ ]+$' THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El nombre del tipo de lugar solo puede contener letras';
	END IF;
	IF NOT new.tipolug_catlug_id > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Ingrese una categoría de lugar';
	END IF;
	IF NOT new.tipolug_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.tipolug_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado del tipo de lugar solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_tipoobjetoturistico_beforeInsert
	BEFORE INSERT
	ON tipoobjetoturistico
	FOR EACH ROW
BEGIN
	IF NOT length(trim(new.tipoobj_nombre)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
	END IF;
	IF NOT new.tipoobj_nombre REGEXP '^[[:alpha:]_ ]+$' THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El nombre del tipo de objeto turístico solo puede contener letras';
	END IF;
	IF NOT new.tipoobj_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.tipoobj_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado del tipo de objeto turístico solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_tipoobjetoturistico_beforeUpdate
	BEFORE UPDATE
	ON tipoobjetoturistico
	FOR EACH ROW
BEGIN
	IF NOT length(trim(new.tipoobj_nombre)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
	END IF;
	IF NOT new.tipoobj_nombre REGEXP '^[[:alpha:]_ ]+$' THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El nombre del tipo de objeto turístico solo puede contener letras';
	END IF;
	IF NOT new.tipoobj_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.tipoobj_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado del tipo de objeto turístico solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_tiporecomendacion_beforeInsert
	BEFORE INSERT
	ON tiporecomendacion
	FOR EACH ROW
BEGIN
    IF NOT LENGTH(TRIM(new.tiporec_nombre)) > 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
    END IF;   
    IF NOT new.tiporec_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.tiporec_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El estado del tipo de recomendación solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_tiporecomendacion_beforeUpdate
	BEFORE UPDATE
	ON tiporecomendacion
	FOR EACH ROW
BEGIN
    IF NOT LENGTH(TRIM(new.tiporec_nombre)) > 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
    END IF;   
    IF NOT new.tiporec_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.tiporec_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El estado del tipo de recomendación solo puede contener los valores 0, 1';
    END IF;
END
$$

CREATE TRIGGER trg_tipositio_beforeInsert
	BEFORE INSERT
	ON tipositio
	FOR EACH ROW
BEGIN
	IF NOT length(trim(new.tipositio_nombre)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
	END IF;
	IF NOT new.tipositio_nombre REGEXP '([a-zA-Z]*[1-9]*)+$' THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El nombre del tipo de sitio solo puede contener letras';
	END IF;
	IF NOT new.tipositio_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.tipositio_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado del tipo de sitio solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_tipositio_beforeUpdate
	BEFORE UPDATE
	ON tipositio
	FOR EACH ROW
BEGIN
	IF NOT length(trim(new.tipositio_nombre)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
	END IF;
	IF NOT new.tipositio_nombre REGEXP '([A-Z]*[1-9]*)+$' THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El nombre del tipo de sitio solo puede contener letras';
	END IF;
	IF NOT new.tipositio_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.tipositio_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado del tipo de sitio solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_ubigeo_beforeInsert
	BEFORE INSERT
	ON ubigeo
	FOR EACH ROW
BEGIN
	IF NOT length(trim(new.ubig_codigo)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo codigo no debe estar en blanco';
	END IF;
	IF NOT new.ubig_dpto_cod >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El codigo del departamento debe ser mayor a cero';
	END IF;
	IF NOT new.ubig_prov_cod >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El codigo de la provincia debe ser mayor a cero';
	END IF;
	IF NOT new.ubig_dist_cod >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El codigo del distrito debe ser mayor a cero';
	END IF;
	IF NOT length(trim(new.ubig_nombre)) > 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
	END IF;
    -- IF NOT new.ubig_nombre REGEXP '([A-Záéíóúñü-]*[1-9]*)w+$' THEN
		-- SIGNAL SQLSTATE '45000'
		-- SET MESSAGE_TEXT = 'El nombre del ubigeo solo puede contener letras';
	-- END IF;
	IF NOT new.ubig_estado >= 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
	END IF;
	IF NOT new.ubig_estado IN (0, 1) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El estado del ubigeo solo puede contener los valores 0, 1';
	END IF;
END
$$

CREATE TRIGGER trg_ubigeo_beforeUpdate
	BEFORE UPDATE
	ON ubigeo
	FOR EACH ROW
BEGIN
    IF NOT length(trim(new.ubig_codigo)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo codigo no debe estar en blanco';
    END IF;
    IF NOT new.ubig_dpto_cod >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El codigo del departamento debe ser mayor a cero';
    END IF;
    IF NOT new.ubig_prov_cod >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El codigo de la provincia debe ser mayor a cero';
    END IF;
    IF NOT new.ubig_dist_cod >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El codigo del distrito debe ser mayor a cero';
    END IF;
    IF NOT length(trim(new.ubig_nombre)) > 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo nombre no debe estar en blanco';
    END IF;
    -- IF NOT new.ubig_nombre REGEXP '([A-Záéíóúñü-]*[1-9]*)w+$' THEN
         -- SIGNAL SQLSTATE '45000'
         -- SET MESSAGE_TEXT = 'El nombre del ubigeo solo puede contener letras';
    -- END IF;
    IF NOT new.ubig_estado >= 0 THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El campo estado debe ser mayor igual a cero';
    END IF;
    IF NOT new.ubig_estado IN (0, 1) THEN
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El estado del ubigeo solo puede contener los valores 0, 1';
    END IF;
END
$$

DELIMITER ;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;